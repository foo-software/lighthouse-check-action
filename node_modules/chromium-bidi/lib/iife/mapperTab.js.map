{"version":3,"file":"mapperTab.js","sources":["../cjs/protocol/protocol.js","../../node_modules/zod/lib/helpers/util.js","../../node_modules/zod/lib/ZodError.js","../../node_modules/zod/lib/helpers/parseUtil.js","../../node_modules/zod/lib/helpers/typeAliases.js","../../node_modules/zod/lib/helpers/errorUtil.js","../../node_modules/zod/lib/types.js","../../node_modules/zod/lib/external.js","../../node_modules/zod/lib/index.js","../cjs/protocol-parser/protocol-parser.js","../cjs/utils/log.js","../cjs/bidiTab/mapperTabPage.js","../cjs/utils/deferred.js","../cjs/bidiMapper/domains/log/logHelper.js","../cjs/bidiMapper/domains/log/logManager.js","../cjs/bidiMapper/domains/script/scriptEvaluator.js","../cjs/bidiMapper/domains/script/realm.js","../cjs/bidiMapper/domains/context/browsingContextImpl.js","../cjs/bidiMapper/domains/context/browsingContextProcessor.js","../cjs/utils/EventEmitter.js","../../node_modules/mitt/dist/mitt.js","../cjs/bidiMapper/OutgoingBidiMessage.js","../cjs/bidiMapper/CommandProcessor.js","../cjs/bidiMapper/domains/context/browsingContextStorage.js","../cjs/utils/buffer.js","../cjs/utils/idWrapper.js","../cjs/bidiMapper/domains/events/SubscriptionManager.js","../cjs/bidiMapper/domains/events/EventManager.js","../cjs/utils/processingQueue.js","../cjs/bidiMapper/domains/script/realmStorage.js","../cjs/bidiMapper/BidiServer.js","../cjs/cdp/cdpClient.js","../cjs/cdp/cdpConnection.js","../cjs/cdp/websocketTransport.js","../cjs/cdp/index.js","../cjs/bidiTab/bidiTab.js"],"sourcesContent":["\"use strict\";\n/**\n * Copyright 2022 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CDP = exports.Log = exports.BrowsingContext = exports.Message = void 0;\nvar Message;\n(function (Message) {\n    class ErrorResponseClass {\n        constructor(error, message, stacktrace) {\n            this.error = error;\n            this.message = message;\n            this.stacktrace = stacktrace;\n        }\n        error;\n        message;\n        stacktrace;\n        toErrorResponse(commandId) {\n            return {\n                id: commandId,\n                error: this.error,\n                message: this.message,\n                stacktrace: this.stacktrace,\n            };\n        }\n    }\n    Message.ErrorResponseClass = ErrorResponseClass;\n    class UnknownException extends ErrorResponseClass {\n        constructor(message, stacktrace) {\n            super('unknown error', message, stacktrace);\n        }\n    }\n    Message.UnknownException = UnknownException;\n    class UnknownCommandException extends ErrorResponseClass {\n        constructor(message, stacktrace) {\n            super('unknown command', message, stacktrace);\n        }\n    }\n    Message.UnknownCommandException = UnknownCommandException;\n    class InvalidArgumentException extends ErrorResponseClass {\n        constructor(message, stacktrace) {\n            super('invalid argument', message, stacktrace);\n        }\n    }\n    Message.InvalidArgumentException = InvalidArgumentException;\n    class NoSuchNodeException extends ErrorResponseClass {\n        constructor(message, stacktrace) {\n            super('no such node', message, stacktrace);\n        }\n    }\n    Message.NoSuchNodeException = NoSuchNodeException;\n    class NoSuchFrameException extends ErrorResponseClass {\n        constructor(message) {\n            super('no such frame', message);\n        }\n    }\n    Message.NoSuchFrameException = NoSuchFrameException;\n})(Message = exports.Message || (exports.Message = {}));\n// https://w3c.github.io/webdriver-bidi/#module-browsingContext\nvar BrowsingContext;\n(function (BrowsingContext) {\n    let EventNames;\n    (function (EventNames) {\n        EventNames[\"LoadEvent\"] = \"browsingContext.load\";\n        EventNames[\"DomContentLoadedEvent\"] = \"browsingContext.domContentLoaded\";\n        EventNames[\"ContextCreatedEvent\"] = \"browsingContext.contextCreated\";\n        EventNames[\"ContextDestroyedEvent\"] = \"browsingContext.contextDestroyed\";\n    })(EventNames = BrowsingContext.EventNames || (BrowsingContext.EventNames = {}));\n    BrowsingContext.AllEvents = 'browsingContext';\n})(BrowsingContext = exports.BrowsingContext || (exports.BrowsingContext = {}));\n// https://w3c.github.io/webdriver-bidi/#module-log\nvar Log;\n(function (Log) {\n    Log.AllEvents = 'log';\n    let EventNames;\n    (function (EventNames) {\n        EventNames[\"LogEntryAddedEvent\"] = \"log.entryAdded\";\n    })(EventNames = Log.EventNames || (Log.EventNames = {}));\n})(Log = exports.Log || (exports.Log = {}));\nvar CDP;\n(function (CDP) {\n    CDP.AllEvents = 'cdp';\n    let EventNames;\n    (function (EventNames) {\n        EventNames[\"EventReceivedEvent\"] = \"cdp.eventReceived\";\n    })(EventNames = CDP.EventNames || (CDP.EventNames = {}));\n})(CDP = exports.CDP || (exports.CDP = {}));\n//# sourceMappingURL=protocol.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getParsedType = exports.ZodParsedType = exports.util = void 0;\nvar util;\n(function (util) {\n    function assertNever(_x) {\n        throw new Error();\n    }\n    util.assertNever = assertNever;\n    util.arrayToEnum = (items) => {\n        const obj = {};\n        for (const item of items) {\n            obj[item] = item;\n        }\n        return obj;\n    };\n    util.getValidEnumValues = (obj) => {\n        const validKeys = util.objectKeys(obj).filter((k) => typeof obj[obj[k]] !== \"number\");\n        const filtered = {};\n        for (const k of validKeys) {\n            filtered[k] = obj[k];\n        }\n        return util.objectValues(filtered);\n    };\n    util.objectValues = (obj) => {\n        return util.objectKeys(obj).map(function (e) {\n            return obj[e];\n        });\n    };\n    util.objectKeys = typeof Object.keys === \"function\" // eslint-disable-line ban/ban\n        ? (obj) => Object.keys(obj) // eslint-disable-line ban/ban\n        : (object) => {\n            const keys = [];\n            for (const key in object) {\n                if (Object.prototype.hasOwnProperty.call(object, key)) {\n                    keys.push(key);\n                }\n            }\n            return keys;\n        };\n    util.find = (arr, checker) => {\n        for (const item of arr) {\n            if (checker(item))\n                return item;\n        }\n        return undefined;\n    };\n    util.isInteger = typeof Number.isInteger === \"function\"\n        ? (val) => Number.isInteger(val) // eslint-disable-line ban/ban\n        : (val) => typeof val === \"number\" && isFinite(val) && Math.floor(val) === val;\n    function joinValues(array, separator = \" | \") {\n        return array\n            .map((val) => (typeof val === \"string\" ? `'${val}'` : val))\n            .join(separator);\n    }\n    util.joinValues = joinValues;\n})(util = exports.util || (exports.util = {}));\nexports.ZodParsedType = util.arrayToEnum([\n    \"string\",\n    \"nan\",\n    \"number\",\n    \"integer\",\n    \"float\",\n    \"boolean\",\n    \"date\",\n    \"bigint\",\n    \"symbol\",\n    \"function\",\n    \"undefined\",\n    \"null\",\n    \"array\",\n    \"object\",\n    \"unknown\",\n    \"promise\",\n    \"void\",\n    \"never\",\n    \"map\",\n    \"set\",\n]);\nconst getParsedType = (data) => {\n    const t = typeof data;\n    switch (t) {\n        case \"undefined\":\n            return exports.ZodParsedType.undefined;\n        case \"string\":\n            return exports.ZodParsedType.string;\n        case \"number\":\n            return isNaN(data) ? exports.ZodParsedType.nan : exports.ZodParsedType.number;\n        case \"boolean\":\n            return exports.ZodParsedType.boolean;\n        case \"function\":\n            return exports.ZodParsedType.function;\n        case \"bigint\":\n            return exports.ZodParsedType.bigint;\n        case \"object\":\n            if (Array.isArray(data)) {\n                return exports.ZodParsedType.array;\n            }\n            if (data === null) {\n                return exports.ZodParsedType.null;\n            }\n            if (data.then &&\n                typeof data.then === \"function\" &&\n                data.catch &&\n                typeof data.catch === \"function\") {\n                return exports.ZodParsedType.promise;\n            }\n            if (typeof Map !== \"undefined\" && data instanceof Map) {\n                return exports.ZodParsedType.map;\n            }\n            if (typeof Set !== \"undefined\" && data instanceof Set) {\n                return exports.ZodParsedType.set;\n            }\n            if (typeof Date !== \"undefined\" && data instanceof Date) {\n                return exports.ZodParsedType.date;\n            }\n            return exports.ZodParsedType.object;\n        default:\n            return exports.ZodParsedType.unknown;\n    }\n};\nexports.getParsedType = getParsedType;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setErrorMap = exports.overrideErrorMap = exports.defaultErrorMap = exports.ZodError = exports.quotelessJson = exports.ZodIssueCode = void 0;\nconst util_1 = require(\"./helpers/util\");\nexports.ZodIssueCode = util_1.util.arrayToEnum([\n    \"invalid_type\",\n    \"invalid_literal\",\n    \"custom\",\n    \"invalid_union\",\n    \"invalid_union_discriminator\",\n    \"invalid_enum_value\",\n    \"unrecognized_keys\",\n    \"invalid_arguments\",\n    \"invalid_return_type\",\n    \"invalid_date\",\n    \"invalid_string\",\n    \"too_small\",\n    \"too_big\",\n    \"invalid_intersection_types\",\n    \"not_multiple_of\",\n]);\nconst quotelessJson = (obj) => {\n    const json = JSON.stringify(obj, null, 2);\n    return json.replace(/\"([^\"]+)\":/g, \"$1:\");\n};\nexports.quotelessJson = quotelessJson;\nclass ZodError extends Error {\n    constructor(issues) {\n        super();\n        this.issues = [];\n        this.addIssue = (sub) => {\n            this.issues = [...this.issues, sub];\n        };\n        this.addIssues = (subs = []) => {\n            this.issues = [...this.issues, ...subs];\n        };\n        const actualProto = new.target.prototype;\n        if (Object.setPrototypeOf) {\n            // eslint-disable-next-line ban/ban\n            Object.setPrototypeOf(this, actualProto);\n        }\n        else {\n            this.__proto__ = actualProto;\n        }\n        this.name = \"ZodError\";\n        this.issues = issues;\n    }\n    get errors() {\n        return this.issues;\n    }\n    format(_mapper) {\n        const mapper = _mapper ||\n            function (issue) {\n                return issue.message;\n            };\n        const fieldErrors = { _errors: [] };\n        const processError = (error) => {\n            for (const issue of error.issues) {\n                if (issue.code === \"invalid_union\") {\n                    issue.unionErrors.map(processError);\n                }\n                else if (issue.code === \"invalid_return_type\") {\n                    processError(issue.returnTypeError);\n                }\n                else if (issue.code === \"invalid_arguments\") {\n                    processError(issue.argumentsError);\n                }\n                else if (issue.path.length === 0) {\n                    fieldErrors._errors.push(mapper(issue));\n                }\n                else {\n                    let curr = fieldErrors;\n                    let i = 0;\n                    while (i < issue.path.length) {\n                        const el = issue.path[i];\n                        const terminal = i === issue.path.length - 1;\n                        if (!terminal) {\n                            curr[el] = curr[el] || { _errors: [] };\n                            // if (typeof el === \"string\") {\n                            //   curr[el] = curr[el] || { _errors: [] };\n                            // } else if (typeof el === \"number\") {\n                            //   const errorArray: any = [];\n                            //   errorArray._errors = [];\n                            //   curr[el] = curr[el] || errorArray;\n                            // }\n                        }\n                        else {\n                            curr[el] = curr[el] || { _errors: [] };\n                            curr[el]._errors.push(mapper(issue));\n                        }\n                        curr = curr[el];\n                        i++;\n                    }\n                }\n            }\n        };\n        processError(this);\n        return fieldErrors;\n    }\n    toString() {\n        return this.message;\n    }\n    get message() {\n        return JSON.stringify(this.issues, null, 2);\n    }\n    get isEmpty() {\n        return this.issues.length === 0;\n    }\n    flatten(mapper = (issue) => issue.message) {\n        const fieldErrors = {};\n        const formErrors = [];\n        for (const sub of this.issues) {\n            if (sub.path.length > 0) {\n                fieldErrors[sub.path[0]] = fieldErrors[sub.path[0]] || [];\n                fieldErrors[sub.path[0]].push(mapper(sub));\n            }\n            else {\n                formErrors.push(mapper(sub));\n            }\n        }\n        return { formErrors, fieldErrors };\n    }\n    get formErrors() {\n        return this.flatten();\n    }\n}\nexports.ZodError = ZodError;\nZodError.create = (issues) => {\n    const error = new ZodError(issues);\n    return error;\n};\nconst defaultErrorMap = (issue, _ctx) => {\n    let message;\n    switch (issue.code) {\n        case exports.ZodIssueCode.invalid_type:\n            if (issue.received === util_1.ZodParsedType.undefined) {\n                message = \"Required\";\n            }\n            else {\n                message = `Expected ${issue.expected}, received ${issue.received}`;\n            }\n            break;\n        case exports.ZodIssueCode.invalid_literal:\n            message = `Invalid literal value, expected ${JSON.stringify(issue.expected)}`;\n            break;\n        case exports.ZodIssueCode.unrecognized_keys:\n            message = `Unrecognized key(s) in object: ${util_1.util.joinValues(issue.keys, \", \")}`;\n            break;\n        case exports.ZodIssueCode.invalid_union:\n            message = `Invalid input`;\n            break;\n        case exports.ZodIssueCode.invalid_union_discriminator:\n            message = `Invalid discriminator value. Expected ${util_1.util.joinValues(issue.options)}`;\n            break;\n        case exports.ZodIssueCode.invalid_enum_value:\n            message = `Invalid enum value. Expected ${util_1.util.joinValues(issue.options)}, received '${issue.received}'`;\n            break;\n        case exports.ZodIssueCode.invalid_arguments:\n            message = `Invalid function arguments`;\n            break;\n        case exports.ZodIssueCode.invalid_return_type:\n            message = `Invalid function return type`;\n            break;\n        case exports.ZodIssueCode.invalid_date:\n            message = `Invalid date`;\n            break;\n        case exports.ZodIssueCode.invalid_string:\n            if (issue.validation !== \"regex\")\n                message = `Invalid ${issue.validation}`;\n            else\n                message = \"Invalid\";\n            break;\n        case exports.ZodIssueCode.too_small:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.inclusive ? `at least` : `more than`} ${issue.minimum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.inclusive ? `at least` : `over`} ${issue.minimum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be greater than ${issue.inclusive ? `or equal to ` : ``}${issue.minimum}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case exports.ZodIssueCode.too_big:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.inclusive ? `at most` : `less than`} ${issue.maximum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.inclusive ? `at most` : `under`} ${issue.maximum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be less than ${issue.inclusive ? `or equal to ` : ``}${issue.maximum}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case exports.ZodIssueCode.custom:\n            message = `Invalid input`;\n            break;\n        case exports.ZodIssueCode.invalid_intersection_types:\n            message = `Intersection results could not be merged`;\n            break;\n        case exports.ZodIssueCode.not_multiple_of:\n            message = `Number must be a multiple of ${issue.multipleOf}`;\n            break;\n        default:\n            message = _ctx.defaultError;\n            util_1.util.assertNever(issue);\n    }\n    return { message };\n};\nexports.defaultErrorMap = defaultErrorMap;\nexports.overrideErrorMap = exports.defaultErrorMap;\nconst setErrorMap = (map) => {\n    exports.overrideErrorMap = map;\n};\nexports.setErrorMap = setErrorMap;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isAsync = exports.isValid = exports.isDirty = exports.isAborted = exports.OK = exports.DIRTY = exports.INVALID = exports.ParseStatus = exports.addIssueToContext = exports.EMPTY_PATH = exports.makeIssue = void 0;\nconst ZodError_1 = require(\"../ZodError\");\nconst makeIssue = (params) => {\n    const { data, path, errorMaps, issueData } = params;\n    const fullPath = [...path, ...(issueData.path || [])];\n    const fullIssue = {\n        ...issueData,\n        path: fullPath,\n    };\n    let errorMessage = \"\";\n    const maps = errorMaps\n        .filter((m) => !!m)\n        .slice()\n        .reverse();\n    for (const map of maps) {\n        errorMessage = map(fullIssue, { data, defaultError: errorMessage }).message;\n    }\n    return {\n        ...issueData,\n        path: fullPath,\n        message: issueData.message || errorMessage,\n    };\n};\nexports.makeIssue = makeIssue;\nexports.EMPTY_PATH = [];\nfunction addIssueToContext(ctx, issueData) {\n    const issue = exports.makeIssue({\n        issueData: issueData,\n        data: ctx.data,\n        path: ctx.path,\n        errorMaps: [\n            ctx.common.contextualErrorMap,\n            ctx.schemaErrorMap,\n            ZodError_1.overrideErrorMap,\n            ZodError_1.defaultErrorMap,\n        ].filter((x) => !!x),\n    });\n    ctx.common.issues.push(issue);\n}\nexports.addIssueToContext = addIssueToContext;\nclass ParseStatus {\n    constructor() {\n        this.value = \"valid\";\n    }\n    dirty() {\n        if (this.value === \"valid\")\n            this.value = \"dirty\";\n    }\n    abort() {\n        if (this.value !== \"aborted\")\n            this.value = \"aborted\";\n    }\n    static mergeArray(status, results) {\n        const arrayValue = [];\n        for (const s of results) {\n            if (s.status === \"aborted\")\n                return exports.INVALID;\n            if (s.status === \"dirty\")\n                status.dirty();\n            arrayValue.push(s.value);\n        }\n        return { status: status.value, value: arrayValue };\n    }\n    static async mergeObjectAsync(status, pairs) {\n        const syncPairs = [];\n        for (const pair of pairs) {\n            syncPairs.push({\n                key: await pair.key,\n                value: await pair.value,\n            });\n        }\n        return ParseStatus.mergeObjectSync(status, syncPairs);\n    }\n    static mergeObjectSync(status, pairs) {\n        const finalObject = {};\n        for (const pair of pairs) {\n            const { key, value } = pair;\n            if (key.status === \"aborted\")\n                return exports.INVALID;\n            if (value.status === \"aborted\")\n                return exports.INVALID;\n            if (key.status === \"dirty\")\n                status.dirty();\n            if (value.status === \"dirty\")\n                status.dirty();\n            if (typeof value.value !== \"undefined\" || pair.alwaysSet) {\n                finalObject[key.value] = value.value;\n            }\n        }\n        return { status: status.value, value: finalObject };\n    }\n}\nexports.ParseStatus = ParseStatus;\nexports.INVALID = Object.freeze({\n    status: \"aborted\",\n});\nconst DIRTY = (value) => ({ status: \"dirty\", value });\nexports.DIRTY = DIRTY;\nconst OK = (value) => ({ status: \"valid\", value });\nexports.OK = OK;\nconst isAborted = (x) => x.status === \"aborted\";\nexports.isAborted = isAborted;\nconst isDirty = (x) => x.status === \"dirty\";\nexports.isDirty = isDirty;\nconst isValid = (x) => x.status === \"valid\";\nexports.isValid = isValid;\nconst isAsync = (x) => typeof Promise !== undefined && x instanceof Promise;\nexports.isAsync = isAsync;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.errorUtil = void 0;\nvar errorUtil;\n(function (errorUtil) {\n    errorUtil.errToObj = (message) => typeof message === \"string\" ? { message } : message || {};\n    errorUtil.toString = (message) => typeof message === \"string\" ? message : message === null || message === void 0 ? void 0 : message.message;\n})(errorUtil = exports.errorUtil || (exports.errorUtil = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.intersection = exports.instanceof = exports.function = exports.enum = exports.effect = exports.discriminatedUnion = exports.date = exports.boolean = exports.bigint = exports.array = exports.any = exports.ZodFirstPartyTypeKind = exports.late = exports.ZodSchema = exports.Schema = exports.custom = exports.ZodNaN = exports.ZodDefault = exports.ZodNullable = exports.ZodOptional = exports.ZodTransformer = exports.ZodEffects = exports.ZodPromise = exports.ZodNativeEnum = exports.ZodEnum = exports.ZodLiteral = exports.ZodLazy = exports.ZodFunction = exports.ZodSet = exports.ZodMap = exports.ZodRecord = exports.ZodTuple = exports.ZodIntersection = exports.ZodDiscriminatedUnion = exports.ZodUnion = exports.ZodObject = exports.objectUtil = exports.ZodArray = exports.ZodVoid = exports.ZodNever = exports.ZodUnknown = exports.ZodAny = exports.ZodNull = exports.ZodUndefined = exports.ZodDate = exports.ZodBoolean = exports.ZodBigInt = exports.ZodNumber = exports.ZodString = exports.ZodType = void 0;\nexports.void = exports.unknown = exports.union = exports.undefined = exports.tuple = exports.transformer = exports.string = exports.strictObject = exports.set = exports.record = exports.promise = exports.preprocess = exports.ostring = exports.optional = exports.onumber = exports.oboolean = exports.object = exports.number = exports.nullable = exports.null = exports.never = exports.nativeEnum = exports.nan = exports.map = exports.literal = exports.lazy = void 0;\nconst errorUtil_1 = require(\"./helpers/errorUtil\");\nconst parseUtil_1 = require(\"./helpers/parseUtil\");\nconst util_1 = require(\"./helpers/util\");\nconst ZodError_1 = require(\"./ZodError\");\nclass ParseInputLazyPath {\n    constructor(parent, value, path, key) {\n        this.parent = parent;\n        this.data = value;\n        this._path = path;\n        this._key = key;\n    }\n    get path() {\n        return this._path.concat(this._key);\n    }\n}\nconst handleResult = (ctx, result) => {\n    if (parseUtil_1.isValid(result)) {\n        return { success: true, data: result.value };\n    }\n    else {\n        if (!ctx.common.issues.length) {\n            throw new Error(\"Validation failed but no issues detected.\");\n        }\n        const error = new ZodError_1.ZodError(ctx.common.issues);\n        return { success: false, error };\n    }\n};\nfunction processCreateParams(params) {\n    if (!params)\n        return {};\n    const { errorMap, invalid_type_error, required_error, description } = params;\n    if (errorMap && (invalid_type_error || required_error)) {\n        throw new Error(`Can't use \"invalid\" or \"required\" in conjunction with custom error map.`);\n    }\n    if (errorMap)\n        return { errorMap: errorMap, description };\n    const customMap = (iss, ctx) => {\n        if (iss.code !== \"invalid_type\")\n            return { message: ctx.defaultError };\n        if (typeof ctx.data === \"undefined\" && required_error)\n            return { message: required_error };\n        if (params.invalid_type_error)\n            return { message: params.invalid_type_error };\n        return { message: ctx.defaultError };\n    };\n    return { errorMap: customMap, description };\n}\nclass ZodType {\n    constructor(def) {\n        /** Alias of safeParseAsync */\n        this.spa = this.safeParseAsync;\n        this.superRefine = this._refinement;\n        this._def = def;\n        this.parse = this.parse.bind(this);\n        this.safeParse = this.safeParse.bind(this);\n        this.parseAsync = this.parseAsync.bind(this);\n        this.safeParseAsync = this.safeParseAsync.bind(this);\n        this.spa = this.spa.bind(this);\n        this.refine = this.refine.bind(this);\n        this.refinement = this.refinement.bind(this);\n        this.superRefine = this.superRefine.bind(this);\n        this.optional = this.optional.bind(this);\n        this.nullable = this.nullable.bind(this);\n        this.nullish = this.nullish.bind(this);\n        this.array = this.array.bind(this);\n        this.promise = this.promise.bind(this);\n        this.or = this.or.bind(this);\n        this.and = this.and.bind(this);\n        this.transform = this.transform.bind(this);\n        this.default = this.default.bind(this);\n        this.describe = this.describe.bind(this);\n        this.isNullable = this.isNullable.bind(this);\n        this.isOptional = this.isOptional.bind(this);\n    }\n    get description() {\n        return this._def.description;\n    }\n    _getType(input) {\n        return util_1.getParsedType(input.data);\n    }\n    _getOrReturnCtx(input, ctx) {\n        return (ctx || {\n            common: input.parent.common,\n            data: input.data,\n            parsedType: util_1.getParsedType(input.data),\n            schemaErrorMap: this._def.errorMap,\n            path: input.path,\n            parent: input.parent,\n        });\n    }\n    _processInputParams(input) {\n        return {\n            status: new parseUtil_1.ParseStatus(),\n            ctx: {\n                common: input.parent.common,\n                data: input.data,\n                parsedType: util_1.getParsedType(input.data),\n                schemaErrorMap: this._def.errorMap,\n                path: input.path,\n                parent: input.parent,\n            },\n        };\n    }\n    _parseSync(input) {\n        const result = this._parse(input);\n        if (parseUtil_1.isAsync(result)) {\n            throw new Error(\"Synchronous parse encountered promise.\");\n        }\n        return result;\n    }\n    _parseAsync(input) {\n        const result = this._parse(input);\n        return Promise.resolve(result);\n    }\n    parse(data, params) {\n        const result = this.safeParse(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    safeParse(data, params) {\n        var _a;\n        const ctx = {\n            common: {\n                issues: [],\n                async: (_a = params === null || params === void 0 ? void 0 : params.async) !== null && _a !== void 0 ? _a : false,\n                contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\n            },\n            path: (params === null || params === void 0 ? void 0 : params.path) || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: util_1.getParsedType(data),\n        };\n        const result = this._parseSync({ data, path: ctx.path, parent: ctx });\n        return handleResult(ctx, result);\n    }\n    async parseAsync(data, params) {\n        const result = await this.safeParseAsync(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    async safeParseAsync(data, params) {\n        const ctx = {\n            common: {\n                issues: [],\n                contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\n                async: true,\n            },\n            path: (params === null || params === void 0 ? void 0 : params.path) || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: util_1.getParsedType(data),\n        };\n        const maybeAsyncResult = this._parse({ data, path: [], parent: ctx });\n        const result = await (parseUtil_1.isAsync(maybeAsyncResult)\n            ? maybeAsyncResult\n            : Promise.resolve(maybeAsyncResult));\n        return handleResult(ctx, result);\n    }\n    refine(check, message) {\n        const getIssueProperties = (val) => {\n            if (typeof message === \"string\" || typeof message === \"undefined\") {\n                return { message };\n            }\n            else if (typeof message === \"function\") {\n                return message(val);\n            }\n            else {\n                return message;\n            }\n        };\n        return this._refinement((val, ctx) => {\n            const result = check(val);\n            const setError = () => ctx.addIssue({\n                code: ZodError_1.ZodIssueCode.custom,\n                ...getIssueProperties(val),\n            });\n            if (typeof Promise !== \"undefined\" && result instanceof Promise) {\n                return result.then((data) => {\n                    if (!data) {\n                        setError();\n                        return false;\n                    }\n                    else {\n                        return true;\n                    }\n                });\n            }\n            if (!result) {\n                setError();\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    refinement(check, refinementData) {\n        return this._refinement((val, ctx) => {\n            if (!check(val)) {\n                ctx.addIssue(typeof refinementData === \"function\"\n                    ? refinementData(val, ctx)\n                    : refinementData);\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    _refinement(refinement) {\n        return new ZodEffects({\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"refinement\", refinement },\n        });\n    }\n    optional() {\n        return ZodOptional.create(this);\n    }\n    nullable() {\n        return ZodNullable.create(this);\n    }\n    nullish() {\n        return this.optional().nullable();\n    }\n    array() {\n        return ZodArray.create(this);\n    }\n    promise() {\n        return ZodPromise.create(this);\n    }\n    or(option) {\n        return ZodUnion.create([this, option]);\n    }\n    and(incoming) {\n        return ZodIntersection.create(this, incoming);\n    }\n    transform(transform) {\n        return new ZodEffects({\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"transform\", transform },\n        });\n    }\n    default(def) {\n        const defaultValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodDefault({\n            innerType: this,\n            defaultValue: defaultValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodDefault,\n        });\n    }\n    describe(description) {\n        const This = this.constructor;\n        return new This({\n            ...this._def,\n            description,\n        });\n    }\n    isOptional() {\n        return this.safeParse(undefined).success;\n    }\n    isNullable() {\n        return this.safeParse(null).success;\n    }\n}\nexports.ZodType = ZodType;\nexports.Schema = ZodType;\nexports.ZodSchema = ZodType;\nconst cuidRegex = /^c[^\\s-]{8,}$/i;\nconst uuidRegex = /^([a-f0-9]{8}-[a-f0-9]{4}-[1-5][a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}|00000000-0000-0000-0000-000000000000)$/i;\n// from https://stackoverflow.com/a/46181/1550155\n// old version: too slow, didn't support unicode\n// const emailRegex = /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i;\n// eslint-disable-next-line\nconst emailRegex = /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\nclass ZodString extends ZodType {\n    constructor() {\n        super(...arguments);\n        this._regex = (regex, validation, message) => this.refinement((data) => regex.test(data), {\n            validation,\n            code: ZodError_1.ZodIssueCode.invalid_string,\n            ...errorUtil_1.errorUtil.errToObj(message),\n        });\n        /**\n         * @deprecated Use z.string().min(1) instead.\n         * @see {@link ZodString.min}\n         */\n        this.nonempty = (message) => this.min(1, errorUtil_1.errorUtil.errToObj(message));\n        this.trim = () => new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"trim\" }],\n        });\n    }\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.string) {\n            const ctx = this._getOrReturnCtx(input);\n            parseUtil_1.addIssueToContext(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.string,\n                received: ctx.parsedType,\n            }\n            //\n            );\n            return parseUtil_1.INVALID;\n        }\n        const status = new parseUtil_1.ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.length < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    parseUtil_1.addIssueToContext(ctx, {\n                        code: ZodError_1.ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.length > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    parseUtil_1.addIssueToContext(ctx, {\n                        code: ZodError_1.ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"email\") {\n                if (!emailRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    parseUtil_1.addIssueToContext(ctx, {\n                        validation: \"email\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"uuid\") {\n                if (!uuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    parseUtil_1.addIssueToContext(ctx, {\n                        validation: \"uuid\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid\") {\n                if (!cuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    parseUtil_1.addIssueToContext(ctx, {\n                        validation: \"cuid\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"url\") {\n                try {\n                    new URL(input.data);\n                }\n                catch (_a) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    parseUtil_1.addIssueToContext(ctx, {\n                        validation: \"url\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"regex\") {\n                check.regex.lastIndex = 0;\n                const testResult = check.regex.test(input.data);\n                if (!testResult) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    parseUtil_1.addIssueToContext(ctx, {\n                        validation: \"regex\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"trim\") {\n                input.data = input.data.trim();\n            }\n            else {\n                util_1.util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _addCheck(check) {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    email(message) {\n        return this._addCheck({ kind: \"email\", ...errorUtil_1.errorUtil.errToObj(message) });\n    }\n    url(message) {\n        return this._addCheck({ kind: \"url\", ...errorUtil_1.errorUtil.errToObj(message) });\n    }\n    uuid(message) {\n        return this._addCheck({ kind: \"uuid\", ...errorUtil_1.errorUtil.errToObj(message) });\n    }\n    cuid(message) {\n        return this._addCheck({ kind: \"cuid\", ...errorUtil_1.errorUtil.errToObj(message) });\n    }\n    regex(regex, message) {\n        return this._addCheck({\n            kind: \"regex\",\n            regex: regex,\n            ...errorUtil_1.errorUtil.errToObj(message),\n        });\n    }\n    min(minLength, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minLength,\n            ...errorUtil_1.errorUtil.errToObj(message),\n        });\n    }\n    max(maxLength, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxLength,\n            ...errorUtil_1.errorUtil.errToObj(message),\n        });\n    }\n    length(len, message) {\n        return this.min(len, message).max(len, message);\n    }\n    get isEmail() {\n        return !!this._def.checks.find((ch) => ch.kind === \"email\");\n    }\n    get isURL() {\n        return !!this._def.checks.find((ch) => ch.kind === \"url\");\n    }\n    get isUUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"uuid\");\n    }\n    get isCUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid\");\n    }\n    get minLength() {\n        let min = -Infinity;\n        this._def.checks.map((ch) => {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min) {\n                    min = ch.value;\n                }\n            }\n        });\n        return min;\n    }\n    get maxLength() {\n        let max = null;\n        this._def.checks.map((ch) => {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max) {\n                    max = ch.value;\n                }\n            }\n        });\n        return max;\n    }\n}\nexports.ZodString = ZodString;\nZodString.create = (params) => {\n    return new ZodString({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodString,\n        ...processCreateParams(params),\n    });\n};\n// https://stackoverflow.com/questions/3966484/why-does-modulus-operator-return-fractional-number-in-javascript/31711034#31711034\nfunction floatSafeRemainder(val, step) {\n    const valDecCount = (val.toString().split(\".\")[1] || \"\").length;\n    const stepDecCount = (step.toString().split(\".\")[1] || \"\").length;\n    const decCount = valDecCount > stepDecCount ? valDecCount : stepDecCount;\n    const valInt = parseInt(val.toFixed(decCount).replace(\".\", \"\"));\n    const stepInt = parseInt(step.toFixed(decCount).replace(\".\", \"\"));\n    return (valInt % stepInt) / Math.pow(10, decCount);\n}\nclass ZodNumber extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n        this.step = this.multipleOf;\n    }\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.number) {\n            const ctx = this._getOrReturnCtx(input);\n            parseUtil_1.addIssueToContext(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.number,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        let ctx = undefined;\n        const status = new parseUtil_1.ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"int\") {\n                if (!util_1.util.isInteger(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    parseUtil_1.addIssueToContext(ctx, {\n                        code: ZodError_1.ZodIssueCode.invalid_type,\n                        expected: \"integer\",\n                        received: \"float\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"min\") {\n                const tooSmall = check.inclusive\n                    ? input.data < check.value\n                    : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    parseUtil_1.addIssueToContext(ctx, {\n                        code: ZodError_1.ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive\n                    ? input.data > check.value\n                    : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    parseUtil_1.addIssueToContext(ctx, {\n                        code: ZodError_1.ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (floatSafeRemainder(input.data, check.value) !== 0) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    parseUtil_1.addIssueToContext(ctx, {\n                        code: ZodError_1.ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util_1.util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil_1.errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil_1.errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil_1.errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil_1.errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil_1.errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    int(message) {\n        return this._addCheck({\n            kind: \"int\",\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value: value,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n    get isInt() {\n        return !!this._def.checks.find((ch) => ch.kind === \"int\");\n    }\n}\nexports.ZodNumber = ZodNumber;\nZodNumber.create = (params) => {\n    return new ZodNumber({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodNumber,\n        ...processCreateParams(params),\n    });\n};\nclass ZodBigInt extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.bigint) {\n            const ctx = this._getOrReturnCtx(input);\n            parseUtil_1.addIssueToContext(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.bigint,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return parseUtil_1.OK(input.data);\n    }\n}\nexports.ZodBigInt = ZodBigInt;\nZodBigInt.create = (params) => {\n    return new ZodBigInt({\n        typeName: ZodFirstPartyTypeKind.ZodBigInt,\n        ...processCreateParams(params),\n    });\n};\nclass ZodBoolean extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.boolean) {\n            const ctx = this._getOrReturnCtx(input);\n            parseUtil_1.addIssueToContext(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.boolean,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return parseUtil_1.OK(input.data);\n    }\n}\nexports.ZodBoolean = ZodBoolean;\nZodBoolean.create = (params) => {\n    return new ZodBoolean({\n        typeName: ZodFirstPartyTypeKind.ZodBoolean,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDate extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.date) {\n            const ctx = this._getOrReturnCtx(input);\n            parseUtil_1.addIssueToContext(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.date,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        if (isNaN(input.data.getTime())) {\n            const ctx = this._getOrReturnCtx(input);\n            parseUtil_1.addIssueToContext(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_date,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return {\n            status: \"valid\",\n            value: new Date(input.data.getTime()),\n        };\n    }\n}\nexports.ZodDate = ZodDate;\nZodDate.create = (params) => {\n    return new ZodDate({\n        typeName: ZodFirstPartyTypeKind.ZodDate,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUndefined extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            parseUtil_1.addIssueToContext(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.undefined,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return parseUtil_1.OK(input.data);\n    }\n}\nexports.ZodUndefined = ZodUndefined;\nZodUndefined.create = (params) => {\n    return new ZodUndefined({\n        typeName: ZodFirstPartyTypeKind.ZodUndefined,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNull extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.null) {\n            const ctx = this._getOrReturnCtx(input);\n            parseUtil_1.addIssueToContext(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.null,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return parseUtil_1.OK(input.data);\n    }\n}\nexports.ZodNull = ZodNull;\nZodNull.create = (params) => {\n    return new ZodNull({\n        typeName: ZodFirstPartyTypeKind.ZodNull,\n        ...processCreateParams(params),\n    });\n};\nclass ZodAny extends ZodType {\n    constructor() {\n        super(...arguments);\n        // to prevent instances of other classes from extending ZodAny. this causes issues with catchall in ZodObject.\n        this._any = true;\n    }\n    _parse(input) {\n        return parseUtil_1.OK(input.data);\n    }\n}\nexports.ZodAny = ZodAny;\nZodAny.create = (params) => {\n    return new ZodAny({\n        typeName: ZodFirstPartyTypeKind.ZodAny,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUnknown extends ZodType {\n    constructor() {\n        super(...arguments);\n        // required\n        this._unknown = true;\n    }\n    _parse(input) {\n        return parseUtil_1.OK(input.data);\n    }\n}\nexports.ZodUnknown = ZodUnknown;\nZodUnknown.create = (params) => {\n    return new ZodUnknown({\n        typeName: ZodFirstPartyTypeKind.ZodUnknown,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNever extends ZodType {\n    _parse(input) {\n        const ctx = this._getOrReturnCtx(input);\n        parseUtil_1.addIssueToContext(ctx, {\n            code: ZodError_1.ZodIssueCode.invalid_type,\n            expected: util_1.ZodParsedType.never,\n            received: ctx.parsedType,\n        });\n        return parseUtil_1.INVALID;\n    }\n}\nexports.ZodNever = ZodNever;\nZodNever.create = (params) => {\n    return new ZodNever({\n        typeName: ZodFirstPartyTypeKind.ZodNever,\n        ...processCreateParams(params),\n    });\n};\nclass ZodVoid extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            parseUtil_1.addIssueToContext(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.void,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return parseUtil_1.OK(input.data);\n    }\n}\nexports.ZodVoid = ZodVoid;\nZodVoid.create = (params) => {\n    return new ZodVoid({\n        typeName: ZodFirstPartyTypeKind.ZodVoid,\n        ...processCreateParams(params),\n    });\n};\nclass ZodArray extends ZodType {\n    _parse(input) {\n        const { ctx, status } = this._processInputParams(input);\n        const def = this._def;\n        if (ctx.parsedType !== util_1.ZodParsedType.array) {\n            parseUtil_1.addIssueToContext(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        if (def.minLength !== null) {\n            if (ctx.data.length < def.minLength.value) {\n                parseUtil_1.addIssueToContext(ctx, {\n                    code: ZodError_1.ZodIssueCode.too_small,\n                    minimum: def.minLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    message: def.minLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxLength !== null) {\n            if (ctx.data.length > def.maxLength.value) {\n                parseUtil_1.addIssueToContext(ctx, {\n                    code: ZodError_1.ZodIssueCode.too_big,\n                    maximum: def.maxLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    message: def.maxLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.all(ctx.data.map((item, i) => {\n                return def.type._parseAsync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n            })).then((result) => {\n                return parseUtil_1.ParseStatus.mergeArray(status, result);\n            });\n        }\n        const result = ctx.data.map((item, i) => {\n            return def.type._parseSync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n        });\n        return parseUtil_1.ParseStatus.mergeArray(status, result);\n    }\n    get element() {\n        return this._def.type;\n    }\n    min(minLength, message) {\n        return new ZodArray({\n            ...this._def,\n            minLength: { value: minLength, message: errorUtil_1.errorUtil.toString(message) },\n        });\n    }\n    max(maxLength, message) {\n        return new ZodArray({\n            ...this._def,\n            maxLength: { value: maxLength, message: errorUtil_1.errorUtil.toString(message) },\n        });\n    }\n    length(len, message) {\n        return this.min(len, message).max(len, message);\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nexports.ZodArray = ZodArray;\nZodArray.create = (schema, params) => {\n    return new ZodArray({\n        type: schema,\n        minLength: null,\n        maxLength: null,\n        typeName: ZodFirstPartyTypeKind.ZodArray,\n        ...processCreateParams(params),\n    });\n};\n/////////////////////////////////////////\n/////////////////////////////////////////\n//////////                     //////////\n//////////      ZodObject      //////////\n//////////                     //////////\n/////////////////////////////////////////\n/////////////////////////////////////////\nvar objectUtil;\n(function (objectUtil) {\n    objectUtil.mergeShapes = (first, second) => {\n        return {\n            ...first,\n            ...second,\n        };\n    };\n})(objectUtil = exports.objectUtil || (exports.objectUtil = {}));\nconst AugmentFactory = (def) => (augmentation) => {\n    return new ZodObject({\n        ...def,\n        shape: () => ({\n            ...def.shape(),\n            ...augmentation,\n        }),\n    });\n};\nfunction deepPartialify(schema) {\n    if (schema instanceof ZodObject) {\n        const newShape = {};\n        for (const key in schema.shape) {\n            const fieldSchema = schema.shape[key];\n            newShape[key] = ZodOptional.create(deepPartialify(fieldSchema));\n        }\n        return new ZodObject({\n            ...schema._def,\n            shape: () => newShape,\n        });\n    }\n    else if (schema instanceof ZodArray) {\n        return ZodArray.create(deepPartialify(schema.element));\n    }\n    else if (schema instanceof ZodOptional) {\n        return ZodOptional.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodNullable) {\n        return ZodNullable.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodTuple) {\n        return ZodTuple.create(schema.items.map((item) => deepPartialify(item)));\n    }\n    else {\n        return schema;\n    }\n}\nclass ZodObject extends ZodType {\n    constructor() {\n        super(...arguments);\n        this._cached = null;\n        /**\n         * @deprecated In most cases, this is no longer needed - unknown properties are now silently stripped.\n         * If you want to pass through unknown properties, use `.passthrough()` instead.\n         */\n        this.nonstrict = this.passthrough;\n        this.augment = AugmentFactory(this._def);\n        this.extend = AugmentFactory(this._def);\n    }\n    _getCached() {\n        if (this._cached !== null)\n            return this._cached;\n        const shape = this._def.shape();\n        const keys = util_1.util.objectKeys(shape);\n        return (this._cached = { shape, keys });\n    }\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.object) {\n            const ctx = this._getOrReturnCtx(input);\n            parseUtil_1.addIssueToContext(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        const { status, ctx } = this._processInputParams(input);\n        const { shape, keys: shapeKeys } = this._getCached();\n        const extraKeys = [];\n        for (const key in ctx.data) {\n            if (!shapeKeys.includes(key)) {\n                extraKeys.push(key);\n            }\n        }\n        const pairs = [];\n        for (const key of shapeKeys) {\n            const keyValidator = shape[key];\n            const value = ctx.data[key];\n            pairs.push({\n                key: { status: \"valid\", value: key },\n                value: keyValidator._parse(new ParseInputLazyPath(ctx, value, ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (this._def.catchall instanceof ZodNever) {\n            const unknownKeys = this._def.unknownKeys;\n            if (unknownKeys === \"passthrough\") {\n                for (const key of extraKeys) {\n                    pairs.push({\n                        key: { status: \"valid\", value: key },\n                        value: { status: \"valid\", value: ctx.data[key] },\n                    });\n                }\n            }\n            else if (unknownKeys === \"strict\") {\n                if (extraKeys.length > 0) {\n                    parseUtil_1.addIssueToContext(ctx, {\n                        code: ZodError_1.ZodIssueCode.unrecognized_keys,\n                        keys: extraKeys,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (unknownKeys === \"strip\") {\n            }\n            else {\n                throw new Error(`Internal ZodObject error: invalid unknownKeys value.`);\n            }\n        }\n        else {\n            // run catchall validation\n            const catchall = this._def.catchall;\n            for (const key of extraKeys) {\n                const value = ctx.data[key];\n                pairs.push({\n                    key: { status: \"valid\", value: key },\n                    value: catchall._parse(new ParseInputLazyPath(ctx, value, ctx.path, key) //, ctx.child(key), value, getParsedType(value)\n                    ),\n                    alwaysSet: key in ctx.data,\n                });\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.resolve()\n                .then(async () => {\n                const syncPairs = [];\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    syncPairs.push({\n                        key,\n                        value: await pair.value,\n                        alwaysSet: pair.alwaysSet,\n                    });\n                }\n                return syncPairs;\n            })\n                .then((syncPairs) => {\n                return parseUtil_1.ParseStatus.mergeObjectSync(status, syncPairs);\n            });\n        }\n        else {\n            return parseUtil_1.ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get shape() {\n        return this._def.shape();\n    }\n    strict(message) {\n        errorUtil_1.errorUtil.errToObj;\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strict\",\n            ...(message !== undefined\n                ? {\n                    errorMap: (issue, ctx) => {\n                        var _a, _b, _c, _d;\n                        const defaultError = (_c = (_b = (_a = this._def).errorMap) === null || _b === void 0 ? void 0 : _b.call(_a, issue, ctx).message) !== null && _c !== void 0 ? _c : ctx.defaultError;\n                        if (issue.code === \"unrecognized_keys\")\n                            return {\n                                message: (_d = errorUtil_1.errorUtil.errToObj(message).message) !== null && _d !== void 0 ? _d : defaultError,\n                            };\n                        return {\n                            message: defaultError,\n                        };\n                    },\n                }\n                : {}),\n        });\n    }\n    strip() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strip\",\n        });\n    }\n    passthrough() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"passthrough\",\n        });\n    }\n    setKey(key, schema) {\n        return this.augment({ [key]: schema });\n    }\n    /**\n     * Prior to zod@1.0.12 there was a bug in the\n     * inferred type of merged objects. Please\n     * upgrade if you are experiencing issues.\n     */\n    merge(merging) {\n        // const mergedShape = objectUtil.mergeShapes(\n        //   this._def.shape(),\n        //   merging._def.shape()\n        // );\n        const merged = new ZodObject({\n            unknownKeys: merging._def.unknownKeys,\n            catchall: merging._def.catchall,\n            shape: () => objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n            typeName: ZodFirstPartyTypeKind.ZodObject,\n        });\n        return merged;\n    }\n    catchall(index) {\n        return new ZodObject({\n            ...this._def,\n            catchall: index,\n        });\n    }\n    pick(mask) {\n        const shape = {};\n        util_1.util.objectKeys(mask).map((key) => {\n            // only add to shape if key corresponds to an element of the current shape\n            if (this.shape[key])\n                shape[key] = this.shape[key];\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    omit(mask) {\n        const shape = {};\n        util_1.util.objectKeys(this.shape).map((key) => {\n            if (util_1.util.objectKeys(mask).indexOf(key) === -1) {\n                shape[key] = this.shape[key];\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    deepPartial() {\n        return deepPartialify(this);\n    }\n    partial(mask) {\n        const newShape = {};\n        if (mask) {\n            util_1.util.objectKeys(this.shape).map((key) => {\n                if (util_1.util.objectKeys(mask).indexOf(key) === -1) {\n                    newShape[key] = this.shape[key];\n                }\n                else {\n                    newShape[key] = this.shape[key].optional();\n                }\n            });\n            return new ZodObject({\n                ...this._def,\n                shape: () => newShape,\n            });\n        }\n        else {\n            for (const key in this.shape) {\n                const fieldSchema = this.shape[key];\n                newShape[key] = fieldSchema.optional();\n            }\n        }\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    required() {\n        const newShape = {};\n        for (const key in this.shape) {\n            const fieldSchema = this.shape[key];\n            let newField = fieldSchema;\n            while (newField instanceof ZodOptional) {\n                newField = newField._def.innerType;\n            }\n            newShape[key] = newField;\n        }\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n}\nexports.ZodObject = ZodObject;\nZodObject.create = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.strictCreate = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strict\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.lazycreate = (shape, params) => {\n    return new ZodObject({\n        shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const options = this._def.options;\n        function handleResults(results) {\n            // return first issue-free validation if it exists\n            for (const result of results) {\n                if (result.result.status === \"valid\") {\n                    return result.result;\n                }\n            }\n            for (const result of results) {\n                if (result.result.status === \"dirty\") {\n                    // add issues from dirty option\n                    ctx.common.issues.push(...result.ctx.common.issues);\n                    return result.result;\n                }\n            }\n            // return invalid\n            const unionErrors = results.map((result) => new ZodError_1.ZodError(result.ctx.common.issues));\n            parseUtil_1.addIssueToContext(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return parseUtil_1.INVALID;\n        }\n        if (ctx.common.async) {\n            return Promise.all(options.map(async (option) => {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                return {\n                    result: await option._parseAsync({\n                        data: ctx.data,\n                        path: ctx.path,\n                        parent: childCtx,\n                    }),\n                    ctx: childCtx,\n                };\n            })).then(handleResults);\n        }\n        else {\n            let dirty = undefined;\n            const issues = [];\n            for (const option of options) {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                const result = option._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: childCtx,\n                });\n                if (result.status === \"valid\") {\n                    return result;\n                }\n                else if (result.status === \"dirty\" && !dirty) {\n                    dirty = { result, ctx: childCtx };\n                }\n                if (childCtx.common.issues.length) {\n                    issues.push(childCtx.common.issues);\n                }\n            }\n            if (dirty) {\n                ctx.common.issues.push(...dirty.ctx.common.issues);\n                return dirty.result;\n            }\n            const unionErrors = issues.map((issues) => new ZodError_1.ZodError(issues));\n            parseUtil_1.addIssueToContext(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return parseUtil_1.INVALID;\n        }\n    }\n    get options() {\n        return this._def.options;\n    }\n}\nexports.ZodUnion = ZodUnion;\nZodUnion.create = (types, params) => {\n    return new ZodUnion({\n        options: types,\n        typeName: ZodFirstPartyTypeKind.ZodUnion,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDiscriminatedUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== util_1.ZodParsedType.object) {\n            parseUtil_1.addIssueToContext(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        const discriminator = this.discriminator;\n        const discriminatorValue = ctx.data[discriminator];\n        const option = this.options.get(discriminatorValue);\n        if (!option) {\n            parseUtil_1.addIssueToContext(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_union_discriminator,\n                options: this.validDiscriminatorValues,\n                path: [discriminator],\n            });\n            return parseUtil_1.INVALID;\n        }\n        if (ctx.common.async) {\n            return option._parseAsync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n        else {\n            return option._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n    }\n    get discriminator() {\n        return this._def.discriminator;\n    }\n    get validDiscriminatorValues() {\n        return Array.from(this.options.keys());\n    }\n    get options() {\n        return this._def.options;\n    }\n    /**\n     * The constructor of the discriminated union schema. Its behaviour is very similar to that of the normal z.union() constructor.\n     * However, it only allows a union of objects, all of which need to share a discriminator property. This property must\n     * have a different value for each object in the union.\n     * @param discriminator the name of the discriminator property\n     * @param types an array of object schemas\n     * @param params\n     */\n    static create(discriminator, types, params) {\n        // Get all the valid discriminator values\n        const options = new Map();\n        try {\n            types.forEach((type) => {\n                const discriminatorValue = type.shape[discriminator].value;\n                options.set(discriminatorValue, type);\n            });\n        }\n        catch (e) {\n            throw new Error(\"The discriminator value could not be extracted from all the provided schemas\");\n        }\n        // Assert that all the discriminator values are unique\n        if (options.size !== types.length) {\n            throw new Error(\"Some of the discriminator values are not unique\");\n        }\n        return new ZodDiscriminatedUnion({\n            typeName: ZodFirstPartyTypeKind.ZodDiscriminatedUnion,\n            discriminator,\n            options,\n            ...processCreateParams(params),\n        });\n    }\n}\nexports.ZodDiscriminatedUnion = ZodDiscriminatedUnion;\nfunction mergeValues(a, b) {\n    const aType = util_1.getParsedType(a);\n    const bType = util_1.getParsedType(b);\n    if (a === b) {\n        return { valid: true, data: a };\n    }\n    else if (aType === util_1.ZodParsedType.object && bType === util_1.ZodParsedType.object) {\n        const bKeys = util_1.util.objectKeys(b);\n        const sharedKeys = util_1.util\n            .objectKeys(a)\n            .filter((key) => bKeys.indexOf(key) !== -1);\n        const newObj = { ...a, ...b };\n        for (const key of sharedKeys) {\n            const sharedValue = mergeValues(a[key], b[key]);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newObj[key] = sharedValue.data;\n        }\n        return { valid: true, data: newObj };\n    }\n    else if (aType === util_1.ZodParsedType.array && bType === util_1.ZodParsedType.array) {\n        if (a.length !== b.length) {\n            return { valid: false };\n        }\n        const newArray = [];\n        for (let index = 0; index < a.length; index++) {\n            const itemA = a[index];\n            const itemB = b[index];\n            const sharedValue = mergeValues(itemA, itemB);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newArray.push(sharedValue.data);\n        }\n        return { valid: true, data: newArray };\n    }\n    else if (aType === util_1.ZodParsedType.date &&\n        bType === util_1.ZodParsedType.date &&\n        +a === +b) {\n        return { valid: true, data: a };\n    }\n    else {\n        return { valid: false };\n    }\n}\nclass ZodIntersection extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const handleParsed = (parsedLeft, parsedRight) => {\n            if (parseUtil_1.isAborted(parsedLeft) || parseUtil_1.isAborted(parsedRight)) {\n                return parseUtil_1.INVALID;\n            }\n            const merged = mergeValues(parsedLeft.value, parsedRight.value);\n            if (!merged.valid) {\n                parseUtil_1.addIssueToContext(ctx, {\n                    code: ZodError_1.ZodIssueCode.invalid_intersection_types,\n                });\n                return parseUtil_1.INVALID;\n            }\n            if (parseUtil_1.isDirty(parsedLeft) || parseUtil_1.isDirty(parsedRight)) {\n                status.dirty();\n            }\n            return { status: status.value, value: merged.data };\n        };\n        if (ctx.common.async) {\n            return Promise.all([\n                this._def.left._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n                this._def.right._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n            ]).then(([left, right]) => handleParsed(left, right));\n        }\n        else {\n            return handleParsed(this._def.left._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }), this._def.right._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }));\n        }\n    }\n}\nexports.ZodIntersection = ZodIntersection;\nZodIntersection.create = (left, right, params) => {\n    return new ZodIntersection({\n        left: left,\n        right: right,\n        typeName: ZodFirstPartyTypeKind.ZodIntersection,\n        ...processCreateParams(params),\n    });\n};\nclass ZodTuple extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== util_1.ZodParsedType.array) {\n            parseUtil_1.addIssueToContext(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        if (ctx.data.length < this._def.items.length) {\n            parseUtil_1.addIssueToContext(ctx, {\n                code: ZodError_1.ZodIssueCode.too_small,\n                minimum: this._def.items.length,\n                inclusive: true,\n                type: \"array\",\n            });\n            return parseUtil_1.INVALID;\n        }\n        const rest = this._def.rest;\n        if (!rest && ctx.data.length > this._def.items.length) {\n            parseUtil_1.addIssueToContext(ctx, {\n                code: ZodError_1.ZodIssueCode.too_big,\n                maximum: this._def.items.length,\n                inclusive: true,\n                type: \"array\",\n            });\n            status.dirty();\n        }\n        const items = ctx.data\n            .map((item, itemIndex) => {\n            const schema = this._def.items[itemIndex] || this._def.rest;\n            if (!schema)\n                return null;\n            return schema._parse(new ParseInputLazyPath(ctx, item, ctx.path, itemIndex));\n        })\n            .filter((x) => !!x); // filter nulls\n        if (ctx.common.async) {\n            return Promise.all(items).then((results) => {\n                return parseUtil_1.ParseStatus.mergeArray(status, results);\n            });\n        }\n        else {\n            return parseUtil_1.ParseStatus.mergeArray(status, items);\n        }\n    }\n    get items() {\n        return this._def.items;\n    }\n    rest(rest) {\n        return new ZodTuple({\n            ...this._def,\n            rest,\n        });\n    }\n}\nexports.ZodTuple = ZodTuple;\nZodTuple.create = (schemas, params) => {\n    return new ZodTuple({\n        items: schemas,\n        typeName: ZodFirstPartyTypeKind.ZodTuple,\n        rest: null,\n        ...processCreateParams(params),\n    });\n};\nclass ZodRecord extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== util_1.ZodParsedType.object) {\n            parseUtil_1.addIssueToContext(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        const pairs = [];\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        for (const key in ctx.data) {\n            pairs.push({\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, key)),\n                value: valueType._parse(new ParseInputLazyPath(ctx, ctx.data[key], ctx.path, key)),\n            });\n        }\n        if (ctx.common.async) {\n            return parseUtil_1.ParseStatus.mergeObjectAsync(status, pairs);\n        }\n        else {\n            return parseUtil_1.ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get element() {\n        return this._def.valueType;\n    }\n    static create(first, second, third) {\n        if (second instanceof ZodType) {\n            return new ZodRecord({\n                keyType: first,\n                valueType: second,\n                typeName: ZodFirstPartyTypeKind.ZodRecord,\n                ...processCreateParams(third),\n            });\n        }\n        return new ZodRecord({\n            keyType: ZodString.create(),\n            valueType: first,\n            typeName: ZodFirstPartyTypeKind.ZodRecord,\n            ...processCreateParams(second),\n        });\n    }\n}\nexports.ZodRecord = ZodRecord;\nclass ZodMap extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== util_1.ZodParsedType.map) {\n            parseUtil_1.addIssueToContext(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.map,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        const pairs = [...ctx.data.entries()].map(([key, value], index) => {\n            return {\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, [index, \"key\"])),\n                value: valueType._parse(new ParseInputLazyPath(ctx, value, ctx.path, [index, \"value\"])),\n            };\n        });\n        if (ctx.common.async) {\n            const finalMap = new Map();\n            return Promise.resolve().then(async () => {\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    if (key.status === \"aborted\" || value.status === \"aborted\") {\n                        return parseUtil_1.INVALID;\n                    }\n                    if (key.status === \"dirty\" || value.status === \"dirty\") {\n                        status.dirty();\n                    }\n                    finalMap.set(key.value, value.value);\n                }\n                return { status: status.value, value: finalMap };\n            });\n        }\n        else {\n            const finalMap = new Map();\n            for (const pair of pairs) {\n                const key = pair.key;\n                const value = pair.value;\n                if (key.status === \"aborted\" || value.status === \"aborted\") {\n                    return parseUtil_1.INVALID;\n                }\n                if (key.status === \"dirty\" || value.status === \"dirty\") {\n                    status.dirty();\n                }\n                finalMap.set(key.value, value.value);\n            }\n            return { status: status.value, value: finalMap };\n        }\n    }\n}\nexports.ZodMap = ZodMap;\nZodMap.create = (keyType, valueType, params) => {\n    return new ZodMap({\n        valueType,\n        keyType,\n        typeName: ZodFirstPartyTypeKind.ZodMap,\n        ...processCreateParams(params),\n    });\n};\nclass ZodSet extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== util_1.ZodParsedType.set) {\n            parseUtil_1.addIssueToContext(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.set,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        const def = this._def;\n        if (def.minSize !== null) {\n            if (ctx.data.size < def.minSize.value) {\n                parseUtil_1.addIssueToContext(ctx, {\n                    code: ZodError_1.ZodIssueCode.too_small,\n                    minimum: def.minSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    message: def.minSize.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxSize !== null) {\n            if (ctx.data.size > def.maxSize.value) {\n                parseUtil_1.addIssueToContext(ctx, {\n                    code: ZodError_1.ZodIssueCode.too_big,\n                    maximum: def.maxSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    message: def.maxSize.message,\n                });\n                status.dirty();\n            }\n        }\n        const valueType = this._def.valueType;\n        function finalizeSet(elements) {\n            const parsedSet = new Set();\n            for (const element of elements) {\n                if (element.status === \"aborted\")\n                    return parseUtil_1.INVALID;\n                if (element.status === \"dirty\")\n                    status.dirty();\n                parsedSet.add(element.value);\n            }\n            return { status: status.value, value: parsedSet };\n        }\n        const elements = [...ctx.data.values()].map((item, i) => valueType._parse(new ParseInputLazyPath(ctx, item, ctx.path, i)));\n        if (ctx.common.async) {\n            return Promise.all(elements).then((elements) => finalizeSet(elements));\n        }\n        else {\n            return finalizeSet(elements);\n        }\n    }\n    min(minSize, message) {\n        return new ZodSet({\n            ...this._def,\n            minSize: { value: minSize, message: errorUtil_1.errorUtil.toString(message) },\n        });\n    }\n    max(maxSize, message) {\n        return new ZodSet({\n            ...this._def,\n            maxSize: { value: maxSize, message: errorUtil_1.errorUtil.toString(message) },\n        });\n    }\n    size(size, message) {\n        return this.min(size, message).max(size, message);\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nexports.ZodSet = ZodSet;\nZodSet.create = (valueType, params) => {\n    return new ZodSet({\n        valueType,\n        minSize: null,\n        maxSize: null,\n        typeName: ZodFirstPartyTypeKind.ZodSet,\n        ...processCreateParams(params),\n    });\n};\nclass ZodFunction extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.validate = this.implement;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== util_1.ZodParsedType.function) {\n            parseUtil_1.addIssueToContext(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.function,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        function makeArgsIssue(args, error) {\n            return parseUtil_1.makeIssue({\n                data: args,\n                path: ctx.path,\n                errorMaps: [\n                    ctx.common.contextualErrorMap,\n                    ctx.schemaErrorMap,\n                    ZodError_1.overrideErrorMap,\n                    ZodError_1.defaultErrorMap,\n                ].filter((x) => !!x),\n                issueData: {\n                    code: ZodError_1.ZodIssueCode.invalid_arguments,\n                    argumentsError: error,\n                },\n            });\n        }\n        function makeReturnsIssue(returns, error) {\n            return parseUtil_1.makeIssue({\n                data: returns,\n                path: ctx.path,\n                errorMaps: [\n                    ctx.common.contextualErrorMap,\n                    ctx.schemaErrorMap,\n                    ZodError_1.overrideErrorMap,\n                    ZodError_1.defaultErrorMap,\n                ].filter((x) => !!x),\n                issueData: {\n                    code: ZodError_1.ZodIssueCode.invalid_return_type,\n                    returnTypeError: error,\n                },\n            });\n        }\n        const params = { errorMap: ctx.common.contextualErrorMap };\n        const fn = ctx.data;\n        if (this._def.returns instanceof ZodPromise) {\n            return parseUtil_1.OK(async (...args) => {\n                const error = new ZodError_1.ZodError([]);\n                const parsedArgs = await this._def.args\n                    .parseAsync(args, params)\n                    .catch((e) => {\n                    error.addIssue(makeArgsIssue(args, e));\n                    throw error;\n                });\n                const result = await fn(...parsedArgs);\n                const parsedReturns = await this._def.returns._def.type\n                    .parseAsync(result, params)\n                    .catch((e) => {\n                    error.addIssue(makeReturnsIssue(result, e));\n                    throw error;\n                });\n                return parsedReturns;\n            });\n        }\n        else {\n            return parseUtil_1.OK((...args) => {\n                const parsedArgs = this._def.args.safeParse(args, params);\n                if (!parsedArgs.success) {\n                    throw new ZodError_1.ZodError([makeArgsIssue(args, parsedArgs.error)]);\n                }\n                const result = fn(...parsedArgs.data);\n                const parsedReturns = this._def.returns.safeParse(result, params);\n                if (!parsedReturns.success) {\n                    throw new ZodError_1.ZodError([makeReturnsIssue(result, parsedReturns.error)]);\n                }\n                return parsedReturns.data;\n            });\n        }\n    }\n    parameters() {\n        return this._def.args;\n    }\n    returnType() {\n        return this._def.returns;\n    }\n    args(...items) {\n        return new ZodFunction({\n            ...this._def,\n            args: ZodTuple.create(items).rest(ZodUnknown.create()),\n        });\n    }\n    returns(returnType) {\n        return new ZodFunction({\n            ...this._def,\n            returns: returnType,\n        });\n    }\n    implement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    strictImplement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n}\nexports.ZodFunction = ZodFunction;\nZodFunction.create = (args, returns, params) => {\n    return new ZodFunction({\n        args: (args\n            ? args.rest(ZodUnknown.create())\n            : ZodTuple.create([]).rest(ZodUnknown.create())),\n        returns: returns || ZodUnknown.create(),\n        typeName: ZodFirstPartyTypeKind.ZodFunction,\n        ...processCreateParams(params),\n    });\n};\nclass ZodLazy extends ZodType {\n    get schema() {\n        return this._def.getter();\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const lazySchema = this._def.getter();\n        return lazySchema._parse({ data: ctx.data, path: ctx.path, parent: ctx });\n    }\n}\nexports.ZodLazy = ZodLazy;\nZodLazy.create = (getter, params) => {\n    return new ZodLazy({\n        getter: getter,\n        typeName: ZodFirstPartyTypeKind.ZodLazy,\n        ...processCreateParams(params),\n    });\n};\nclass ZodLiteral extends ZodType {\n    _parse(input) {\n        if (input.data !== this._def.value) {\n            const ctx = this._getOrReturnCtx(input);\n            parseUtil_1.addIssueToContext(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_literal,\n                expected: this._def.value,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n    get value() {\n        return this._def.value;\n    }\n}\nexports.ZodLiteral = ZodLiteral;\nZodLiteral.create = (value, params) => {\n    return new ZodLiteral({\n        value: value,\n        typeName: ZodFirstPartyTypeKind.ZodLiteral,\n        ...processCreateParams(params),\n    });\n};\nfunction createZodEnum(values, params) {\n    return new ZodEnum({\n        values: values,\n        typeName: ZodFirstPartyTypeKind.ZodEnum,\n        ...processCreateParams(params),\n    });\n}\nclass ZodEnum extends ZodType {\n    _parse(input) {\n        if (typeof input.data !== \"string\") {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            parseUtil_1.addIssueToContext(ctx, {\n                expected: util_1.util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodError_1.ZodIssueCode.invalid_type,\n            });\n            return parseUtil_1.INVALID;\n        }\n        if (this._def.values.indexOf(input.data) === -1) {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            parseUtil_1.addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodError_1.ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return parseUtil_1.OK(input.data);\n    }\n    get options() {\n        return this._def.values;\n    }\n    get enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Values() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n}\nexports.ZodEnum = ZodEnum;\nZodEnum.create = createZodEnum;\nclass ZodNativeEnum extends ZodType {\n    _parse(input) {\n        const nativeEnumValues = util_1.util.getValidEnumValues(this._def.values);\n        const ctx = this._getOrReturnCtx(input);\n        if (ctx.parsedType !== util_1.ZodParsedType.string &&\n            ctx.parsedType !== util_1.ZodParsedType.number) {\n            const expectedValues = util_1.util.objectValues(nativeEnumValues);\n            parseUtil_1.addIssueToContext(ctx, {\n                expected: util_1.util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodError_1.ZodIssueCode.invalid_type,\n            });\n            return parseUtil_1.INVALID;\n        }\n        if (nativeEnumValues.indexOf(input.data) === -1) {\n            const expectedValues = util_1.util.objectValues(nativeEnumValues);\n            parseUtil_1.addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodError_1.ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return parseUtil_1.OK(input.data);\n    }\n    get enum() {\n        return this._def.values;\n    }\n}\nexports.ZodNativeEnum = ZodNativeEnum;\nZodNativeEnum.create = (values, params) => {\n    return new ZodNativeEnum({\n        values: values,\n        typeName: ZodFirstPartyTypeKind.ZodNativeEnum,\n        ...processCreateParams(params),\n    });\n};\nclass ZodPromise extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== util_1.ZodParsedType.promise &&\n            ctx.common.async === false) {\n            parseUtil_1.addIssueToContext(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.promise,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        const promisified = ctx.parsedType === util_1.ZodParsedType.promise\n            ? ctx.data\n            : Promise.resolve(ctx.data);\n        return parseUtil_1.OK(promisified.then((data) => {\n            return this._def.type.parseAsync(data, {\n                path: ctx.path,\n                errorMap: ctx.common.contextualErrorMap,\n            });\n        }));\n    }\n}\nexports.ZodPromise = ZodPromise;\nZodPromise.create = (schema, params) => {\n    return new ZodPromise({\n        type: schema,\n        typeName: ZodFirstPartyTypeKind.ZodPromise,\n        ...processCreateParams(params),\n    });\n};\nclass ZodEffects extends ZodType {\n    innerType() {\n        return this._def.schema;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const effect = this._def.effect || null;\n        if (effect.type === \"preprocess\") {\n            const processed = effect.transform(ctx.data);\n            if (ctx.common.async) {\n                return Promise.resolve(processed).then((processed) => {\n                    return this._def.schema._parseAsync({\n                        data: processed,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                });\n            }\n            else {\n                return this._def.schema._parseSync({\n                    data: processed,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n            }\n        }\n        const checkCtx = {\n            addIssue: (arg) => {\n                parseUtil_1.addIssueToContext(ctx, arg);\n                if (arg.fatal) {\n                    status.abort();\n                }\n                else {\n                    status.dirty();\n                }\n            },\n            get path() {\n                return ctx.path;\n            },\n        };\n        checkCtx.addIssue = checkCtx.addIssue.bind(checkCtx);\n        if (effect.type === \"refinement\") {\n            const executeRefinement = (acc\n            // effect: RefinementEffect<any>\n            ) => {\n                const result = effect.refinement(acc, checkCtx);\n                if (ctx.common.async) {\n                    return Promise.resolve(result);\n                }\n                if (result instanceof Promise) {\n                    throw new Error(\"Async refinement encountered during synchronous parse operation. Use .parseAsync instead.\");\n                }\n                return acc;\n            };\n            if (ctx.common.async === false) {\n                const inner = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inner.status === \"aborted\")\n                    return parseUtil_1.INVALID;\n                if (inner.status === \"dirty\")\n                    status.dirty();\n                // return value is ignored\n                executeRefinement(inner.value);\n                return { status: status.value, value: inner.value };\n            }\n            else {\n                return this._def.schema\n                    ._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx })\n                    .then((inner) => {\n                    if (inner.status === \"aborted\")\n                        return parseUtil_1.INVALID;\n                    if (inner.status === \"dirty\")\n                        status.dirty();\n                    return executeRefinement(inner.value).then(() => {\n                        return { status: status.value, value: inner.value };\n                    });\n                });\n            }\n        }\n        if (effect.type === \"transform\") {\n            if (ctx.common.async === false) {\n                const base = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                // if (base.status === \"aborted\") return INVALID;\n                // if (base.status === \"dirty\") {\n                //   return { status: \"dirty\", value: base.value };\n                // }\n                if (!parseUtil_1.isValid(base))\n                    return base;\n                const result = effect.transform(base.value, checkCtx);\n                if (result instanceof Promise) {\n                    throw new Error(`Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.`);\n                }\n                return { status: status.value, value: result };\n            }\n            else {\n                return this._def.schema\n                    ._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx })\n                    .then((base) => {\n                    if (!parseUtil_1.isValid(base))\n                        return base;\n                    // if (base.status === \"aborted\") return INVALID;\n                    // if (base.status === \"dirty\") {\n                    //   return { status: \"dirty\", value: base.value };\n                    // }\n                    return Promise.resolve(effect.transform(base.value, checkCtx)).then((result) => ({ status: status.value, value: result }));\n                });\n            }\n        }\n        util_1.util.assertNever(effect);\n    }\n}\nexports.ZodEffects = ZodEffects;\nexports.ZodTransformer = ZodEffects;\nZodEffects.create = (schema, effect, params) => {\n    return new ZodEffects({\n        schema,\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        effect,\n        ...processCreateParams(params),\n    });\n};\nZodEffects.createWithPreprocess = (preprocess, schema, params) => {\n    return new ZodEffects({\n        schema,\n        effect: { type: \"preprocess\", transform: preprocess },\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        ...processCreateParams(params),\n    });\n};\nclass ZodOptional extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === util_1.ZodParsedType.undefined) {\n            return parseUtil_1.OK(undefined);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nexports.ZodOptional = ZodOptional;\nZodOptional.create = (type, params) => {\n    return new ZodOptional({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodOptional,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNullable extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === util_1.ZodParsedType.null) {\n            return parseUtil_1.OK(null);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nexports.ZodNullable = ZodNullable;\nZodNullable.create = (type, params) => {\n    return new ZodNullable({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodNullable,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDefault extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        let data = ctx.data;\n        if (ctx.parsedType === util_1.ZodParsedType.undefined) {\n            data = this._def.defaultValue();\n        }\n        return this._def.innerType._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    removeDefault() {\n        return this._def.innerType;\n    }\n}\nexports.ZodDefault = ZodDefault;\nZodDefault.create = (type, params) => {\n    return new ZodOptional({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodOptional,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNaN extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.nan) {\n            const ctx = this._getOrReturnCtx(input);\n            parseUtil_1.addIssueToContext(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.nan,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n}\nexports.ZodNaN = ZodNaN;\nZodNaN.create = (params) => {\n    return new ZodNaN({\n        typeName: ZodFirstPartyTypeKind.ZodNaN,\n        ...processCreateParams(params),\n    });\n};\nconst custom = (check, params = {}, fatal) => {\n    if (check)\n        return ZodAny.create().superRefine((data, ctx) => {\n            if (!check(data)) {\n                const p = typeof params === \"function\" ? params(data) : params;\n                const p2 = typeof p === \"string\" ? { message: p } : p;\n                ctx.addIssue({ code: \"custom\", ...p2, fatal });\n            }\n        });\n    return ZodAny.create();\n};\nexports.custom = custom;\nexports.late = {\n    object: ZodObject.lazycreate,\n};\nvar ZodFirstPartyTypeKind;\n(function (ZodFirstPartyTypeKind) {\n    ZodFirstPartyTypeKind[\"ZodString\"] = \"ZodString\";\n    ZodFirstPartyTypeKind[\"ZodNumber\"] = \"ZodNumber\";\n    ZodFirstPartyTypeKind[\"ZodNaN\"] = \"ZodNaN\";\n    ZodFirstPartyTypeKind[\"ZodBigInt\"] = \"ZodBigInt\";\n    ZodFirstPartyTypeKind[\"ZodBoolean\"] = \"ZodBoolean\";\n    ZodFirstPartyTypeKind[\"ZodDate\"] = \"ZodDate\";\n    ZodFirstPartyTypeKind[\"ZodUndefined\"] = \"ZodUndefined\";\n    ZodFirstPartyTypeKind[\"ZodNull\"] = \"ZodNull\";\n    ZodFirstPartyTypeKind[\"ZodAny\"] = \"ZodAny\";\n    ZodFirstPartyTypeKind[\"ZodUnknown\"] = \"ZodUnknown\";\n    ZodFirstPartyTypeKind[\"ZodNever\"] = \"ZodNever\";\n    ZodFirstPartyTypeKind[\"ZodVoid\"] = \"ZodVoid\";\n    ZodFirstPartyTypeKind[\"ZodArray\"] = \"ZodArray\";\n    ZodFirstPartyTypeKind[\"ZodObject\"] = \"ZodObject\";\n    ZodFirstPartyTypeKind[\"ZodUnion\"] = \"ZodUnion\";\n    ZodFirstPartyTypeKind[\"ZodDiscriminatedUnion\"] = \"ZodDiscriminatedUnion\";\n    ZodFirstPartyTypeKind[\"ZodIntersection\"] = \"ZodIntersection\";\n    ZodFirstPartyTypeKind[\"ZodTuple\"] = \"ZodTuple\";\n    ZodFirstPartyTypeKind[\"ZodRecord\"] = \"ZodRecord\";\n    ZodFirstPartyTypeKind[\"ZodMap\"] = \"ZodMap\";\n    ZodFirstPartyTypeKind[\"ZodSet\"] = \"ZodSet\";\n    ZodFirstPartyTypeKind[\"ZodFunction\"] = \"ZodFunction\";\n    ZodFirstPartyTypeKind[\"ZodLazy\"] = \"ZodLazy\";\n    ZodFirstPartyTypeKind[\"ZodLiteral\"] = \"ZodLiteral\";\n    ZodFirstPartyTypeKind[\"ZodEnum\"] = \"ZodEnum\";\n    ZodFirstPartyTypeKind[\"ZodEffects\"] = \"ZodEffects\";\n    ZodFirstPartyTypeKind[\"ZodNativeEnum\"] = \"ZodNativeEnum\";\n    ZodFirstPartyTypeKind[\"ZodOptional\"] = \"ZodOptional\";\n    ZodFirstPartyTypeKind[\"ZodNullable\"] = \"ZodNullable\";\n    ZodFirstPartyTypeKind[\"ZodDefault\"] = \"ZodDefault\";\n    ZodFirstPartyTypeKind[\"ZodPromise\"] = \"ZodPromise\";\n})(ZodFirstPartyTypeKind = exports.ZodFirstPartyTypeKind || (exports.ZodFirstPartyTypeKind = {}));\nconst instanceOfType = (cls, params = {\n    message: `Input not instance of ${cls.name}`,\n}) => exports.custom((data) => data instanceof cls, params, true);\nexports.instanceof = instanceOfType;\nconst stringType = ZodString.create;\nexports.string = stringType;\nconst numberType = ZodNumber.create;\nexports.number = numberType;\nconst nanType = ZodNaN.create;\nexports.nan = nanType;\nconst bigIntType = ZodBigInt.create;\nexports.bigint = bigIntType;\nconst booleanType = ZodBoolean.create;\nexports.boolean = booleanType;\nconst dateType = ZodDate.create;\nexports.date = dateType;\nconst undefinedType = ZodUndefined.create;\nexports.undefined = undefinedType;\nconst nullType = ZodNull.create;\nexports.null = nullType;\nconst anyType = ZodAny.create;\nexports.any = anyType;\nconst unknownType = ZodUnknown.create;\nexports.unknown = unknownType;\nconst neverType = ZodNever.create;\nexports.never = neverType;\nconst voidType = ZodVoid.create;\nexports.void = voidType;\nconst arrayType = ZodArray.create;\nexports.array = arrayType;\nconst objectType = ZodObject.create;\nexports.object = objectType;\nconst strictObjectType = ZodObject.strictCreate;\nexports.strictObject = strictObjectType;\nconst unionType = ZodUnion.create;\nexports.union = unionType;\nconst discriminatedUnionType = ZodDiscriminatedUnion.create;\nexports.discriminatedUnion = discriminatedUnionType;\nconst intersectionType = ZodIntersection.create;\nexports.intersection = intersectionType;\nconst tupleType = ZodTuple.create;\nexports.tuple = tupleType;\nconst recordType = ZodRecord.create;\nexports.record = recordType;\nconst mapType = ZodMap.create;\nexports.map = mapType;\nconst setType = ZodSet.create;\nexports.set = setType;\nconst functionType = ZodFunction.create;\nexports.function = functionType;\nconst lazyType = ZodLazy.create;\nexports.lazy = lazyType;\nconst literalType = ZodLiteral.create;\nexports.literal = literalType;\nconst enumType = ZodEnum.create;\nexports.enum = enumType;\nconst nativeEnumType = ZodNativeEnum.create;\nexports.nativeEnum = nativeEnumType;\nconst promiseType = ZodPromise.create;\nexports.promise = promiseType;\nconst effectsType = ZodEffects.create;\nexports.effect = effectsType;\nexports.transformer = effectsType;\nconst optionalType = ZodOptional.create;\nexports.optional = optionalType;\nconst nullableType = ZodNullable.create;\nexports.nullable = nullableType;\nconst preprocessType = ZodEffects.createWithPreprocess;\nexports.preprocess = preprocessType;\nconst ostring = () => stringType().optional();\nexports.ostring = ostring;\nconst onumber = () => numberType().optional();\nexports.onumber = onumber;\nconst oboolean = () => booleanType().optional();\nexports.oboolean = oboolean;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ZodParsedType = exports.getParsedType = void 0;\n__exportStar(require(\"./helpers/parseUtil\"), exports);\n__exportStar(require(\"./helpers/typeAliases\"), exports);\nvar util_1 = require(\"./helpers/util\");\nObject.defineProperty(exports, \"getParsedType\", { enumerable: true, get: function () { return util_1.getParsedType; } });\nObject.defineProperty(exports, \"ZodParsedType\", { enumerable: true, get: function () { return util_1.ZodParsedType; } });\n__exportStar(require(\"./types\"), exports);\n__exportStar(require(\"./ZodError\"), exports);\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.z = void 0;\nconst mod = __importStar(require(\"./external\"));\nexports.z = mod;\n__exportStar(require(\"./external\"), exports);\nexports.default = mod;\n","\"use strict\";\n/**\n * Copyright 2022 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Session = exports.CDP = exports.Log = exports.BrowsingContext = exports.Script = exports.CommonDataTypes = exports.parseObject = void 0;\n/**\n * @file Provides parsing and validator for WebDriver BiDi protocol.\n * Parser types should match the `../protocol` types.\n */\nconst MAX_INT = 9007199254740991;\nconst protocol_js_1 = require(\"../protocol/protocol.js\");\nconst zod_1 = require(\"zod\");\nfunction parseObject(obj, schema) {\n    const parseResult = schema.safeParse(obj);\n    if (parseResult.success) {\n        return parseResult.data;\n    }\n    const errorMessage = parseResult.error.errors\n        .map((e) => `${e.message} in ` +\n        `${e.path.map((p) => JSON.stringify(p)).join('/')}.`)\n        .join(' ');\n    throw new protocol_js_1.Message.InvalidArgumentException(errorMessage);\n}\nexports.parseObject = parseObject;\nvar CommonDataTypes;\n(function (CommonDataTypes) {\n    CommonDataTypes.SharedReferenceSchema = zod_1.z.object({\n        sharedId: zod_1.z.string().min(1),\n    });\n    CommonDataTypes.RemoteReferenceSchema = zod_1.z.object({\n        handle: zod_1.z.string().min(1),\n    });\n    // UndefinedValue = {\n    //   type: \"undefined\",\n    // }\n    const UndefinedValueSchema = zod_1.z.object({ type: zod_1.z.literal('undefined') });\n    // NullValue = {\n    //   type: \"null\",\n    // }\n    const NullValueSchema = zod_1.z.object({ type: zod_1.z.literal('null') });\n    // StringValue = {\n    //   type: \"string\",\n    //   value: text,\n    // }\n    const StringValueSchema = zod_1.z.object({\n        type: zod_1.z.literal('string'),\n        value: zod_1.z.string(),\n    });\n    // SpecialNumber = \"NaN\" / \"-0\" / \"Infinity\" / \"-Infinity\";\n    const SpecialNumberSchema = zod_1.z.enum(['NaN', '-0', 'Infinity', '-Infinity']);\n    // NumberValue = {\n    //   type: \"number\",\n    //   value: number / SpecialNumber,\n    // }\n    const NumberValueSchema = zod_1.z.object({\n        type: zod_1.z.literal('number'),\n        value: zod_1.z.union([SpecialNumberSchema, zod_1.z.number()]),\n    });\n    // BooleanValue = {\n    //   type: \"boolean\",\n    //   value: bool,\n    // }\n    const BooleanValueSchema = zod_1.z.object({\n        type: zod_1.z.literal('boolean'),\n        value: zod_1.z.boolean(),\n    });\n    // BigIntValue = {\n    //   type: \"bigint\",\n    //   value: text,\n    // }\n    const BigIntValueSchema = zod_1.z.object({\n        type: zod_1.z.literal('bigint'),\n        value: zod_1.z.string(),\n    });\n    const PrimitiveProtocolValueSchema = zod_1.z.union([\n        UndefinedValueSchema,\n        NullValueSchema,\n        StringValueSchema,\n        NumberValueSchema,\n        BooleanValueSchema,\n        BigIntValueSchema,\n    ]);\n    CommonDataTypes.LocalValueSchema = zod_1.z.lazy(() => zod_1.z.union([\n        PrimitiveProtocolValueSchema,\n        ArrayLocalValueSchema,\n        DateLocalValueSchema,\n        MapLocalValueSchema,\n        ObjectLocalValueSchema,\n        RegExpLocalValueSchema,\n        SetLocalValueSchema,\n    ]));\n    // Order is important, as `parse` is processed in the same order.\n    // `SharedReferenceSchema`->`RemoteReferenceSchema`->`LocalValueSchema`.\n    const LocalOrRemoteValueSchema = zod_1.z.union([\n        CommonDataTypes.SharedReferenceSchema,\n        CommonDataTypes.RemoteReferenceSchema,\n        CommonDataTypes.LocalValueSchema,\n    ]);\n    // ListLocalValue = [*LocalValue];\n    const ListLocalValueSchema = zod_1.z.array(LocalOrRemoteValueSchema);\n    // ArrayLocalValue = {\n    //   type: \"array\",\n    //   value: ListLocalValue,\n    // }\n    const ArrayLocalValueSchema = zod_1.z.lazy(() => zod_1.z.object({\n        type: zod_1.z.literal('array'),\n        value: ListLocalValueSchema,\n    }));\n    // DateLocalValue = {\n    //   type: \"date\",\n    //   value: text\n    // }\n    const DateLocalValueSchema = zod_1.z.object({\n        type: zod_1.z.literal('date'),\n        value: zod_1.z.string().min(1),\n    });\n    // MappingLocalValue = [*[(LocalValue / text), LocalValue]];\n    const MappingLocalValueSchema = zod_1.z.lazy(() => zod_1.z.tuple([\n        zod_1.z.union([zod_1.z.string(), LocalOrRemoteValueSchema]),\n        LocalOrRemoteValueSchema,\n    ]));\n    // MapLocalValue = {\n    //   type: \"map\",\n    //   value: MappingLocalValue,\n    // }\n    const MapLocalValueSchema = zod_1.z.object({\n        type: zod_1.z.literal('map'),\n        value: zod_1.z.array(MappingLocalValueSchema),\n    });\n    // ObjectLocalValue = {\n    //   type: \"object\",\n    //   value: MappingLocalValue,\n    // }\n    const ObjectLocalValueSchema = zod_1.z.object({\n        type: zod_1.z.literal('object'),\n        value: zod_1.z.array(MappingLocalValueSchema),\n    });\n    // RegExpLocalValue = {\n    //   type: \"regexp\",\n    //   value: RegExpValue,\n    // }\n    const RegExpLocalValueSchema = zod_1.z.lazy(() => zod_1.z.object({\n        type: zod_1.z.literal('regexp'),\n        value: zod_1.z.object({\n            pattern: zod_1.z.string(),\n            flags: zod_1.z.string().optional(),\n        }),\n    }));\n    // SetLocalValue = {\n    //   type: \"set\",\n    //   value: ListLocalValue,\n    // }\n    const SetLocalValueSchema = zod_1.z.lazy(() => zod_1.z.object({\n        type: zod_1.z.literal('set'),\n        value: ListLocalValueSchema,\n    }));\n    // BrowsingContext = text;\n    CommonDataTypes.BrowsingContextSchema = zod_1.z.string();\n})(CommonDataTypes = exports.CommonDataTypes || (exports.CommonDataTypes = {}));\nvar Script;\n(function (Script) {\n    const RealmTypeSchema = zod_1.z.enum([\n        'window',\n        'dedicated-worker',\n        'shared-worker',\n        'service-worker',\n        'worker',\n        'paint-worklet',\n        'audio-worklet',\n        'worklet',\n    ]);\n    Script.GetRealmsParametersSchema = zod_1.z.object({\n        context: CommonDataTypes.BrowsingContextSchema.optional(),\n        type: RealmTypeSchema.optional(),\n    });\n    function parseGetRealmsParams(params) {\n        return parseObject(params, Script.GetRealmsParametersSchema);\n    }\n    Script.parseGetRealmsParams = parseGetRealmsParams;\n    // ContextTarget = {\n    //   context: BrowsingContext,\n    //   ?sandbox: text\n    // }\n    const ContextTargetSchema = zod_1.z.object({\n        context: CommonDataTypes.BrowsingContextSchema,\n        sandbox: zod_1.z.string().optional(),\n    });\n    // RealmTarget = {realm: Realm};\n    const RealmTargetSchema = zod_1.z.object({\n        realm: zod_1.z.string().min(1),\n    });\n    // Target = (\n    //   RealmTarget //\n    //   ContextTarget\n    // );\n    // Order is important, as `parse` is processed in the same order.\n    // `RealmTargetSchema` has higher priority.\n    const TargetSchema = zod_1.z.union([RealmTargetSchema, ContextTargetSchema]);\n    const OwnershipModelSchema = zod_1.z.enum(['root', 'none']);\n    // ScriptEvaluateParameters = {\n    //   expression: text;\n    //   target: Target;\n    //   ?awaitPromise: bool;\n    //   ?resultOwnership: OwnershipModel;\n    // }\n    const EvaluateParametersSchema = zod_1.z.object({\n        expression: zod_1.z.string(),\n        awaitPromise: zod_1.z.boolean(),\n        target: TargetSchema,\n        resultOwnership: OwnershipModelSchema.optional(),\n    });\n    function parseEvaluateParams(params) {\n        return parseObject(params, EvaluateParametersSchema);\n    }\n    Script.parseEvaluateParams = parseEvaluateParams;\n    const DisownParametersSchema = zod_1.z.object({\n        target: TargetSchema,\n        handles: zod_1.z.array(zod_1.z.string()),\n    });\n    function parseDisownParams(params) {\n        return parseObject(params, DisownParametersSchema);\n    }\n    Script.parseDisownParams = parseDisownParams;\n    const ArgumentValueSchema = zod_1.z.union([\n        CommonDataTypes.RemoteReferenceSchema,\n        CommonDataTypes.SharedReferenceSchema,\n        CommonDataTypes.LocalValueSchema,\n    ]);\n    const ScriptCallFunctionParametersSchema = zod_1.z.object({\n        functionDeclaration: zod_1.z.string(),\n        target: TargetSchema,\n        arguments: zod_1.z.array(ArgumentValueSchema).optional(),\n        this: ArgumentValueSchema.optional(),\n        awaitPromise: zod_1.z.boolean(),\n        resultOwnership: OwnershipModelSchema.optional(),\n    });\n    function parseCallFunctionParams(params) {\n        return parseObject(params, ScriptCallFunctionParametersSchema);\n    }\n    Script.parseCallFunctionParams = parseCallFunctionParams;\n})(Script = exports.Script || (exports.Script = {}));\n// https://w3c.github.io/webdriver-bidi/#module-browsingContext\nvar BrowsingContext;\n(function (BrowsingContext) {\n    const GetTreeParametersSchema = zod_1.z.object({\n        maxDepth: zod_1.z.number().int().nonnegative().max(MAX_INT).optional(),\n        root: CommonDataTypes.BrowsingContextSchema.optional(),\n    });\n    function parseGetTreeParams(params) {\n        return parseObject(params, GetTreeParametersSchema);\n    }\n    BrowsingContext.parseGetTreeParams = parseGetTreeParams;\n    const ReadinessStateSchema = zod_1.z.enum(['none', 'interactive', 'complete']);\n    // BrowsingContextNavigateParameters = {\n    //   context: BrowsingContext,\n    //   url: text,\n    //   ?wait: ReadinessState,\n    // }\n    // ReadinessState = \"none\" / \"interactive\" / \"complete\"\n    const NavigateParametersSchema = zod_1.z.object({\n        context: CommonDataTypes.BrowsingContextSchema,\n        url: zod_1.z.string().url(),\n        wait: ReadinessStateSchema.optional(),\n    });\n    function parseNavigateParams(params) {\n        return parseObject(params, NavigateParametersSchema);\n    }\n    BrowsingContext.parseNavigateParams = parseNavigateParams;\n    // BrowsingContextCreateType = \"tab\" / \"window\"\n    //\n    // BrowsingContextCreateParameters = {\n    //   type: BrowsingContextCreateType\n    // }\n    const CreateParametersSchema = zod_1.z.object({\n        type: zod_1.z.enum(['tab', 'window']),\n        referenceContext: CommonDataTypes.BrowsingContextSchema.optional(),\n    });\n    function parseCreateParams(params) {\n        return parseObject(params, CreateParametersSchema);\n    }\n    BrowsingContext.parseCreateParams = parseCreateParams;\n    // BrowsingContextCloseParameters = {\n    //   context: BrowsingContext\n    // }\n    const CloseParametersSchema = zod_1.z.object({\n        context: CommonDataTypes.BrowsingContextSchema,\n    });\n    function parseCloseParams(params) {\n        return parseObject(params, CloseParametersSchema);\n    }\n    BrowsingContext.parseCloseParams = parseCloseParams;\n    BrowsingContext.AllEvents = 'browsingContext';\n    let EventNames;\n    (function (EventNames) {\n        EventNames[\"LoadEvent\"] = \"browsingContext.load\";\n        EventNames[\"DomContentLoadedEvent\"] = \"browsingContext.domContentLoaded\";\n        EventNames[\"ContextCreatedEvent\"] = \"browsingContext.contextCreated\";\n        EventNames[\"ContextDestroyedEvent\"] = \"browsingContext.contextDestroyed\";\n    })(EventNames = BrowsingContext.EventNames || (BrowsingContext.EventNames = {}));\n})(BrowsingContext = exports.BrowsingContext || (exports.BrowsingContext = {}));\n// https://w3c.github.io/webdriver-bidi/#module-log\nvar Log;\n(function (Log) {\n    Log.AllEvents = 'log';\n    let EventNames;\n    (function (EventNames) {\n        EventNames[\"LogEntryAddedEvent\"] = \"log.entryAdded\";\n    })(EventNames = Log.EventNames || (Log.EventNames = {}));\n})(Log = exports.Log || (exports.Log = {}));\nvar CDP;\n(function (CDP) {\n    const SendCommandParamsSchema = zod_1.z.object({\n        cdpMethod: zod_1.z.string(),\n        // `passthrough` allows object to have any fields.\n        // https://github.com/colinhacks/zod#passthrough\n        cdpParams: zod_1.z.object({}).passthrough(),\n        cdpSession: zod_1.z.string().optional(),\n    });\n    function parseSendCommandParams(params) {\n        return parseObject(params, SendCommandParamsSchema);\n    }\n    CDP.parseSendCommandParams = parseSendCommandParams;\n    const GetSessionParamsSchema = zod_1.z.object({\n        context: CommonDataTypes.BrowsingContextSchema,\n    });\n    function parseGetSessionParams(params) {\n        return parseObject(params, GetSessionParamsSchema);\n    }\n    CDP.parseGetSessionParams = parseGetSessionParams;\n    CDP.AllEvents = 'cdp';\n    let EventNames;\n    (function (EventNames) {\n        EventNames[\"EventReceivedEvent\"] = \"cdp.eventReceived\";\n    })(EventNames = CDP.EventNames || (CDP.EventNames = {}));\n})(CDP = exports.CDP || (exports.CDP = {}));\nvar Session;\n(function (Session) {\n    const SubscribeParametersEventSchema = zod_1.z.enum([\n        BrowsingContext.AllEvents,\n        BrowsingContext.EventNames.ContextCreatedEvent,\n        BrowsingContext.EventNames.ContextDestroyedEvent,\n        BrowsingContext.EventNames.DomContentLoadedEvent,\n        BrowsingContext.EventNames.LoadEvent,\n        Log.AllEvents,\n        Log.EventNames.LogEntryAddedEvent,\n        CDP.AllEvents,\n        CDP.EventNames.EventReceivedEvent,\n    ]);\n    // SessionSubscribeParameters = {\n    //   events: [*text],\n    //   ?contexts: [*BrowsingContext],\n    // }\n    const SubscribeParametersSchema = zod_1.z.object({\n        events: zod_1.z.array(SubscribeParametersEventSchema),\n        contexts: zod_1.z.array(CommonDataTypes.BrowsingContextSchema).optional(),\n    });\n    function parseSubscribeParams(params) {\n        return parseObject(params, SubscribeParametersSchema);\n    }\n    Session.parseSubscribeParams = parseSubscribeParams;\n})(Session = exports.Session || (exports.Session = {}));\n//# sourceMappingURL=protocol-parser.js.map","\"use strict\";\n/**\n * Copyright 2021 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LogType = void 0;\nvar LogType;\n(function (LogType) {\n    LogType[\"bidi\"] = \"BiDi Messages\";\n    LogType[\"browsingContexts\"] = \"Browsing Contexts\";\n    LogType[\"cdp\"] = \"CDP\";\n    LogType[\"system\"] = \"System\";\n})(LogType = exports.LogType || (exports.LogType = {}));\n//# sourceMappingURL=log.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.log = exports.generatePage = void 0;\n/**\n * Copyright 2022 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst log_js_1 = require(\"../utils/log.js\");\n/** HTML source code for the user-facing Mapper tab. */\nconst mapperPageSource = '<!DOCTYPE html><title>BiDi-CDP Mapper</title><style>body{font-family: Roboto, serif; font-size: 13px; color: #202124;}.log{padding: 12px; font-family: Menlo, Consolas, Monaco, Liberation Mono, Lucida Console, monospace; font-size: 11px; line-height: 180%; background: #f1f3f4; border-radius: 4px;}.pre{overflow-wrap: break-word; padding: 10px;}.card{margin: 60px auto; padding: 2px 0; max-width: 900px; box-shadow: 0 1px 4px rgba(0, 0, 0, 0.15), 0 1px 6px rgba(0, 0, 0, 0.2); border-radius: 8px;}.divider{height: 1px; background: #f0f0f0;}.item{padding: 16px 20px;}</style><div class=\"card\"><div class=\"item\"><h1>BiDi-CDP Mapper is controlling this tab</h1><p>Closing or reloading it will stop the BiDi process. <a target=\"_blank\" title=\"BiDi-CDP Mapper GitHub Repository\" href=\"https://github.com/GoogleChromeLabs/chromium-bidi\">Details.</a></p></div><div class=\"divider\"></div><details id=\"details\"><summary class=\"item\">Debug information</summary></details></div>';\n/**\n * The following piece of HTML should be added to the `debug` element:\n *\n * <div class=\"divider\"></div>\n * <div class=\"item\">\n * <h3>${name}</h3>\n * <div id=\"${name}_log\" class=\"log\">\n */\nfunction findOrCreateTypeLogContainer(logType) {\n    const containerId = `${logType}_log`;\n    const existingContainer = document.getElementById(containerId);\n    if (existingContainer) {\n        return existingContainer;\n    }\n    const debugElement = document.getElementById('details');\n    const divider = document.createElement('div');\n    divider.className = 'divider';\n    debugElement.appendChild(divider);\n    const htmlItem = document.createElement('div');\n    htmlItem.className = 'item';\n    htmlItem.innerHTML = `<h3>${logType}</h3><div id=\"${containerId}\" class=\"log\"></div>`;\n    debugElement.appendChild(htmlItem);\n    return document.getElementById(containerId);\n}\nfunction generatePage() {\n    // If run not in browser (e.g. unit test), do nothing.\n    if (!globalThis.document?.documentElement) {\n        return;\n    }\n    window.document.documentElement.innerHTML = mapperPageSource;\n    // Create main log containers in proper order.\n    findOrCreateTypeLogContainer(log_js_1.LogType.system);\n    findOrCreateTypeLogContainer(log_js_1.LogType.bidi);\n    findOrCreateTypeLogContainer(log_js_1.LogType.browsingContexts);\n    findOrCreateTypeLogContainer(log_js_1.LogType.cdp);\n}\nexports.generatePage = generatePage;\nfunction log(logType, ...messages) {\n    // If run not in browser (e.g. unit test), do nothing.\n    if (!globalThis.document?.documentElement) {\n        return;\n    }\n    const typeLogContainer = findOrCreateTypeLogContainer(logType);\n    // This piece of HTML should be added:\n    // <div class=\"pre\">...log message...</div>\n    const lineElement = document.createElement('div');\n    lineElement.className = 'pre';\n    lineElement.textContent = messages.join(' ');\n    typeLogContainer.appendChild(lineElement);\n}\nexports.log = log;\n//# sourceMappingURL=mapperTabPage.js.map","\"use strict\";\n/**\n * Copyright 2022 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Deferred = void 0;\nclass Deferred {\n    #resolve = () => { };\n    #reject = () => { };\n    #promise;\n    #isFinished = false;\n    get isFinished() {\n        return this.#isFinished;\n    }\n    constructor() {\n        this.#promise = new Promise((resolve, reject) => {\n            this.#resolve = resolve;\n            this.#reject = reject;\n        });\n    }\n    then(onFulfilled, onRejected) {\n        return this.#promise.then(onFulfilled, onRejected);\n    }\n    catch(onRejected) {\n        return this.#promise.catch(onRejected);\n    }\n    resolve(value) {\n        this.#isFinished = true;\n        this.#resolve(value);\n    }\n    reject(reason) {\n        this.#isFinished = true;\n        this.#reject(reason);\n    }\n    finally(onFinally) {\n        return this.#promise.finally(onFinally);\n    }\n    [Symbol.toStringTag] = 'Promise';\n}\nexports.Deferred = Deferred;\n//# sourceMappingURL=deferred.js.map","\"use strict\";\n/**\n * Copyright 2022 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRemoteValuesText = exports.logMessageFormatter = void 0;\nconst specifiers = ['%s', '%d', '%i', '%f', '%o', '%O', '%c'];\nfunction isFormmatSpecifier(str) {\n    return specifiers.some((spec) => str.includes(spec));\n}\n/**\n * @param args input remote values to be format printed\n * @returns parsed text of the remote values in specific format\n */\nfunction logMessageFormatter(args) {\n    let output = '';\n    const argFormat = args[0].value.toString();\n    const argValues = args.slice(1, undefined);\n    const tokens = argFormat.split(new RegExp(specifiers.map((spec) => `(${spec})`).join('|'), 'g'));\n    for (const token of tokens) {\n        if (token === undefined || token === '') {\n            continue;\n        }\n        if (isFormmatSpecifier(token)) {\n            const arg = argValues.shift();\n            // raise an exception when less value is provided\n            if (arg === undefined) {\n                throw new Error(`Less value is provided: \"${getRemoteValuesText(args, false)}\"`);\n            }\n            if (token === '%s') {\n                output += stringFromArg(arg);\n            }\n            else if (token === '%d' || token === '%i') {\n                if (arg.type === 'bigint' ||\n                    arg.type === 'number' ||\n                    arg.type === 'string') {\n                    output += parseInt(arg.value.toString(), 10);\n                }\n                else {\n                    output += 'NaN';\n                }\n            }\n            else if (token === '%f') {\n                if (arg.type === 'bigint' ||\n                    arg.type === 'number' ||\n                    arg.type === 'string') {\n                    output += parseFloat(arg.value.toString());\n                }\n                else {\n                    output += 'NaN';\n                }\n            }\n            else {\n                // %o, %O, %c\n                output += toJson(arg);\n            }\n        }\n        else {\n            output += token;\n        }\n    }\n    // raise an exception when more value is provided\n    if (argValues.length > 0) {\n        throw new Error(`More value is provided: \"${getRemoteValuesText(args, false)}\"`);\n    }\n    return output;\n}\nexports.logMessageFormatter = logMessageFormatter;\n/**\n * @param arg input remote value to be parsed\n * @returns parsed text of the remote value\n *\n * input: {\"type\": \"number\", \"value\": 1}\n * output: 1\n *\n * input: {\"type\": \"string\", \"value\": \"abc\"}\n * output: \"abc\"\n *\n * input: {\"type\": \"object\",  \"value\": [[\"id\", {\"type\": \"number\", \"value\": 1}]]}\n * output: '{\"id\": 1}'\n *\n * input: {\"type\": \"object\", \"value\": [[\"font-size\", {\"type\": \"string\", \"value\": \"20px\"}]]}\n * output: '{\"font-size\": \"20px\"}'\n */\nfunction toJson(arg) {\n    // arg type validation\n    if (arg.type !== 'array' &&\n        arg.type !== 'bigint' &&\n        arg.type !== 'date' &&\n        arg.type !== 'number' &&\n        arg.type !== 'object' &&\n        arg.type !== 'string') {\n        return stringFromArg(arg);\n    }\n    if (arg.type === 'bigint') {\n        return `${arg.value.toString()}n`;\n    }\n    if (arg.type === 'number') {\n        return arg.value.toString();\n    }\n    if (['date', 'string'].includes(arg.type)) {\n        return JSON.stringify(arg.value);\n    }\n    if (arg.type === 'object') {\n        return `{${arg.value\n            .map((pair) => {\n            return `${JSON.stringify(pair[0])}:${toJson(pair[1])}`;\n        })\n            .join(',')}}`;\n    }\n    if (arg.type === 'array') {\n        return `[${arg.value.map((val) => toJson(val)).join(',')}]`;\n    }\n    throw Error(`Invalid value type: ${arg.toString()}`);\n}\nfunction stringFromArg(arg) {\n    if (!Object.hasOwn(arg, 'value')) {\n        return arg.type;\n    }\n    switch (arg.type) {\n        case 'string':\n        case 'number':\n        case 'boolean':\n        case 'bigint':\n            return String(arg.value);\n        case 'regexp':\n            return `/${arg.value.pattern}/${arg.value.flags}`;\n        case 'date':\n            return new Date(arg.value).toString();\n        case 'object':\n            return `Object(${arg.value?.length})`;\n        case 'array':\n            return `Array(${arg.value?.length})`;\n        case 'map':\n            return `Map(${arg.value.length})`;\n        case 'set':\n            return `Set(${arg.value.length})`;\n        case 'node':\n            return 'node';\n        default:\n            return arg.type;\n    }\n}\nfunction getRemoteValuesText(args, formatText) {\n    const arg = args[0];\n    if (!arg) {\n        return '';\n    }\n    // if args[0] is a format specifier, format the args as output\n    if (arg.type === 'string' &&\n        isFormmatSpecifier(arg.value.toString()) &&\n        formatText) {\n        return logMessageFormatter(args);\n    }\n    // if args[0] is not a format specifier, just join the args with \\u0020\n    return args\n        .map((arg) => {\n        return stringFromArg(arg);\n    })\n        .join('\\u0020');\n}\nexports.getRemoteValuesText = getRemoteValuesText;\n//# sourceMappingURL=logHelper.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LogManager = void 0;\n/**\n * Copyright 2021 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst protocol_js_1 = require(\"../../../protocol/protocol.js\");\nconst logHelper_js_1 = require(\"./logHelper.js\");\n/** Converts CDP StackTrace object to Bidi StackTrace object. */\nfunction getBidiStackTrace(cdpStackTrace) {\n    const stackFrames = cdpStackTrace?.callFrames.map((callFrame) => {\n        return {\n            columnNumber: callFrame.columnNumber,\n            functionName: callFrame.functionName,\n            lineNumber: callFrame.lineNumber,\n            url: callFrame.url,\n        };\n    });\n    return stackFrames ? { callFrames: stackFrames } : undefined;\n}\nfunction getLogLevel(consoleApiType) {\n    if (['assert', 'error'].includes(consoleApiType)) {\n        return 'error';\n    }\n    if (['debug', 'trace'].includes(consoleApiType)) {\n        return 'debug';\n    }\n    if (['warn', 'warning'].includes(consoleApiType)) {\n        return 'warn';\n    }\n    return 'info';\n}\nclass LogManager {\n    #cdpClient;\n    #cdpSessionId;\n    #eventManager;\n    #realmStorage;\n    constructor(realmStorage, cdpClient, cdpSessionId, eventManager) {\n        this.#realmStorage = realmStorage;\n        this.#cdpSessionId = cdpSessionId;\n        this.#cdpClient = cdpClient;\n        this.#eventManager = eventManager;\n    }\n    static create(realmStorage, cdpClient, cdpSessionId, eventManager) {\n        const logManager = new LogManager(realmStorage, cdpClient, cdpSessionId, eventManager);\n        logManager.#initialize();\n        return logManager;\n    }\n    #initialize() {\n        this.#initializeLogEntryAddedEventListener();\n    }\n    #initializeLogEntryAddedEventListener() {\n        this.#cdpClient.on('Runtime.consoleAPICalled', (params) => {\n            // Try to find realm by `cdpSessionId` and `executionContextId`,\n            // if provided.\n            const realm = this.#realmStorage.findRealm({\n                cdpSessionId: this.#cdpSessionId,\n                executionContextId: params.executionContextId,\n            });\n            const argsPromise = realm === undefined\n                ? Promise.resolve(params.args)\n                : // Properly serialize arguments if possible.\n                    Promise.all(params.args.map((arg) => {\n                        return realm.serializeCdpObject(arg, 'none');\n                    }));\n            // No need in waiting for the result, just register the event promise.\n            // noinspection JSIgnoredPromiseFromCall\n            this.#eventManager.registerPromiseEvent(argsPromise.then((args) => ({\n                method: protocol_js_1.Log.EventNames.LogEntryAddedEvent,\n                params: {\n                    level: getLogLevel(params.type),\n                    source: {\n                        realm: realm?.realmId ?? 'UNKNOWN',\n                        context: realm?.browsingContextId ?? 'UNKNOWN',\n                    },\n                    text: (0, logHelper_js_1.getRemoteValuesText)(args, true),\n                    timestamp: Math.round(params.timestamp),\n                    stackTrace: getBidiStackTrace(params.stackTrace),\n                    type: 'console',\n                    // Console method is `warn`, not `warning`.\n                    method: params.type === 'warning' ? 'warn' : params.type,\n                    args,\n                },\n            })), realm?.browsingContextId ?? 'UNKNOWN', protocol_js_1.Log.EventNames.LogEntryAddedEvent);\n        });\n        this.#cdpClient.on('Runtime.exceptionThrown', (params) => {\n            // Try to find realm by `cdpSessionId` and `executionContextId`,\n            // if provided.\n            const realm = this.#realmStorage.findRealm({\n                cdpSessionId: this.#cdpSessionId,\n                executionContextId: params.exceptionDetails.executionContextId,\n            });\n            // Try all the best to get the exception text.\n            const textPromise = (async () => {\n                if (!params.exceptionDetails.exception) {\n                    return params.exceptionDetails.text;\n                }\n                if (realm === undefined) {\n                    return JSON.stringify(params.exceptionDetails.exception);\n                }\n                return await realm.stringifyObject(params.exceptionDetails.exception);\n            })();\n            // No need in waiting for the result, just register the event promise.\n            // noinspection JSIgnoredPromiseFromCall\n            this.#eventManager.registerPromiseEvent(textPromise.then((text) => ({\n                method: protocol_js_1.Log.EventNames.LogEntryAddedEvent,\n                params: {\n                    level: 'error',\n                    source: {\n                        realm: realm?.realmId ?? 'UNKNOWN',\n                        context: realm?.browsingContextId ?? 'UNKNOWN',\n                    },\n                    text,\n                    timestamp: Math.round(params.timestamp),\n                    stackTrace: getBidiStackTrace(params.exceptionDetails.stackTrace),\n                    type: 'javascript',\n                },\n            })), realm?.browsingContextId ?? 'UNKNOWN', protocol_js_1.Log.EventNames.LogEntryAddedEvent);\n        });\n    }\n}\nexports.LogManager = LogManager;\n//# sourceMappingURL=logManager.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ScriptEvaluator = exports.stringifyObject = exports.SHARED_ID_DIVIDER = void 0;\n/**\n * Copyright 2022 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst protocol_js_1 = require(\"../../../protocol/protocol.js\");\n// As `script.evaluate` wraps call into serialization script, `lineNumber`\n// should be adjusted.\nconst CALL_FUNCTION_STACKTRACE_LINE_OFFSET = 1;\nconst EVALUATE_STACKTRACE_LINE_OFFSET = 0;\nexports.SHARED_ID_DIVIDER = '_element_';\nfunction cdpRemoteObjectToCallArgument(cdpRemoteObject) {\n    if (cdpRemoteObject.objectId !== undefined) {\n        return { objectId: cdpRemoteObject.objectId };\n    }\n    if (cdpRemoteObject.unserializableValue !== undefined) {\n        return { unserializableValue: cdpRemoteObject.unserializableValue };\n    }\n    return { value: cdpRemoteObject.value };\n}\nasync function deserializeToCdpArg(argumentValue, realm) {\n    if ('sharedId' in argumentValue) {\n        const [navigableId, rawBackendNodeId] = argumentValue.sharedId.split(exports.SHARED_ID_DIVIDER);\n        const backendNodeId = parseInt(rawBackendNodeId ?? '');\n        if (isNaN(backendNodeId) ||\n            backendNodeId === undefined ||\n            navigableId === undefined) {\n            throw new protocol_js_1.Message.InvalidArgumentException(`SharedId \"${argumentValue.sharedId}\" should have format \"{navigableId}${exports.SHARED_ID_DIVIDER}{backendNodeId}\".`);\n        }\n        if (realm.navigableId !== navigableId) {\n            throw new protocol_js_1.Message.NoSuchNodeException(`SharedId \"${argumentValue.sharedId}\" belongs to different document. Current document is ${realm.navigableId}.`);\n        }\n        try {\n            const obj = await realm.cdpClient.sendCommand('DOM.resolveNode', {\n                backendNodeId,\n                executionContextId: realm.executionContextId,\n            });\n            // TODO: release `obj.object.objectId` after using.\n            // https://github.com/GoogleChromeLabs/chromium-bidi/issues/375\n            return { objectId: obj.object.objectId };\n        }\n        catch (e) {\n            // Heuristic to detect \"no such node\" exception. Based on the  specific\n            // CDP implementation.\n            if (e.code === -32000 && e.message === 'No node with given id found') {\n                throw new protocol_js_1.Message.NoSuchNodeException(`SharedId \"${argumentValue.sharedId}\" was not found.`);\n            }\n            throw e;\n        }\n    }\n    if ('handle' in argumentValue) {\n        return { objectId: argumentValue.handle };\n    }\n    switch (argumentValue.type) {\n        // Primitive Protocol Value\n        // https://w3c.github.io/webdriver-bidi/#data-types-protocolValue-primitiveProtocolValue\n        case 'undefined': {\n            return { unserializableValue: 'undefined' };\n        }\n        case 'null': {\n            return { unserializableValue: 'null' };\n        }\n        case 'string': {\n            return { value: argumentValue.value };\n        }\n        case 'number': {\n            if (argumentValue.value === 'NaN') {\n                return { unserializableValue: 'NaN' };\n            }\n            else if (argumentValue.value === '-0') {\n                return { unserializableValue: '-0' };\n            }\n            else if (argumentValue.value === 'Infinity') {\n                return { unserializableValue: 'Infinity' };\n            }\n            else if (argumentValue.value === '-Infinity') {\n                return { unserializableValue: '-Infinity' };\n            }\n            return {\n                value: argumentValue.value,\n            };\n        }\n        case 'boolean': {\n            return { value: Boolean(argumentValue.value) };\n        }\n        case 'bigint': {\n            return {\n                unserializableValue: `BigInt(${JSON.stringify(argumentValue.value)})`,\n            };\n        }\n        // Local Value\n        // https://w3c.github.io/webdriver-bidi/#data-types-protocolValue-LocalValue\n        case 'date': {\n            return {\n                unserializableValue: `new Date(Date.parse(${JSON.stringify(argumentValue.value)}))`,\n            };\n        }\n        case 'regexp': {\n            return {\n                unserializableValue: `new RegExp(${JSON.stringify(argumentValue.value.pattern)}, ${JSON.stringify(argumentValue.value.flags)})`,\n            };\n        }\n        case 'map': {\n            // TODO(sadym): if non of the nested keys and values has remote\n            // reference, serialize to `unserializableValue` without CDP roundtrip.\n            const keyValueArray = await flattenKeyValuePairs(argumentValue.value, realm);\n            const argEvalResult = await realm.cdpClient.sendCommand('Runtime.callFunctionOn', {\n                functionDeclaration: String((...args) => {\n                    const result = new Map();\n                    for (let i = 0; i < args.length; i += 2) {\n                        result.set(args[i], args[i + 1]);\n                    }\n                    return result;\n                }),\n                awaitPromise: false,\n                arguments: keyValueArray,\n                returnByValue: false,\n                executionContextId: realm.executionContextId,\n            });\n            // TODO: release `argEvalResult.result.objectId`  after using.\n            // https://github.com/GoogleChromeLabs/chromium-bidi/issues/375\n            return { objectId: argEvalResult.result.objectId };\n        }\n        case 'object': {\n            // TODO(sadym): if non of the nested keys and values has remote\n            //  reference, serialize to `unserializableValue` without CDP roundtrip.\n            const keyValueArray = await flattenKeyValuePairs(argumentValue.value, realm);\n            const argEvalResult = await realm.cdpClient.sendCommand('Runtime.callFunctionOn', {\n                functionDeclaration: String((...args) => {\n                    const result = {};\n                    for (let i = 0; i < args.length; i += 2) {\n                        // Key should be either `string`, `number`, or `symbol`.\n                        const key = args[i];\n                        result[key] = args[i + 1];\n                    }\n                    return result;\n                }),\n                awaitPromise: false,\n                arguments: keyValueArray,\n                returnByValue: false,\n                executionContextId: realm.executionContextId,\n            });\n            // TODO: release `argEvalResult.result.objectId`  after using.\n            // https://github.com/GoogleChromeLabs/chromium-bidi/issues/375\n            return { objectId: argEvalResult.result.objectId };\n        }\n        case 'array': {\n            // TODO(sadym): if non of the nested items has remote reference,\n            //  serialize to `unserializableValue` without CDP roundtrip.\n            const args = await flattenValueList(argumentValue.value, realm);\n            const argEvalResult = await realm.cdpClient.sendCommand('Runtime.callFunctionOn', {\n                functionDeclaration: String((...args) => {\n                    return args;\n                }),\n                awaitPromise: false,\n                arguments: args,\n                returnByValue: false,\n                executionContextId: realm.executionContextId,\n            });\n            // TODO: release `argEvalResult.result.objectId`  after using.\n            // https://github.com/GoogleChromeLabs/chromium-bidi/issues/375\n            return { objectId: argEvalResult.result.objectId };\n        }\n        case 'set': {\n            // TODO(sadym): if non of the nested items has remote reference,\n            //  serialize to `unserializableValue` without CDP roundtrip.\n            const args = await flattenValueList(argumentValue.value, realm);\n            const argEvalResult = await realm.cdpClient.sendCommand('Runtime.callFunctionOn', {\n                functionDeclaration: String((...args) => {\n                    return new Set(args);\n                }),\n                awaitPromise: false,\n                arguments: args,\n                returnByValue: false,\n                executionContextId: realm.executionContextId,\n            });\n            // TODO: release `argEvalResult.result.objectId`  after using.\n            // https://github.com/GoogleChromeLabs/chromium-bidi/issues/375\n            return { objectId: argEvalResult.result.objectId };\n        }\n        // TODO(sadym): dispose nested objects.\n        default:\n            throw new Error(`Value ${JSON.stringify(argumentValue)} is not deserializable.`);\n    }\n}\nasync function flattenKeyValuePairs(value, realm) {\n    const keyValueArray = [];\n    for (const pair of value) {\n        const key = pair[0];\n        const value = pair[1];\n        let keyArg;\n        if (typeof key === 'string') {\n            // Key is a string.\n            keyArg = { value: key };\n        }\n        else {\n            // Key is a serialized value.\n            keyArg = await deserializeToCdpArg(key, realm);\n        }\n        const valueArg = await deserializeToCdpArg(value, realm);\n        keyValueArray.push(keyArg);\n        keyValueArray.push(valueArg);\n    }\n    return keyValueArray;\n}\nasync function flattenValueList(list, realm) {\n    const result = [];\n    for (const value of list) {\n        result.push(await deserializeToCdpArg(value, realm));\n    }\n    return result;\n}\n/**\n * Gets the string representation of an object. This is equivalent to\n * calling toString() on the object value.\n * @param cdpObject CDP remote object representing an object.\n * @param realm\n * @returns string The stringified object.\n */\nasync function stringifyObject(cdpObject, realm) {\n    const stringifyResult = await realm.cdpClient.sendCommand('Runtime.callFunctionOn', {\n        functionDeclaration: String((obj) => {\n            return String(obj);\n        }),\n        awaitPromise: false,\n        arguments: [cdpObject],\n        returnByValue: true,\n        executionContextId: realm.executionContextId,\n    });\n    return stringifyResult.result.value;\n}\nexports.stringifyObject = stringifyObject;\nclass ScriptEvaluator {\n    /**\n     * Serializes a given CDP object into BiDi, keeping references in the\n     * target's `globalThis`.\n     * @param cdpRemoteObject CDP remote object to be serialized.\n     * @param resultOwnership indicates desired OwnershipModel.\n     * @param realm\n     */\n    async serializeCdpObject(cdpRemoteObject, resultOwnership, realm) {\n        const arg = cdpRemoteObjectToCallArgument(cdpRemoteObject);\n        const cdpWebDriverValue = await realm.cdpClient.sendCommand('Runtime.callFunctionOn', {\n            functionDeclaration: String((obj) => obj),\n            awaitPromise: false,\n            arguments: [arg],\n            generateWebDriverValue: true,\n            executionContextId: realm.executionContextId,\n        });\n        return await realm.cdpToBidiValue(cdpWebDriverValue, resultOwnership);\n    }\n    async callFunction(realm, functionDeclaration, _this, _arguments, awaitPromise, resultOwnership) {\n        const callFunctionAndSerializeScript = `(...args)=>{ return _callFunction((\\n${functionDeclaration}\\n), args);\n      function _callFunction(f, args) {\n        const deserializedThis = args.shift();\n        const deserializedArgs = args;\n        return f.apply(deserializedThis, deserializedArgs);\n      }}`;\n        const thisAndArgumentsList = [await deserializeToCdpArg(_this, realm)];\n        thisAndArgumentsList.push(...(await Promise.all(_arguments.map(async (a) => {\n            return await deserializeToCdpArg(a, realm);\n        }))));\n        let cdpCallFunctionResult;\n        try {\n            cdpCallFunctionResult = await realm.cdpClient.sendCommand('Runtime.callFunctionOn', {\n                functionDeclaration: callFunctionAndSerializeScript,\n                awaitPromise,\n                arguments: thisAndArgumentsList,\n                generateWebDriverValue: true,\n                executionContextId: realm.executionContextId,\n            });\n        }\n        catch (e) {\n            // Heuristic to determine if the problem is in the argument.\n            // The check can be done on the `deserialization` step, but this approach\n            // helps to save round-trips.\n            if (e.code === -32000 &&\n                [\n                    'Could not find object with given id',\n                    'Argument should belong to the same JavaScript world as target object',\n                ].includes(e.message)) {\n                throw new protocol_js_1.Message.InvalidArgumentException('Handle was not found.');\n            }\n            throw e;\n        }\n        if (cdpCallFunctionResult.exceptionDetails) {\n            // Serialize exception details.\n            return {\n                exceptionDetails: await this.#serializeCdpExceptionDetails(cdpCallFunctionResult.exceptionDetails, CALL_FUNCTION_STACKTRACE_LINE_OFFSET, resultOwnership, realm),\n                type: 'exception',\n                realm: realm.realmId,\n            };\n        }\n        return {\n            type: 'success',\n            result: await realm.cdpToBidiValue(cdpCallFunctionResult, resultOwnership),\n            realm: realm.realmId,\n        };\n    }\n    async #serializeCdpExceptionDetails(cdpExceptionDetails, lineOffset, resultOwnership, realm) {\n        const callFrames = cdpExceptionDetails.stackTrace?.callFrames.map((frame) => ({\n            url: frame.url,\n            functionName: frame.functionName,\n            // As `script.evaluate` wraps call into serialization script, so\n            // `lineNumber` should be adjusted.\n            lineNumber: frame.lineNumber - lineOffset,\n            columnNumber: frame.columnNumber,\n        }));\n        const exception = await this.serializeCdpObject(\n        // Exception should always be there.\n        cdpExceptionDetails.exception, resultOwnership, realm);\n        const text = await stringifyObject(cdpExceptionDetails.exception, realm);\n        return {\n            exception,\n            columnNumber: cdpExceptionDetails.columnNumber,\n            // As `script.evaluate` wraps call into serialization script, so\n            // `lineNumber` should be adjusted.\n            lineNumber: cdpExceptionDetails.lineNumber - lineOffset,\n            stackTrace: {\n                callFrames: callFrames || [],\n            },\n            text: text || cdpExceptionDetails.text,\n        };\n    }\n    async scriptEvaluate(realm, expression, awaitPromise, resultOwnership) {\n        const cdpEvaluateResult = await realm.cdpClient.sendCommand('Runtime.evaluate', {\n            contextId: realm.executionContextId,\n            expression,\n            awaitPromise,\n            generateWebDriverValue: true,\n        });\n        if (cdpEvaluateResult.exceptionDetails) {\n            // Serialize exception details.\n            return {\n                exceptionDetails: await this.#serializeCdpExceptionDetails(cdpEvaluateResult.exceptionDetails, EVALUATE_STACKTRACE_LINE_OFFSET, resultOwnership, realm),\n                type: 'exception',\n                realm: realm.realmId,\n            };\n        }\n        return {\n            type: 'success',\n            result: await realm.cdpToBidiValue(cdpEvaluateResult, resultOwnership),\n            realm: realm.realmId,\n        };\n    }\n}\nexports.ScriptEvaluator = ScriptEvaluator;\n//# sourceMappingURL=scriptEvaluator.js.map","\"use strict\";\n/**\n * Copyright 2022 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Realm = void 0;\nconst scriptEvaluator_js_1 = require(\"./scriptEvaluator.js\");\nconst scriptEvaluator = new scriptEvaluator_js_1.ScriptEvaluator();\nclass Realm {\n    #realmStorage;\n    #browsingContextStorage;\n    #realmId;\n    #browsingContextId;\n    #executionContextId;\n    #origin;\n    #type;\n    #cdpClient;\n    sandbox;\n    cdpSessionId;\n    constructor(realmStorage, browsingContextStorage, realmId, browsingContextId, executionContextId, origin, type, sandbox, cdpSessionId, cdpClient) {\n        this.#realmId = realmId;\n        this.#browsingContextId = browsingContextId;\n        this.#executionContextId = executionContextId;\n        this.sandbox = sandbox;\n        this.#origin = origin;\n        this.#type = type;\n        this.cdpSessionId = cdpSessionId;\n        this.#cdpClient = cdpClient;\n        this.#realmStorage = realmStorage;\n        this.#browsingContextStorage = browsingContextStorage;\n        this.#realmStorage.realmMap.set(this.#realmId, this);\n    }\n    async disown(handle) {\n        // Disowning an object from different realm does nothing.\n        if (this.#realmStorage.knownHandlesToRealm.get(handle) !== this.realmId) {\n            return;\n        }\n        try {\n            await this.cdpClient.sendCommand('Runtime.releaseObject', {\n                objectId: handle,\n            });\n        }\n        catch (e) {\n            // Heuristic to determine if the problem is in the unknown handler.\n            // Ignore the error if so.\n            if (!(e.code === -32000 && e.message === 'Invalid remote object id')) {\n                throw e;\n            }\n        }\n        this.#realmStorage.knownHandlesToRealm.delete(handle);\n    }\n    async cdpToBidiValue(cdpValue, resultOwnership) {\n        const cdpWebDriverValue = cdpValue.result.webDriverValue;\n        const bidiValue = this.webDriverValueToBiDi(cdpWebDriverValue);\n        if (cdpValue.result.objectId) {\n            const objectId = cdpValue.result.objectId;\n            if (resultOwnership === 'root') {\n                // Extend BiDi value with `handle` based on required `resultOwnership`\n                // and  CDP response but not on the actual BiDi type.\n                bidiValue.handle = objectId;\n                // Remember all the handles sent to client.\n                this.#realmStorage.knownHandlesToRealm.set(objectId, this.realmId);\n            }\n            else {\n                // No need in waiting for the object to be released.\n                // noinspection ES6MissingAwait\n                this.cdpClient.sendCommand('Runtime.releaseObject', { objectId });\n            }\n        }\n        return bidiValue;\n    }\n    webDriverValueToBiDi(webDriverValue) {\n        // This relies on the CDP to implement proper BiDi serialization, except\n        // backendNodeId/sharedId.\n        const result = webDriverValue;\n        const bidiValue = result.value;\n        if (bidiValue === undefined) {\n            return result;\n        }\n        if (result.type === 'node') {\n            if (Object.hasOwn(bidiValue, 'backendNodeId')) {\n                bidiValue.sharedId = `${this.navigableId}${scriptEvaluator_js_1.SHARED_ID_DIVIDER}${bidiValue.backendNodeId}`;\n                delete bidiValue['backendNodeId'];\n            }\n            if (Object.hasOwn(bidiValue, 'children')) {\n                for (const i in bidiValue.children) {\n                    bidiValue.children[i] = this.webDriverValueToBiDi(bidiValue.children[i]);\n                }\n            }\n        }\n        // Recursively update the nested values.\n        if (['array', 'set'].includes(webDriverValue.type)) {\n            for (const i in bidiValue) {\n                bidiValue[i] = this.webDriverValueToBiDi(bidiValue[i]);\n            }\n        }\n        if (['object', 'map'].includes(webDriverValue.type)) {\n            for (const i in bidiValue) {\n                bidiValue[i] = [\n                    this.webDriverValueToBiDi(bidiValue[i][0]),\n                    this.webDriverValueToBiDi(bidiValue[i][1]),\n                ];\n            }\n        }\n        return result;\n    }\n    toBiDi() {\n        return {\n            realm: this.realmId,\n            origin: this.origin,\n            type: this.type,\n            context: this.browsingContextId,\n            ...(this.sandbox === undefined ? {} : { sandbox: this.sandbox }),\n        };\n    }\n    get realmId() {\n        return this.#realmId;\n    }\n    get navigableId() {\n        return (this.#browsingContextStorage.findContext(this.#browsingContextId)\n            ?.navigableId ?? 'UNKNOWN');\n    }\n    get browsingContextId() {\n        return this.#browsingContextId;\n    }\n    get executionContextId() {\n        return this.#executionContextId;\n    }\n    get origin() {\n        return this.#origin;\n    }\n    get type() {\n        return this.#type;\n    }\n    get cdpClient() {\n        return this.#cdpClient;\n    }\n    async callFunction(functionDeclaration, _this, _arguments, awaitPromise, resultOwnership) {\n        const context = this.#browsingContextStorage.getKnownContext(this.browsingContextId);\n        await context.awaitUnblocked();\n        return {\n            result: await scriptEvaluator.callFunction(this, functionDeclaration, _this, _arguments, awaitPromise, resultOwnership),\n        };\n    }\n    async scriptEvaluate(expression, awaitPromise, resultOwnership) {\n        const context = this.#browsingContextStorage.getKnownContext(this.browsingContextId);\n        await context.awaitUnblocked();\n        return {\n            result: await scriptEvaluator.scriptEvaluate(this, expression, awaitPromise, resultOwnership),\n        };\n    }\n    /**\n     * Serializes a given CDP object into BiDi, keeping references in the\n     * target's `globalThis`.\n     * @param cdpObject CDP remote object to be serialized.\n     * @param resultOwnership indicates desired OwnershipModel.\n     */\n    async serializeCdpObject(cdpObject, resultOwnership) {\n        return await scriptEvaluator.serializeCdpObject(cdpObject, resultOwnership, this);\n    }\n    /**\n     * Gets the string representation of an object. This is equivalent to\n     * calling toString() on the object value.\n     * @param cdpObject CDP remote object representing an object.\n     * @param realm\n     * @returns string The stringified object.\n     */\n    async stringifyObject(cdpObject) {\n        return await (0, scriptEvaluator_js_1.stringifyObject)(cdpObject, this);\n    }\n}\nexports.Realm = Realm;\n//# sourceMappingURL=realm.js.map","\"use strict\";\n/**\n * Copyright 2022 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BrowsingContextImpl = void 0;\nconst protocol_js_1 = require(\"../../../protocol/protocol.js\");\nconst log_js_1 = require(\"../../../utils/log.js\");\nconst deferred_js_1 = require(\"../../../utils/deferred.js\");\nconst logManager_js_1 = require(\"../log/logManager.js\");\nconst realm_js_1 = require(\"../script/realm.js\");\nclass BrowsingContextImpl {\n    #targetDefers = {\n        documentInitialized: new deferred_js_1.Deferred(),\n        targetUnblocked: new deferred_js_1.Deferred(),\n        Page: {\n            navigatedWithinDocument: new deferred_js_1.Deferred(),\n            lifecycleEvent: {\n                DOMContentLoaded: new deferred_js_1.Deferred(),\n                load: new deferred_js_1.Deferred(),\n            },\n        },\n    };\n    #contextId;\n    #parentId;\n    #cdpBrowserContextId;\n    #eventManager;\n    #children = new Map();\n    #realmStorage;\n    #url = 'about:blank';\n    #loaderId = null;\n    #cdpSessionId;\n    #cdpClient;\n    #maybeDefaultRealm;\n    #browsingContextStorage;\n    #logger;\n    get #defaultRealm() {\n        if (this.#maybeDefaultRealm === undefined) {\n            throw new Error(`No default realm for browsing context ${this.#contextId}`);\n        }\n        return this.#maybeDefaultRealm;\n    }\n    constructor(realmStorage, contextId, parentId, cdpClient, cdpSessionId, cdpBrowserContextId, eventManager, browsingContextStorage, logger) {\n        this.#realmStorage = realmStorage;\n        this.#contextId = contextId;\n        this.#parentId = parentId;\n        this.#cdpClient = cdpClient;\n        this.#cdpBrowserContextId = cdpBrowserContextId;\n        this.#eventManager = eventManager;\n        this.#cdpSessionId = cdpSessionId;\n        this.#browsingContextStorage = browsingContextStorage;\n        this.#logger = logger;\n        this.#initListeners();\n        this.#browsingContextStorage.addContext(this);\n    }\n    static async createFrameContext(realmStorage, contextId, parentId, cdpClient, cdpSessionId, eventManager, browsingContextStorage, logger) {\n        const context = new BrowsingContextImpl(realmStorage, contextId, parentId, cdpClient, cdpSessionId, null, eventManager, browsingContextStorage, logger);\n        context.#targetDefers.targetUnblocked.resolve();\n        await eventManager.registerEvent({\n            method: protocol_js_1.BrowsingContext.EventNames.ContextCreatedEvent,\n            params: context.serializeToBidiValue(),\n        }, context.contextId);\n    }\n    static async createTargetContext(realmStorage, contextId, parentId, cdpClient, cdpSessionId, cdpBrowserContextId, eventManager, browsingContextStorage, logger) {\n        const context = new BrowsingContextImpl(realmStorage, contextId, parentId, cdpClient, cdpSessionId, cdpBrowserContextId, eventManager, browsingContextStorage, logger);\n        // No need in waiting for target to be unblocked.\n        // noinspection ES6MissingAwait\n        context.#unblockAttachedTarget();\n        await eventManager.registerEvent({\n            method: protocol_js_1.BrowsingContext.EventNames.ContextCreatedEvent,\n            params: context.serializeToBidiValue(),\n        }, context.contextId);\n    }\n    get cdpBrowserContextId() {\n        return this.#cdpBrowserContextId;\n    }\n    // https://html.spec.whatwg.org/multipage/document-sequences.html#navigable\n    get navigableId() {\n        return this.#loaderId;\n    }\n    convertFrameToTargetContext(cdpClient, cdpSessionId) {\n        this.#updateConnection(cdpClient, cdpSessionId);\n        // No need in waiting for target to be unblocked.\n        // noinspection JSIgnoredPromiseFromCall\n        this.#unblockAttachedTarget();\n    }\n    async delete() {\n        await this.#removeChildContexts();\n        this.#realmStorage.deleteRealms({\n            browsingContextId: this.contextId,\n        });\n        // Remove context from the parent.\n        if (this.parentId !== null) {\n            const parent = this.#browsingContextStorage.getKnownContext(this.parentId);\n            parent.#children.delete(this.contextId);\n        }\n        await this.#eventManager.registerEvent({\n            method: protocol_js_1.BrowsingContext.EventNames.ContextDestroyedEvent,\n            params: this.serializeToBidiValue(),\n        }, this.contextId);\n        this.#browsingContextStorage.removeContext(this.contextId);\n    }\n    async #removeChildContexts() {\n        await Promise.all(this.children.map((child) => child.delete()));\n    }\n    #updateConnection(cdpClient, cdpSessionId) {\n        if (this.#targetDefers.targetUnblocked.isFinished) {\n            this.#targetDefers.targetUnblocked = new deferred_js_1.Deferred();\n        }\n        else {\n            this.#logger?.(log_js_1.LogType.browsingContexts, 'targetUnblocked postponed because of OOPiF');\n        }\n        this.#cdpClient = cdpClient;\n        this.#cdpSessionId = cdpSessionId;\n        this.#initListeners();\n    }\n    async #unblockAttachedTarget() {\n        logManager_js_1.LogManager.create(this.#realmStorage, this.#cdpClient, this.#cdpSessionId, this.#eventManager);\n        await this.#cdpClient.sendCommand('Runtime.enable');\n        await this.#cdpClient.sendCommand('Page.enable');\n        await this.#cdpClient.sendCommand('Page.setLifecycleEventsEnabled', {\n            enabled: true,\n        });\n        await this.#cdpClient.sendCommand('Target.setAutoAttach', {\n            autoAttach: true,\n            waitForDebuggerOnStart: true,\n            flatten: true,\n        });\n        await this.#cdpClient.sendCommand('Runtime.runIfWaitingForDebugger');\n        this.#targetDefers.targetUnblocked.resolve();\n    }\n    get contextId() {\n        return this.#contextId;\n    }\n    get parentId() {\n        return this.#parentId;\n    }\n    get cdpSessionId() {\n        return this.#cdpSessionId;\n    }\n    get children() {\n        return Array.from(this.#children.values());\n    }\n    get url() {\n        return this.#url;\n    }\n    addChild(child) {\n        this.#children.set(child.contextId, child);\n    }\n    async awaitLoaded() {\n        await this.#targetDefers.Page.lifecycleEvent.load;\n    }\n    async awaitUnblocked() {\n        await this.#targetDefers.targetUnblocked;\n    }\n    serializeToBidiValue(maxDepth = 0, addParentFiled = true) {\n        return {\n            context: this.#contextId,\n            url: this.url,\n            children: maxDepth > 0\n                ? this.children.map((c) => c.serializeToBidiValue(maxDepth - 1, false))\n                : null,\n            ...(addParentFiled ? { parent: this.#parentId } : {}),\n        };\n    }\n    #initListeners() {\n        this.#cdpClient.on('Target.targetInfoChanged', (params) => {\n            if (this.contextId !== params.targetInfo.targetId) {\n                return;\n            }\n            this.#url = params.targetInfo.url;\n        });\n        this.#cdpClient.on('Page.frameNavigated', async (params) => {\n            if (this.contextId !== params.frame.id) {\n                return;\n            }\n            this.#url = params.frame.url + (params.frame.urlFragment ?? '');\n            // At the point the page is initiated, all the nested iframes from the\n            // previous page are detached and realms are destroyed.\n            // Remove context's children.\n            await this.#removeChildContexts();\n            // Remove all the already created realms.\n            this.#realmStorage.deleteRealms({ browsingContextId: this.contextId });\n        });\n        this.#cdpClient.on('Page.navigatedWithinDocument', (params) => {\n            if (this.contextId !== params.frameId) {\n                return;\n            }\n            this.#url = params.url;\n            this.#targetDefers.Page.navigatedWithinDocument.resolve(params);\n        });\n        this.#cdpClient.on('Page.lifecycleEvent', async (params) => {\n            if (this.contextId !== params.frameId) {\n                return;\n            }\n            if (params.name === 'init') {\n                this.#documentChanged(params.loaderId);\n                this.#targetDefers.documentInitialized.resolve();\n            }\n            if (params.name === 'commit') {\n                this.#loaderId = params.loaderId;\n                return;\n            }\n            if (params.loaderId !== this.#loaderId) {\n                return;\n            }\n            switch (params.name) {\n                case 'DOMContentLoaded':\n                    this.#targetDefers.Page.lifecycleEvent.DOMContentLoaded.resolve(params);\n                    await this.#eventManager.registerEvent({\n                        method: protocol_js_1.BrowsingContext.EventNames.DomContentLoadedEvent,\n                        params: {\n                            context: this.contextId,\n                            navigation: this.#loaderId,\n                            url: this.#url,\n                        },\n                    }, this.contextId);\n                    break;\n                case 'load':\n                    this.#targetDefers.Page.lifecycleEvent.load.resolve(params);\n                    await this.#eventManager.registerEvent({\n                        method: protocol_js_1.BrowsingContext.EventNames.LoadEvent,\n                        params: {\n                            context: this.contextId,\n                            navigation: this.#loaderId,\n                            url: this.#url,\n                        },\n                    }, this.contextId);\n                    break;\n            }\n        });\n        this.#cdpClient.on('Runtime.executionContextCreated', (params) => {\n            if (params.context.auxData.frameId !== this.contextId) {\n                return;\n            }\n            // Only this execution contexts are supported for now.\n            if (!['default', 'isolated'].includes(params.context.auxData.type)) {\n                return;\n            }\n            const realm = new realm_js_1.Realm(this.#realmStorage, this.#browsingContextStorage, params.context.uniqueId, this.contextId, params.context.id, this.#getOrigin(params), \n            // TODO: differentiate types.\n            'window', \n            // Sandbox name for isolated world.\n            params.context.auxData.type === 'isolated'\n                ? params.context.name\n                : undefined, this.#cdpSessionId, this.#cdpClient);\n            if (params.context.auxData.isDefault) {\n                this.#maybeDefaultRealm = realm;\n            }\n        });\n        this.#cdpClient.on('Runtime.executionContextDestroyed', (params) => {\n            this.#realmStorage.deleteRealms({\n                cdpSessionId: this.#cdpSessionId,\n                executionContextId: params.executionContextId,\n            });\n        });\n    }\n    #getOrigin(params) {\n        if (params.context.auxData.type === 'isolated') {\n            // Sandbox should have the same origin as the context itself, but in CDP\n            // it has an empty one.\n            return this.#defaultRealm.origin;\n        }\n        // https://html.spec.whatwg.org/multipage/origin.html#ascii-serialisation-of-an-origin\n        return ['://', ''].includes(params.context.origin)\n            ? 'null'\n            : params.context.origin;\n    }\n    #documentChanged(loaderId) {\n        // Same document navigation.\n        if (loaderId === undefined || this.#loaderId === loaderId) {\n            if (this.#targetDefers.Page.navigatedWithinDocument.isFinished) {\n                this.#targetDefers.Page.navigatedWithinDocument =\n                    new deferred_js_1.Deferred();\n            }\n            return;\n        }\n        if (this.#targetDefers.documentInitialized.isFinished) {\n            this.#targetDefers.documentInitialized = new deferred_js_1.Deferred();\n        }\n        else {\n            this.#logger?.(log_js_1.LogType.browsingContexts, 'Document changed');\n        }\n        if (this.#targetDefers.Page.lifecycleEvent.DOMContentLoaded.isFinished) {\n            this.#targetDefers.Page.lifecycleEvent.DOMContentLoaded =\n                new deferred_js_1.Deferred();\n        }\n        else {\n            this.#logger?.(log_js_1.LogType.browsingContexts, 'Document changed');\n        }\n        if (this.#targetDefers.Page.lifecycleEvent.load.isFinished) {\n            this.#targetDefers.Page.lifecycleEvent.load =\n                new deferred_js_1.Deferred();\n        }\n        else {\n            this.#logger?.(log_js_1.LogType.browsingContexts, 'Document changed');\n        }\n        this.#loaderId = loaderId;\n    }\n    async navigate(url, wait) {\n        await this.#targetDefers.targetUnblocked;\n        // TODO: handle loading errors.\n        const cdpNavigateResult = await this.#cdpClient.sendCommand('Page.navigate', {\n            url,\n            frameId: this.contextId,\n        });\n        if (cdpNavigateResult.errorText) {\n            throw new protocol_js_1.Message.UnknownException(cdpNavigateResult.errorText);\n        }\n        this.#documentChanged(cdpNavigateResult.loaderId);\n        // Wait for `wait` condition.\n        switch (wait) {\n            case 'none':\n                break;\n            case 'interactive':\n                // No `loaderId` means same-document navigation.\n                if (cdpNavigateResult.loaderId === undefined) {\n                    await this.#targetDefers.Page.navigatedWithinDocument;\n                }\n                else {\n                    await this.#targetDefers.Page.lifecycleEvent.DOMContentLoaded;\n                }\n                break;\n            case 'complete':\n                // No `loaderId` means same-document navigation.\n                if (cdpNavigateResult.loaderId === undefined) {\n                    await this.#targetDefers.Page.navigatedWithinDocument;\n                }\n                else {\n                    await this.#targetDefers.Page.lifecycleEvent.load;\n                }\n                break;\n            default:\n                throw new Error(`Not implemented wait '${wait}'`);\n        }\n        return {\n            result: {\n                navigation: cdpNavigateResult.loaderId || null,\n                url: url,\n            },\n        };\n    }\n    async getOrCreateSandbox(sandbox) {\n        if (sandbox === undefined || sandbox === '') {\n            return this.#defaultRealm;\n        }\n        let maybeSandboxes = this.#realmStorage.findRealms({\n            browsingContextId: this.contextId,\n            sandbox,\n        });\n        if (maybeSandboxes.length === 0) {\n            await this.#cdpClient.sendCommand('Page.createIsolatedWorld', {\n                frameId: this.contextId,\n                worldName: sandbox,\n            });\n            // `Runtime.executionContextCreated` should be emitted by the time the\n            // previous command is done.\n            maybeSandboxes = this.#realmStorage.findRealms({\n                browsingContextId: this.contextId,\n                sandbox,\n            });\n        }\n        if (maybeSandboxes.length !== 1) {\n            throw Error(`Sandbox ${sandbox} wasn't created.`);\n        }\n        return maybeSandboxes[0];\n    }\n}\nexports.BrowsingContextImpl = BrowsingContextImpl;\n//# sourceMappingURL=browsingContextImpl.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BrowsingContextProcessor = void 0;\n/**\n * Copyright 2021 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst protocol_js_1 = require(\"../../../protocol/protocol.js\");\nconst log_js_1 = require(\"../../../utils/log.js\");\nconst browsingContextImpl_js_1 = require(\"./browsingContextImpl.js\");\nclass BrowsingContextProcessor {\n    #browsingContextStorage;\n    #cdpConnection;\n    #eventManager;\n    #logger;\n    #realmStorage;\n    #selfTargetId;\n    #sessions;\n    constructor(realmStorage, cdpConnection, selfTargetId, eventManager, browsingContextStorage, logger) {\n        this.#browsingContextStorage = browsingContextStorage;\n        this.#cdpConnection = cdpConnection;\n        this.#eventManager = eventManager;\n        this.#logger = logger;\n        this.#realmStorage = realmStorage;\n        this.#selfTargetId = selfTargetId;\n        this.#sessions = new Set();\n        this.#setBrowserClientEventListeners(this.#cdpConnection.browserClient());\n    }\n    #setBrowserClientEventListeners(browserClient) {\n        this.#setTargetEventListeners(browserClient);\n    }\n    #setTargetEventListeners(cdpClient) {\n        cdpClient.on('Target.attachedToTarget', async (params) => {\n            await this.#handleAttachedToTargetEvent(params, cdpClient);\n        });\n        cdpClient.on('Target.detachedFromTarget', async (params) => {\n            await this.#handleDetachedFromTargetEvent(params);\n        });\n    }\n    #setSessionEventListeners(sessionId) {\n        if (this.#sessions.has(sessionId)) {\n            return;\n        }\n        this.#sessions.add(sessionId);\n        const sessionCdpClient = this.#cdpConnection.getCdpClient(sessionId);\n        this.#setTargetEventListeners(sessionCdpClient);\n        sessionCdpClient.on('*', async (method, params) => {\n            await this.#eventManager.registerEvent({\n                method: protocol_js_1.CDP.EventNames.EventReceivedEvent,\n                params: {\n                    cdpMethod: method,\n                    cdpParams: params || {},\n                    cdpSession: sessionId,\n                },\n            }, null);\n        });\n        sessionCdpClient.on('Page.frameAttached', async (params) => {\n            await browsingContextImpl_js_1.BrowsingContextImpl.createFrameContext(this.#realmStorage, params.frameId, params.parentFrameId, sessionCdpClient, sessionId, this.#eventManager, this.#browsingContextStorage, this.#logger);\n        });\n    }\n    async #handleAttachedToTargetEvent(params, parentSessionCdpClient) {\n        const { sessionId, targetInfo } = params;\n        const targetSessionCdpClient = this.#cdpConnection.getCdpClient(sessionId);\n        if (!this.#isValidTarget(targetInfo)) {\n            // DevTools or some other not supported by BiDi target.\n            await targetSessionCdpClient.sendCommand('Runtime.runIfWaitingForDebugger');\n            await parentSessionCdpClient.sendCommand('Target.detachFromTarget', params);\n            return;\n        }\n        this.#logger?.(log_js_1.LogType.browsingContexts, 'AttachedToTarget event received:', JSON.stringify(params, null, 2));\n        this.#setSessionEventListeners(sessionId);\n        if (this.#browsingContextStorage.hasKnownContext(targetInfo.targetId)) {\n            // OOPiF.\n            this.#browsingContextStorage\n                .getKnownContext(targetInfo.targetId)\n                .convertFrameToTargetContext(targetSessionCdpClient, sessionId);\n        }\n        else {\n            await browsingContextImpl_js_1.BrowsingContextImpl.createTargetContext(this.#realmStorage, targetInfo.targetId, null, targetSessionCdpClient, sessionId, params.targetInfo.browserContextId ?? null, this.#eventManager, this.#browsingContextStorage, this.#logger);\n        }\n    }\n    // { \"method\": \"Target.detachedFromTarget\",\n    //   \"params\": {\n    //     \"sessionId\": \"7EFBFB2A4942A8989B3EADC561BC46E9\",\n    //     \"targetId\": \"19416886405CBA4E03DBB59FA67FF4E8\" } }\n    async #handleDetachedFromTargetEvent(params) {\n        // TODO: params.targetId is deprecated. Update this class to track using\n        // params.sessionId instead.\n        // https://github.com/GoogleChromeLabs/chromium-bidi/issues/60\n        const contextId = params.targetId;\n        await this.#browsingContextStorage.findContext(contextId)?.delete();\n    }\n    async process_browsingContext_getTree(params) {\n        const resultContexts = params.root === undefined\n            ? this.#browsingContextStorage.getTopLevelContexts()\n            : [this.#browsingContextStorage.getKnownContext(params.root)];\n        return {\n            result: {\n                contexts: resultContexts.map((c) => c.serializeToBidiValue(params.maxDepth ?? Number.MAX_VALUE)),\n            },\n        };\n    }\n    async process_browsingContext_create(params) {\n        const browserCdpClient = this.#cdpConnection.browserClient();\n        let referenceContext = undefined;\n        if (params.referenceContext !== undefined) {\n            referenceContext = this.#browsingContextStorage.getKnownContext(params.referenceContext);\n            if (referenceContext.parentId !== null) {\n                throw new protocol_js_1.Message.InvalidArgumentException(`referenceContext should be a top-level context`);\n            }\n        }\n        const result = await browserCdpClient.sendCommand('Target.createTarget', {\n            url: 'about:blank',\n            newWindow: params.type === 'window',\n            ...(referenceContext?.cdpBrowserContextId\n                ? { browserContextId: referenceContext.cdpBrowserContextId }\n                : {}),\n        });\n        // Wait for the new tab to be loaded to avoid race conditions in the\n        // `browsingContext` events, when the `browsingContext.domContentLoaded` and\n        // `browsingContext.load` events from the initial `about:blank` navigation\n        // are emitted after the next navigation is started.\n        // Details: https://github.com/web-platform-tests/wpt/issues/35846\n        const contextId = result.targetId;\n        const context = this.#browsingContextStorage.getKnownContext(contextId);\n        await context.awaitLoaded();\n        return {\n            result: context.serializeToBidiValue(1),\n        };\n    }\n    async process_browsingContext_navigate(params) {\n        const context = this.#browsingContextStorage.getKnownContext(params.context);\n        return await context.navigate(params.url, params.wait === undefined ? 'none' : params.wait);\n    }\n    async #getRealm(target) {\n        if ('realm' in target) {\n            return this.#realmStorage.getRealm({\n                realmId: target.realm,\n            });\n        }\n        const context = this.#browsingContextStorage.getKnownContext(target.context);\n        return await context.getOrCreateSandbox(target.sandbox);\n    }\n    async process_script_evaluate(params) {\n        const realm = await this.#getRealm(params.target);\n        return await realm.scriptEvaluate(params.expression, params.awaitPromise, params.resultOwnership ?? 'none');\n    }\n    process_script_getRealms(params) {\n        if (params.context !== undefined) {\n            // Make sure the context is known.\n            this.#browsingContextStorage.getKnownContext(params.context);\n        }\n        const realms = this.#realmStorage\n            .findRealms({\n            browsingContextId: params.context,\n            type: params.type,\n        })\n            .map((realm) => realm.toBiDi());\n        return { result: { realms } };\n    }\n    async process_script_callFunction(params) {\n        const realm = await this.#getRealm(params.target);\n        return await realm.callFunction(params.functionDeclaration, params.this || {\n            type: 'undefined',\n        }, // `this` is `undefined` by default.\n        params.arguments || [], // `arguments` is `[]` by default.\n        params.awaitPromise, params.resultOwnership ?? 'none');\n    }\n    async process_script_disown(params) {\n        const realm = await this.#getRealm(params.target);\n        await Promise.all(params.handles.map(async (h) => await realm.disown(h)));\n        return { result: {} };\n    }\n    async process_browsingContext_close(commandParams) {\n        const browserCdpClient = this.#cdpConnection.browserClient();\n        const context = this.#browsingContextStorage.getKnownContext(commandParams.context);\n        if (context.parentId !== null) {\n            throw new protocol_js_1.Message.InvalidArgumentException('Not a top-level browsing context cannot be closed.');\n        }\n        const detachedFromTargetPromise = new Promise((resolve) => {\n            const onContextDestroyed = (eventParams) => {\n                if (eventParams.targetId === commandParams.context) {\n                    browserCdpClient.off('Target.detachedFromTarget', onContextDestroyed);\n                    resolve();\n                }\n            };\n            browserCdpClient.on('Target.detachedFromTarget', onContextDestroyed);\n        });\n        await this.#cdpConnection\n            .browserClient()\n            .sendCommand('Target.closeTarget', {\n            targetId: commandParams.context,\n        });\n        // Sometimes CDP command finishes before `detachedFromTarget` event,\n        // sometimes after. Wait for the CDP command to be finished, and then wait\n        // for `detachedFromTarget` if it hasn't emitted.\n        await detachedFromTargetPromise;\n        return { result: {} };\n    }\n    #isValidTarget(target) {\n        if (target.targetId === this.#selfTargetId) {\n            return false;\n        }\n        return ['page', 'iframe'].includes(target.type);\n    }\n    async process_cdp_sendCommand(params) {\n        const client = params.cdpSession\n            ? this.#cdpConnection.getCdpClient(params.cdpSession)\n            : this.#cdpConnection.browserClient();\n        const sendCdpCommandResult = await client.sendCommand(params.cdpMethod, params.cdpParams);\n        return {\n            result: sendCdpCommandResult,\n            cdpSession: params.cdpSession,\n        };\n    }\n    async process_cdp_getSession(params) {\n        const context = params.context;\n        const sessionId = this.#browsingContextStorage.getKnownContext(context).cdpSessionId;\n        if (sessionId === undefined) {\n            return { result: { cdpSession: null } };\n        }\n        return { result: { cdpSession: sessionId } };\n    }\n}\nexports.BrowsingContextProcessor = BrowsingContextProcessor;\n//# sourceMappingURL=browsingContextProcessor.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EventEmitter = void 0;\n/**\n * Copyright 2022 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst mitt_1 = __importDefault(require(\"mitt\"));\nclass EventEmitter {\n    #emitter = (0, mitt_1.default)();\n    on(type, handler) {\n        this.#emitter.on(type, handler);\n        return this;\n    }\n    /**\n     * Like `on` but the listener will only be fired once and then it will be removed.\n     * @param event - the event you'd like to listen to\n     * @param handler - the handler function to run when the event occurs\n     * @returns `this` to enable you to chain method calls.\n     */\n    once(event, handler) {\n        const onceHandler = (eventData) => {\n            handler(eventData);\n            this.off(event, onceHandler);\n        };\n        return this.on(event, onceHandler);\n    }\n    off(type, handler) {\n        this.#emitter.off(type, handler);\n        return this;\n    }\n    /**\n     * Emits an event and call any associated listeners.\n     *\n     * @param event - the event you'd like to emit\n     * @param eventData - any data you'd like to emit with the event\n     * @returns `true` if there are any listeners, `false` if there are not.\n     */\n    emit(event, eventData) {\n        this.#emitter.emit(event, eventData);\n    }\n}\nexports.EventEmitter = EventEmitter;\n//# sourceMappingURL=EventEmitter.js.map","module.exports=function(n){return{all:n=n||new Map,on:function(e,t){var i=n.get(e);i?i.push(t):n.set(e,[t])},off:function(e,t){var i=n.get(e);i&&(t?i.splice(i.indexOf(t)>>>0,1):n.set(e,[]))},emit:function(e,t){var i=n.get(e);i&&i.slice().map(function(n){n(t)}),(i=n.get(\"*\"))&&i.slice().map(function(n){n(e,t)})}}};\n//# sourceMappingURL=mitt.js.map\n","\"use strict\";\n/**\n * Copyright 2021 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OutgoingBidiMessage = void 0;\nclass OutgoingBidiMessage {\n    #message;\n    #channel;\n    constructor(message, channel) {\n        this.#message = message;\n        this.#channel = channel;\n    }\n    static async createFromPromise(messagePromise, channel) {\n        const message = await messagePromise;\n        return new OutgoingBidiMessage(message, channel);\n    }\n    static createResolved(message, channel) {\n        return Promise.resolve(new OutgoingBidiMessage(message, channel));\n    }\n    get message() {\n        return this.#message;\n    }\n    get channel() {\n        return this.#channel;\n    }\n}\nexports.OutgoingBidiMessage = OutgoingBidiMessage;\n//# sourceMappingURL=OutgoingBidiMessage.js.map","\"use strict\";\n/**\n * Copyright 2021 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CommandProcessor = void 0;\nconst protocol_js_1 = require(\"../protocol/protocol.js\");\nconst browsingContextProcessor_js_1 = require(\"./domains/context/browsingContextProcessor.js\");\nconst EventEmitter_js_1 = require(\"../utils/EventEmitter.js\");\nconst OutgoingBidiMessage_js_1 = require(\"./OutgoingBidiMessage.js\");\nclass BidiNoOpParser {\n    parseGetRealmsParams(params) {\n        return params;\n    }\n    parseCallFunctionParams(params) {\n        return params;\n    }\n    parseEvaluateParams(params) {\n        return params;\n    }\n    parseDisownParams(params) {\n        return params;\n    }\n    parseSendCommandParams(params) {\n        return params;\n    }\n    parseGetSessionParams(params) {\n        return params;\n    }\n    parseNavigateParams(params) {\n        return params;\n    }\n    parseGetTreeParams(params) {\n        return params;\n    }\n    parseSubscribeParams(params) {\n        return params;\n    }\n    parseCreateParams(params) {\n        return params;\n    }\n    parseCloseParams(params) {\n        return params;\n    }\n}\nclass CommandProcessor extends EventEmitter_js_1.EventEmitter {\n    #contextProcessor;\n    #eventManager;\n    #parser;\n    constructor(realmStorage, cdpConnection, eventManager, selfTargetId, parser = new BidiNoOpParser(), browsingContextStorage, logger) {\n        super();\n        this.#eventManager = eventManager;\n        this.#contextProcessor = new browsingContextProcessor_js_1.BrowsingContextProcessor(realmStorage, cdpConnection, selfTargetId, eventManager, browsingContextStorage, logger);\n        this.#parser = parser;\n    }\n    // noinspection JSMethodCanBeStatic,JSUnusedLocalSymbols\n    async #process_session_status() {\n        return { result: { ready: false, message: 'already connected' } };\n    }\n    async #process_session_subscribe(params, channel) {\n        await this.#eventManager.subscribe(params.events, params.contexts ?? [null], channel);\n        return { result: {} };\n    }\n    async #process_session_unsubscribe(params, channel) {\n        await this.#eventManager.unsubscribe(params.events, params.contexts ?? [null], channel);\n        return { result: {} };\n    }\n    async #processCommand(commandData) {\n        switch (commandData.method) {\n            case 'session.status':\n                return await this.#process_session_status();\n            case 'session.subscribe':\n                return await this.#process_session_subscribe(this.#parser.parseSubscribeParams(commandData.params), commandData.channel ?? null);\n            case 'session.unsubscribe':\n                return await this.#process_session_unsubscribe(this.#parser.parseSubscribeParams(commandData.params), commandData.channel ?? null);\n            case 'browsingContext.create':\n                return await this.#contextProcessor.process_browsingContext_create(this.#parser.parseCreateParams(commandData.params));\n            case 'browsingContext.close':\n                return await this.#contextProcessor.process_browsingContext_close(this.#parser.parseCloseParams(commandData.params));\n            case 'browsingContext.getTree':\n                return await this.#contextProcessor.process_browsingContext_getTree(this.#parser.parseGetTreeParams(commandData.params));\n            case 'browsingContext.navigate':\n                return await this.#contextProcessor.process_browsingContext_navigate(this.#parser.parseNavigateParams(commandData.params));\n            case 'script.getRealms':\n                return this.#contextProcessor.process_script_getRealms(this.#parser.parseGetRealmsParams(commandData.params));\n            case 'script.callFunction':\n                return await this.#contextProcessor.process_script_callFunction(this.#parser.parseCallFunctionParams(commandData.params));\n            case 'script.evaluate':\n                return await this.#contextProcessor.process_script_evaluate(this.#parser.parseEvaluateParams(commandData.params));\n            case 'script.disown':\n                return await this.#contextProcessor.process_script_disown(this.#parser.parseDisownParams(commandData.params));\n            case 'cdp.sendCommand':\n                return await this.#contextProcessor.process_cdp_sendCommand(this.#parser.parseSendCommandParams(commandData.params));\n            case 'cdp.getSession':\n                return await this.#contextProcessor.process_cdp_getSession(this.#parser.parseGetSessionParams(commandData.params));\n            default:\n                throw new protocol_js_1.Message.UnknownCommandException(`Unknown command '${commandData.method}'.`);\n        }\n    }\n    processCommand = async (command) => {\n        try {\n            const result = await this.#processCommand(command);\n            const response = {\n                id: command.id,\n                ...result,\n            };\n            this.emit('response', OutgoingBidiMessage_js_1.OutgoingBidiMessage.createResolved(response, command.channel ?? null));\n        }\n        catch (e) {\n            if (e instanceof protocol_js_1.Message.ErrorResponseClass) {\n                const errorResponse = e;\n                this.emit('response', OutgoingBidiMessage_js_1.OutgoingBidiMessage.createResolved(errorResponse.toErrorResponse(command.id), command.channel ?? null));\n            }\n            else {\n                const error = e;\n                console.error(error);\n                this.emit('response', OutgoingBidiMessage_js_1.OutgoingBidiMessage.createResolved(new protocol_js_1.Message.UnknownException(error.message).toErrorResponse(command.id), command.channel ?? null));\n            }\n        }\n    };\n}\nexports.CommandProcessor = CommandProcessor;\n//# sourceMappingURL=CommandProcessor.js.map","\"use strict\";\n/**\n * Copyright 2022 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BrowsingContextStorage = void 0;\nconst protocol_js_1 = require(\"../../../protocol/protocol.js\");\nclass BrowsingContextStorage {\n    #contexts = new Map();\n    getTopLevelContexts() {\n        return Array.from(this.#contexts.values()).filter((c) => c.parentId === null);\n    }\n    removeContext(contextId) {\n        this.#contexts.delete(contextId);\n    }\n    addContext(context) {\n        this.#contexts.set(context.contextId, context);\n        if (context.parentId !== null) {\n            this.getKnownContext(context.parentId).addChild(context);\n        }\n    }\n    hasKnownContext(contextId) {\n        return this.#contexts.has(contextId);\n    }\n    findContext(contextId) {\n        return this.#contexts.get(contextId);\n    }\n    getKnownContext(contextId) {\n        const result = this.findContext(contextId);\n        if (result === undefined) {\n            throw new protocol_js_1.Message.NoSuchFrameException(`Context ${contextId} not found`);\n        }\n        return result;\n    }\n}\nexports.BrowsingContextStorage = BrowsingContextStorage;\n//# sourceMappingURL=browsingContextStorage.js.map","\"use strict\";\n/**\n * Copyright 2022 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Buffer = void 0;\n/**\n * Implements a FIFO buffer with a fixed size.\n */\nclass Buffer {\n    #capacity;\n    #entries = [];\n    #onItemRemoved;\n    /**\n     * @param capacity\n     * @param onItemRemoved optional delegate called for each removed element.\n     */\n    constructor(capacity, onItemRemoved = () => { }) {\n        this.#capacity = capacity;\n        this.#onItemRemoved = onItemRemoved;\n    }\n    get() {\n        return this.#entries;\n    }\n    add(value) {\n        this.#entries.push(value);\n        while (this.#entries.length > this.#capacity) {\n            const item = this.#entries.shift();\n            if (item !== undefined) {\n                this.#onItemRemoved(item);\n            }\n        }\n    }\n}\nexports.Buffer = Buffer;\n//# sourceMappingURL=buffer.js.map","\"use strict\";\n/**\n * Copyright 2022 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IdWrapper = void 0;\n/**\n * Creates an object with a positive unique incrementing id.\n */\nclass IdWrapper {\n    static #counter = 0;\n    #id;\n    constructor() {\n        this.#id = ++IdWrapper.#counter;\n    }\n    get id() {\n        return this.#id;\n    }\n}\nexports.IdWrapper = IdWrapper;\n//# sourceMappingURL=idWrapper.js.map","\"use strict\";\n/**\n * Copyright 2022 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SubscriptionManager = void 0;\nconst protocol_js_1 = require(\"../../../protocol/protocol.js\");\nvar InvalidArgumentException = protocol_js_1.Message.InvalidArgumentException;\nclass SubscriptionManager {\n    #subscriptionPriority = 0;\n    // BrowsingContext `null` means the event has subscription across all the\n    // browsing contexts.\n    // Channel `null` means no `channel` should be added.\n    #channelToContextToEventMap = new Map();\n    #browsingContextStorage;\n    constructor(browsingContextStorage) {\n        this.#browsingContextStorage = browsingContextStorage;\n    }\n    getChannelsSubscribedToEvent(eventMethod, contextId) {\n        const prioritiesAndChannels = Array.from(this.#channelToContextToEventMap.keys())\n            .map((channel) => ({\n            priority: this.#getEventSubscriptionPriorityForChannel(eventMethod, contextId, channel),\n            channel,\n        }))\n            .filter(({ priority }) => priority !== null);\n        // Sort channels by priority.\n        return prioritiesAndChannels\n            .sort((a, b) => a.priority - b.priority)\n            .map(({ channel }) => channel);\n    }\n    #getEventSubscriptionPriorityForChannel(eventMethod, contextId, channel) {\n        const contextToEventMap = this.#channelToContextToEventMap.get(channel);\n        if (contextToEventMap === undefined) {\n            return null;\n        }\n        const maybeTopLevelContextId = this.#findTopLevelContextId(contextId);\n        // `null` covers global subscription.\n        const relevantContexts = [...new Set([null, maybeTopLevelContextId])];\n        // Get all the subscription priorities.\n        const priorities = relevantContexts\n            .map((c) => contextToEventMap.get(c)?.get(eventMethod))\n            .filter((p) => p !== undefined);\n        if (priorities.length === 0) {\n            // Not subscribed, return null.\n            return null;\n        }\n        // Return minimal priority.\n        return Math.min(...priorities);\n    }\n    #findTopLevelContextId(contextId) {\n        if (contextId === null) {\n            return null;\n        }\n        const maybeContext = this.#browsingContextStorage.findContext(contextId);\n        const parentId = maybeContext?.parentId ?? null;\n        if (parentId !== null) {\n            return this.#findTopLevelContextId(parentId);\n        }\n        return contextId;\n    }\n    subscribe(event, contextId, channel) {\n        // All the subscriptions are handled on the top-level contexts.\n        contextId = this.#findTopLevelContextId(contextId);\n        if (event === protocol_js_1.BrowsingContext.AllEvents) {\n            Object.values(protocol_js_1.BrowsingContext.EventNames).map((specificEvent) => this.subscribe(specificEvent, contextId, channel));\n            return;\n        }\n        if (event === protocol_js_1.CDP.AllEvents) {\n            Object.values(protocol_js_1.CDP.EventNames).map((specificEvent) => this.subscribe(specificEvent, contextId, channel));\n            return;\n        }\n        if (event === protocol_js_1.Log.AllEvents) {\n            Object.values(protocol_js_1.Log.EventNames).map((specificEvent) => this.subscribe(specificEvent, contextId, channel));\n            return;\n        }\n        if (!this.#channelToContextToEventMap.has(channel)) {\n            this.#channelToContextToEventMap.set(channel, new Map());\n        }\n        const contextToEventMap = this.#channelToContextToEventMap.get(channel);\n        if (!contextToEventMap.has(contextId)) {\n            contextToEventMap.set(contextId, new Map());\n        }\n        const eventMap = contextToEventMap.get(contextId);\n        // Do not re-subscribe to events to keep the priority.\n        if (eventMap.has(event)) {\n            return;\n        }\n        eventMap.set(event, this.#subscriptionPriority++);\n    }\n    unsubscribe(event, contextId, channel) {\n        // All the subscriptions are handled on the top-level contexts.\n        contextId = this.#findTopLevelContextId(contextId);\n        if (event === protocol_js_1.BrowsingContext.AllEvents) {\n            Object.values(protocol_js_1.BrowsingContext.EventNames).map((specificEvent) => this.unsubscribe(specificEvent, contextId, channel));\n            return;\n        }\n        if (event === protocol_js_1.CDP.AllEvents) {\n            Object.values(protocol_js_1.CDP.EventNames).map((specificEvent) => this.unsubscribe(specificEvent, contextId, channel));\n            return;\n        }\n        if (event === protocol_js_1.Log.AllEvents) {\n            Object.values(protocol_js_1.Log.EventNames).map((specificEvent) => this.unsubscribe(specificEvent, contextId, channel));\n            return;\n        }\n        if (!this.#channelToContextToEventMap.has(channel)) {\n            throw new InvalidArgumentException(`Cannot unsubscribe from ${event}, ${contextId}. No subscription found.`);\n        }\n        const contextToEventMap = this.#channelToContextToEventMap.get(channel);\n        if (!contextToEventMap.has(contextId)) {\n            throw new InvalidArgumentException(`Cannot unsubscribe from ${event}, ${contextId}. No subscription found.`);\n        }\n        const eventMap = contextToEventMap.get(contextId);\n        if (!eventMap.has(event)) {\n            throw new InvalidArgumentException(`Cannot unsubscribe from ${event}, ${contextId}. No subscription found.`);\n        }\n        eventMap.delete(event);\n        // Clean up maps if empty.\n        if (eventMap.size === 0) {\n            contextToEventMap.delete(event);\n        }\n        if (contextToEventMap.size === 0) {\n            this.#channelToContextToEventMap.delete(channel);\n        }\n    }\n}\nexports.SubscriptionManager = SubscriptionManager;\n//# sourceMappingURL=SubscriptionManager.js.map","\"use strict\";\n/**\n * Copyright 2022 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EventManager = void 0;\nconst buffer_js_1 = require(\"../../../utils/buffer.js\");\nconst idWrapper_js_1 = require(\"../../../utils/idWrapper.js\");\nconst OutgoingBidiMessage_js_1 = require(\"../../OutgoingBidiMessage.js\");\nconst SubscriptionManager_js_1 = require(\"./SubscriptionManager.js\");\nclass EventWrapper extends idWrapper_js_1.IdWrapper {\n    #contextId;\n    #event;\n    constructor(event, contextId) {\n        super();\n        this.#contextId = contextId;\n        this.#event = event;\n    }\n    get contextId() {\n        return this.#contextId;\n    }\n    get event() {\n        return this.#event;\n    }\n}\n/**\n * Maps event name to a desired buffer length.\n */\nconst eventBufferLength = new Map([\n    ['log.entryAdded', 100],\n]);\nclass EventManager {\n    /**\n     * Maps event name to a set of contexts where this event already happened.\n     * Needed for getting buffered events from all the contexts in case of\n     * subscripting to all contexts.\n     */\n    #eventToContextsMap = new Map();\n    /**\n     * Maps `eventName` + `browsingContext` to buffer. Used to get buffered events\n     * during subscription. Channel-agnostic.\n     */\n    #eventBuffers = new Map();\n    /**\n     * Maps `eventName` + `browsingContext` + `channel` to last sent event id.\n     * Used to avoid sending duplicated events when user\n     * subscribes -> unsubscribes -> subscribes.\n     */\n    #lastMessageSent = new Map();\n    #subscriptionManager;\n    #bidiServer;\n    constructor(bidiServer) {\n        this.#bidiServer = bidiServer;\n        this.#subscriptionManager = new SubscriptionManager_js_1.SubscriptionManager(bidiServer.getBrowsingContextStorage());\n    }\n    /**\n     * Returns consistent key to be used to access value maps.\n     */\n    #getMapKey(eventName, browsingContext, channel = undefined) {\n        return JSON.stringify({ eventName, browsingContext, channel });\n    }\n    async registerEvent(event, contextId) {\n        await this.registerPromiseEvent(Promise.resolve(event), contextId, event.method);\n    }\n    async registerPromiseEvent(event, contextId, eventName) {\n        const eventWrapper = new EventWrapper(event, contextId);\n        const sortedChannels = this.#subscriptionManager.getChannelsSubscribedToEvent(eventName, contextId);\n        this.#bufferEvent(eventWrapper, eventName);\n        // Send events to channels in the subscription priority.\n        for (const channel of sortedChannels) {\n            this.#bidiServer.emitOutgoingMessage(OutgoingBidiMessage_js_1.OutgoingBidiMessage.createFromPromise(event, channel));\n            this.#markEventSent(eventWrapper, channel, eventName);\n        }\n    }\n    async subscribe(eventNames, contextIds, channel) {\n        // First check if all the contexts are known.\n        for (const contextId of contextIds) {\n            if (contextId !== null) {\n                // Assert the context is known. Throw exception otherwise.\n                this.#bidiServer.getBrowsingContextStorage().getKnownContext(contextId);\n            }\n        }\n        for (const eventName of eventNames) {\n            for (const contextId of contextIds) {\n                this.#subscriptionManager.subscribe(eventName, contextId, channel);\n                for (const eventWrapper of this.#getBufferedEvents(eventName, contextId, channel)) {\n                    // The order of the events is important.\n                    this.#bidiServer.emitOutgoingMessage(OutgoingBidiMessage_js_1.OutgoingBidiMessage.createFromPromise(eventWrapper.event, channel));\n                    this.#markEventSent(eventWrapper, channel, eventName);\n                }\n            }\n        }\n    }\n    async unsubscribe(eventNames, contextIds, channel) {\n        // First check if all the contexts are known.\n        for (const contextId of contextIds) {\n            if (contextId !== null) {\n                // Assert the context is known. Throw exception otherwise.\n                this.#bidiServer.getBrowsingContextStorage().getKnownContext(contextId);\n            }\n        }\n        for (const eventName of eventNames) {\n            for (const contextId of contextIds) {\n                this.#subscriptionManager.unsubscribe(eventName, contextId, channel);\n            }\n        }\n    }\n    /**\n     * If the event is buffer-able, put it in the buffer.\n     */\n    #bufferEvent(eventWrapper, eventName) {\n        if (!eventBufferLength.has(eventName)) {\n            // Do nothing if the event is no buffer-able.\n            return;\n        }\n        const bufferMapKey = this.#getMapKey(eventName, eventWrapper.contextId);\n        if (!this.#eventBuffers.has(bufferMapKey)) {\n            this.#eventBuffers.set(bufferMapKey, new buffer_js_1.Buffer(eventBufferLength.get(eventName)));\n        }\n        this.#eventBuffers.get(bufferMapKey).add(eventWrapper);\n        // Add the context to the list of contexts having `eventName` events.\n        if (!this.#eventToContextsMap.has(eventName)) {\n            this.#eventToContextsMap.set(eventName, new Set());\n        }\n        this.#eventToContextsMap.get(eventName).add(eventWrapper.contextId);\n    }\n    /**\n     * If the event is buffer-able, mark it as sent to the given contextId and channel.\n     */\n    #markEventSent(eventWrapper, channel, eventName) {\n        if (!eventBufferLength.has(eventName)) {\n            // Do nothing if the event is no buffer-able.\n            return;\n        }\n        const lastSentMapKey = this.#getMapKey(eventName, eventWrapper.contextId, channel);\n        this.#lastMessageSent.set(lastSentMapKey, Math.max(this.#lastMessageSent.get(lastSentMapKey) ?? 0, eventWrapper.id));\n    }\n    /**\n     * Returns events which are buffered and not yet sent to the given channel events.\n     */\n    #getBufferedEvents(eventName, contextId, channel) {\n        const bufferMapKey = this.#getMapKey(eventName, contextId);\n        const lastSentMapKey = this.#getMapKey(eventName, contextId, channel);\n        const lastSentMessageId = this.#lastMessageSent.get(lastSentMapKey) ?? -Infinity;\n        const result = this.#eventBuffers\n            .get(bufferMapKey)\n            ?.get()\n            .filter((wrapper) => wrapper.id > lastSentMessageId) ?? [];\n        if (contextId === null) {\n            // For global subscriptions, events buffered in each context should be sent back.\n            Array.from(this.#eventToContextsMap.get(eventName)?.keys() ?? [])\n                .filter((_contextId) => \n            // Events without context are already in the result.\n            _contextId !== null &&\n                // Events from deleted contexts should not be sent.\n                this.#bidiServer\n                    .getBrowsingContextStorage()\n                    .hasKnownContext(_contextId))\n                .map((_contextId) => this.#getBufferedEvents(eventName, _contextId, channel))\n                .forEach((events) => result.push(...events));\n        }\n        return result.sort((e1, e2) => e1.id - e2.id);\n    }\n}\nexports.EventManager = EventManager;\n//# sourceMappingURL=EventManager.js.map","\"use strict\";\n/**\n * Copyright 2022 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProcessingQueue = void 0;\nconst log_js_1 = require(\"./log.js\");\nclass ProcessingQueue {\n    #catch;\n    #logger;\n    #processor;\n    #queue = [];\n    // Flag to keep only 1 active processor.\n    #isProcessing = false;\n    constructor(processor, _catch = () => Promise.resolve(), logger) {\n        this.#catch = _catch;\n        this.#processor = processor;\n        this.#logger = logger;\n    }\n    add(entry) {\n        this.#queue.push(entry);\n        // No need in waiting. Just initialise processor if needed.\n        // noinspection JSIgnoredPromiseFromCall\n        this.#processIfNeeded();\n    }\n    async #processIfNeeded() {\n        if (this.#isProcessing) {\n            return;\n        }\n        this.#isProcessing = true;\n        while (this.#queue.length > 0) {\n            const entryPromise = this.#queue.shift();\n            if (entryPromise !== undefined) {\n                await entryPromise\n                    .then((entry) => this.#processor(entry))\n                    .catch((e) => {\n                    this.#logger?.(log_js_1.LogType.system, 'Event was not processed:', e);\n                    this.#catch(e);\n                })\n                    .finally();\n            }\n        }\n        this.#isProcessing = false;\n    }\n}\nexports.ProcessingQueue = ProcessingQueue;\n//# sourceMappingURL=processingQueue.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RealmStorage = void 0;\nconst protocol_js_1 = require(\"../../../protocol/protocol.js\");\nclass RealmStorage {\n    /** Tracks handles and their realms sent to the client. */\n    #knownHandlesToRealm = new Map();\n    #realmMap = new Map();\n    get knownHandlesToRealm() {\n        return this.#knownHandlesToRealm;\n    }\n    get realmMap() {\n        return this.#realmMap;\n    }\n    findRealms(filter) {\n        return Array.from(this.#realmMap.values()).filter((realm) => {\n            if (filter.realmId !== undefined && filter.realmId !== realm.realmId) {\n                return false;\n            }\n            if (filter.browsingContextId !== undefined &&\n                filter.browsingContextId !== realm.browsingContextId) {\n                return false;\n            }\n            if (filter.navigableId !== undefined &&\n                filter.navigableId !== realm.navigableId) {\n                return false;\n            }\n            if (filter.executionContextId !== undefined &&\n                filter.executionContextId !== realm.executionContextId) {\n                return false;\n            }\n            if (filter.origin !== undefined && filter.origin !== realm.origin) {\n                return false;\n            }\n            if (filter.type !== undefined && filter.type !== realm.type) {\n                return false;\n            }\n            if (filter.sandbox !== undefined && filter.sandbox !== realm.sandbox) {\n                return false;\n            }\n            if (filter.cdpSessionId !== undefined &&\n                filter.cdpSessionId !== realm.cdpSessionId) {\n                return false;\n            }\n            return true;\n        });\n    }\n    findRealm(filter) {\n        const maybeRealms = this.findRealms(filter);\n        if (maybeRealms.length !== 1) {\n            return undefined;\n        }\n        return maybeRealms[0];\n    }\n    getRealm(filter) {\n        const maybeRealm = this.findRealm(filter);\n        if (maybeRealm === undefined) {\n            throw new protocol_js_1.Message.NoSuchFrameException(`Realm ${JSON.stringify(filter)} not found`);\n        }\n        return maybeRealm;\n    }\n    deleteRealms(filter) {\n        this.findRealms(filter).map((realm) => {\n            this.#realmMap.delete(realm.realmId);\n            Array.from(this.#knownHandlesToRealm.entries())\n                .filter(([, r]) => r === realm.realmId)\n                .map(([h]) => this.#knownHandlesToRealm.delete(h));\n        });\n    }\n}\nexports.RealmStorage = RealmStorage;\n//# sourceMappingURL=realmStorage.js.map","\"use strict\";\n/**\n * Copyright 2021 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BidiServer = void 0;\nconst CommandProcessor_js_1 = require(\"./CommandProcessor.js\");\nconst browsingContextStorage_js_1 = require(\"./domains/context/browsingContextStorage.js\");\nconst EventEmitter_js_1 = require(\"../utils/EventEmitter.js\");\nconst EventManager_js_1 = require(\"./domains/events/EventManager.js\");\nconst processingQueue_js_1 = require(\"../utils/processingQueue.js\");\nconst realmStorage_js_1 = require(\"./domains/script/realmStorage.js\");\nclass BidiServer extends EventEmitter_js_1.EventEmitter {\n    #messageQueue;\n    #transport;\n    #commandProcessor;\n    #browsingContextStorage;\n    #realmStorage;\n    #logger;\n    constructor(bidiTransport, cdpConnection, selfTargetId, parser, logger) {\n        super();\n        this.#logger = logger;\n        this.#browsingContextStorage = new browsingContextStorage_js_1.BrowsingContextStorage();\n        this.#realmStorage = new realmStorage_js_1.RealmStorage();\n        this.#messageQueue = new processingQueue_js_1.ProcessingQueue(this.#processOutgoingMessage, undefined, this.#logger);\n        this.#transport = bidiTransport;\n        this.#transport.setOnMessage(this.#handleIncomingMessage);\n        this.#commandProcessor = new CommandProcessor_js_1.CommandProcessor(this.#realmStorage, cdpConnection, new EventManager_js_1.EventManager(this), selfTargetId, parser, this.#browsingContextStorage, this.#logger);\n        this.#commandProcessor.on('response', (response) => {\n            this.emitOutgoingMessage(response);\n        });\n    }\n    static async createAndStart(bidiTransport, cdpConnection, selfTargetId, parser, logger) {\n        const server = new BidiServer(bidiTransport, cdpConnection, selfTargetId, parser, logger);\n        const cdpClient = cdpConnection.browserClient();\n        // Needed to get events about new targets.\n        await cdpClient.sendCommand('Target.setDiscoverTargets', { discover: true });\n        // Needed to automatically attach to new targets.\n        await cdpClient.sendCommand('Target.setAutoAttach', {\n            autoAttach: true,\n            waitForDebuggerOnStart: true,\n            flatten: true,\n        });\n        await server.topLevelContextsLoaded();\n        return server;\n    }\n    async topLevelContextsLoaded() {\n        await Promise.all(this.#browsingContextStorage\n            .getTopLevelContexts()\n            .map((c) => c.awaitLoaded()));\n    }\n    #processOutgoingMessage = async (messageEntry) => {\n        const message = messageEntry.message;\n        if (messageEntry.channel !== null) {\n            message['channel'] = messageEntry.channel;\n        }\n        await this.#transport.sendMessage(message);\n    };\n    /**\n     * Sends BiDi message.\n     */\n    emitOutgoingMessage(messageEntry) {\n        this.#messageQueue.add(messageEntry);\n    }\n    close() {\n        this.#transport.close();\n    }\n    #handleIncomingMessage = async (message) => {\n        this.#commandProcessor.processCommand(message);\n    };\n    getBrowsingContextStorage() {\n        return this.#browsingContextStorage;\n    }\n}\nexports.BidiServer = BidiServer;\n//# sourceMappingURL=BidiServer.js.map","\"use strict\";\n/**\n * Copyright 2021 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createClient = exports.CdpClient = void 0;\nconst EventEmitter_js_1 = require(\"../utils/EventEmitter.js\");\nclass CdpClient extends EventEmitter_js_1.EventEmitter {\n    cdpConnection;\n    sessionId;\n    constructor(cdpConnection, sessionId) {\n        super();\n        this.cdpConnection = cdpConnection;\n        this.sessionId = sessionId;\n    }\n    /**\n     * Returns command promise, which will be resolved with the command result after receiving CDP result.\n     * @param method Name of the CDP command to call.\n     * @param params Parameters to pass to the CDP command.\n     */\n    sendCommand(method, ...params) {\n        const param = params[0];\n        return this.cdpConnection.sendCommand(method, param, this.sessionId);\n    }\n}\nexports.CdpClient = CdpClient;\n/**\n * Creates a new CDP client object that communicates with the browser using a given\n * transport mechanism.\n * @param transport A transport object that will be used to send and receive raw CDP messages.\n * @returns A connected CDP client object.\n */\nfunction createClient(cdpConnection, sessionId) {\n    return new CdpClient(cdpConnection, sessionId);\n}\nexports.createClient = createClient;\n//# sourceMappingURL=cdpClient.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CdpConnection = void 0;\n/**\n * Copyright 2021 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst cdpClient_js_1 = require(\"./cdpClient.js\");\n/**\n * Represents a high-level CDP connection to the browser backend.\n * Manages a CdpClient instance for each active CDP session.\n */\nclass CdpConnection {\n    #transport;\n    #browserCdpClient;\n    #sessionCdpClients = new Map();\n    #commandCallbacks = new Map();\n    #log;\n    #nextId = 0;\n    constructor(transport, log = () => { }) {\n        this.#transport = transport;\n        this.#log = log;\n        this.#transport.setOnMessage(this.onMessage);\n        this.#browserCdpClient = (0, cdpClient_js_1.createClient)(this, null);\n    }\n    /**\n     * Close the connection to the browser.\n     */\n    close() {\n        this.#transport.close();\n        for (const [, { reject }] of this.#commandCallbacks) {\n            reject(new Error('Disconnected'));\n        }\n        this.#commandCallbacks.clear();\n        this.#sessionCdpClients.clear();\n    }\n    /**\n     * @returns The CdpClient object attached to the root browser session.\n     */\n    browserClient() {\n        return this.#browserCdpClient;\n    }\n    /**\n     * Get a CdpClient instance by sessionId.\n     * @param sessionId The sessionId of the CdpClient to retrieve.\n     * @returns The CdpClient object attached to the given session, or null if the session is not attached.\n     */\n    getCdpClient(sessionId) {\n        const cdpClient = this.#sessionCdpClients.get(sessionId);\n        if (!cdpClient) {\n            throw new Error('Unknown CDP session ID');\n        }\n        return cdpClient;\n    }\n    sendCommand(method, params, sessionId) {\n        return new Promise((resolve, reject) => {\n            const id = this.#nextId++;\n            this.#commandCallbacks.set(id, { resolve, reject });\n            const messageObj = { id, method, params };\n            if (sessionId) {\n                messageObj.sessionId = sessionId;\n            }\n            const messageStr = JSON.stringify(messageObj);\n            const messagePretty = JSON.stringify(messageObj, null, 2);\n            this.#transport.sendMessage(messageStr);\n            this.#log('sent ▸', messagePretty);\n        });\n    }\n    onMessage = async (message) => {\n        const parsed = JSON.parse(message);\n        const messagePretty = JSON.stringify(parsed, null, 2);\n        this.#log('received ◂', messagePretty);\n        // Update client map if a session is attached or detached.\n        // Listen for these events on every session.\n        if (parsed.method === 'Target.attachedToTarget') {\n            const { sessionId } = parsed.params;\n            this.#sessionCdpClients.set(sessionId, (0, cdpClient_js_1.createClient)(this, sessionId));\n        }\n        else if (parsed.method === 'Target.detachedFromTarget') {\n            const { sessionId } = parsed.params;\n            const client = this.#sessionCdpClients.get(sessionId);\n            if (client) {\n                this.#sessionCdpClients.delete(sessionId);\n            }\n        }\n        if (parsed.id !== undefined) {\n            // Handle command response.\n            const callbacks = this.#commandCallbacks.get(parsed.id);\n            if (callbacks) {\n                if (parsed.result) {\n                    callbacks.resolve(parsed.result);\n                }\n                else if (parsed.error) {\n                    callbacks.reject(parsed.error);\n                }\n            }\n        }\n        else if (parsed.method) {\n            const client = parsed.sessionId\n                ? this.#sessionCdpClients.get(parsed.sessionId)\n                : this.#browserCdpClient;\n            if (client) {\n                client.emit(parsed.method, parsed.params || {});\n            }\n        }\n    };\n}\nexports.CdpConnection = CdpConnection;\n//# sourceMappingURL=cdpConnection.js.map","\"use strict\";\n/**\n * Copyright 2021 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WebSocketTransport = void 0;\nclass WebSocketTransport {\n    ws;\n    onMessage = null;\n    constructor(ws) {\n        this.ws = ws;\n        this.ws.on('message', (message) => {\n            if (this.onMessage) {\n                this.onMessage.call(null, message);\n            }\n        });\n    }\n    setOnMessage(onMessage) {\n        this.onMessage = onMessage;\n    }\n    async sendMessage(message) {\n        this.ws.send(message);\n    }\n    close() {\n        this.onMessage = null;\n        this.ws.close();\n    }\n}\nexports.WebSocketTransport = WebSocketTransport;\n//# sourceMappingURL=websocketTransport.js.map","\"use strict\";\n/**\n * Copyright 2021 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WebSocketTransport = exports.CdpConnection = exports.CdpClient = void 0;\nvar cdpClient_js_1 = require(\"./cdpClient.js\");\nObject.defineProperty(exports, \"CdpClient\", { enumerable: true, get: function () { return cdpClient_js_1.CdpClient; } });\nvar cdpConnection_js_1 = require(\"./cdpConnection.js\");\nObject.defineProperty(exports, \"CdpConnection\", { enumerable: true, get: function () { return cdpConnection_js_1.CdpConnection; } });\nvar websocketTransport_js_1 = require(\"./websocketTransport.js\");\nObject.defineProperty(exports, \"WebSocketTransport\", { enumerable: true, get: function () { return websocketTransport_js_1.WebSocketTransport; } });\n//# sourceMappingURL=index.js.map","\"use strict\";\n/**\n * Copyright 2021 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @license\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Parser = __importStar(require(\"../protocol-parser/protocol-parser.js\"));\nconst mapperTabPage_js_1 = require(\"./mapperTabPage.js\");\nconst BidiServer_js_1 = require(\"../bidiMapper/BidiServer.js\");\nconst index_js_1 = require(\"../cdp/index.js\");\nconst log_js_1 = require(\"../utils/log.js\");\nconst OutgoingBidiMessage_js_1 = require(\"../bidiMapper/OutgoingBidiMessage.js\");\n// Initiate `setSelfTargetId` as soon as possible to prevent race condition.\nconst waitSelfTargetIdPromise = waitSelfTargetId();\n(async () => {\n    (0, mapperTabPage_js_1.generatePage)();\n    // Needed to filter out info related to BiDi target.\n    const selfTargetId = await waitSelfTargetIdPromise;\n    const bidiServer = await createBidiServer(selfTargetId);\n    (0, mapperTabPage_js_1.log)(log_js_1.LogType.system, 'Launched');\n    bidiServer.emitOutgoingMessage(OutgoingBidiMessage_js_1.OutgoingBidiMessage.createResolved({ launched: true }, null));\n})();\nfunction createCdpConnection() {\n    // A CdpTransport implementation that uses the window.cdp bindings\n    // injected by Target.exposeDevToolsProtocol.\n    class WindowCdpTransport {\n        onMessage = null;\n        constructor() {\n            window.cdp.onmessage = (message) => {\n                if (this.onMessage) {\n                    this.onMessage.call(null, message);\n                }\n            };\n        }\n        setOnMessage(onMessage) {\n            this.onMessage = onMessage;\n        }\n        async sendMessage(message) {\n            window.cdp.send(message);\n        }\n        close() {\n            this.onMessage = null;\n            window.cdp.onmessage = null;\n        }\n    }\n    return new index_js_1.CdpConnection(new WindowCdpTransport(), (...messages) => {\n        (0, mapperTabPage_js_1.log)(log_js_1.LogType.cdp, ...messages);\n    });\n}\nasync function createBidiServer(selfTargetId) {\n    class WindowBidiTransport {\n        onMessage = null;\n        constructor() {\n            window.onBidiMessage = (messageStr) => {\n                (0, mapperTabPage_js_1.log)(log_js_1.LogType.bidi, 'received ◂', messageStr);\n                let messageObj;\n                try {\n                    messageObj = WindowBidiTransport.#parseBidiMessage(messageStr);\n                }\n                catch (e) {\n                    // Transport-level error does not provide channel.\n                    this.#respondWithError(messageStr, 'invalid argument', e.message, null);\n                    return;\n                }\n                if (this.onMessage) {\n                    this.onMessage.call(null, messageObj);\n                }\n            };\n        }\n        setOnMessage(onMessage) {\n            this.onMessage = onMessage;\n        }\n        async sendMessage(message) {\n            const messageStr = JSON.stringify(message);\n            window.sendBidiResponse(messageStr);\n            (0, mapperTabPage_js_1.log)(log_js_1.LogType.bidi, 'sent ▸', messageStr);\n        }\n        close() {\n            this.onMessage = null;\n            window.onBidiMessage = null;\n        }\n        #respondWithError(plainCommandData, errorCode, errorMessage, channel) {\n            const errorResponse = WindowBidiTransport.#getErrorResponse(plainCommandData, errorCode, errorMessage);\n            if (channel) {\n                // TODO: get rid of any, same code existed in BidiServer.\n                this.sendMessage({\n                    ...errorResponse,\n                    channel,\n                });\n            }\n            else {\n                this.sendMessage(errorResponse);\n            }\n        }\n        static #getJsonType(value) {\n            if (value === null) {\n                return 'null';\n            }\n            if (Array.isArray(value)) {\n                return 'array';\n            }\n            return typeof value;\n        }\n        static #getErrorResponse(messageStr, errorCode, errorMessage) {\n            // TODO: this is bizarre per spec. We reparse the payload and\n            // extract the ID, regardless of what kind of value it was.\n            let messageId;\n            try {\n                const messageObj = JSON.parse(messageStr);\n                if (WindowBidiTransport.#getJsonType(messageObj) === 'object' &&\n                    'id' in messageObj) {\n                    messageId = messageObj.id;\n                }\n            }\n            catch { }\n            return {\n                id: messageId,\n                error: errorCode,\n                message: errorMessage,\n                // TODO: optional stacktrace field.\n            };\n        }\n        static #parseBidiMessage(messageStr) {\n            let messageObj;\n            try {\n                messageObj = JSON.parse(messageStr);\n            }\n            catch {\n                throw new Error('Cannot parse data as JSON');\n            }\n            const parsedType = WindowBidiTransport.#getJsonType(messageObj);\n            if (parsedType !== 'object') {\n                throw new Error(`Expected JSON object but got ${parsedType}`);\n            }\n            // Extract amd validate id, method and params.\n            const { id, method, params } = messageObj;\n            const idType = WindowBidiTransport.#getJsonType(id);\n            if (idType !== 'number' || !Number.isInteger(id) || id < 0) {\n                // TODO: should uint64_t be the upper limit?\n                // https://tools.ietf.org/html/rfc7049#section-2.1\n                throw new Error(`Expected unsigned integer but got ${idType}`);\n            }\n            const methodType = WindowBidiTransport.#getJsonType(method);\n            if (methodType !== 'string') {\n                throw new Error(`Expected string method but got ${methodType}`);\n            }\n            const paramsType = WindowBidiTransport.#getJsonType(params);\n            if (paramsType !== 'object') {\n                throw new Error(`Expected object params but got ${paramsType}`);\n            }\n            let channel = messageObj.channel;\n            if (channel !== undefined) {\n                const channelType = WindowBidiTransport.#getJsonType(channel);\n                if (channelType !== 'string') {\n                    throw new Error(`Expected string channel but got ${channelType}`);\n                }\n                // Empty string channel is considered as no channel provided.\n                if (channel === '') {\n                    channel = undefined;\n                }\n            }\n            return { id, method, params, channel };\n        }\n    }\n    return await BidiServer_js_1.BidiServer.createAndStart(new WindowBidiTransport(), createCdpConnection(), selfTargetId, new BidiParserImpl(), mapperTabPage_js_1.log);\n}\nclass BidiParserImpl {\n    parseGetRealmsParams(params) {\n        return Parser.Script.parseGetRealmsParams(params);\n    }\n    parseCallFunctionParams(params) {\n        return Parser.Script.parseCallFunctionParams(params);\n    }\n    parseEvaluateParams(params) {\n        return Parser.Script.parseEvaluateParams(params);\n    }\n    parseDisownParams(params) {\n        return Parser.Script.parseDisownParams(params);\n    }\n    parseSendCommandParams(params) {\n        return Parser.CDP.parseSendCommandParams(params);\n    }\n    parseGetSessionParams(params) {\n        return Parser.CDP.parseGetSessionParams(params);\n    }\n    parseNavigateParams(params) {\n        return Parser.BrowsingContext.parseNavigateParams(params);\n    }\n    parseGetTreeParams(params) {\n        return Parser.BrowsingContext.parseGetTreeParams(params);\n    }\n    parseSubscribeParams(params) {\n        return Parser.Session.parseSubscribeParams(params);\n    }\n    parseCreateParams(params) {\n        return Parser.BrowsingContext.parseCreateParams(params);\n    }\n    parseCloseParams(params) {\n        return Parser.BrowsingContext.parseCloseParams(params);\n    }\n}\n// Needed to filter out info related to BiDi target.\nasync function waitSelfTargetId() {\n    return await new Promise((resolve) => {\n        window.setSelfTargetId = (targetId) => {\n            (0, mapperTabPage_js_1.log)(log_js_1.LogType.system, 'Current target ID:', targetId);\n            resolve(targetId);\n        };\n    });\n}\n//# sourceMappingURL=bidiTab.js.map"],"names":["BrowsingContext","EventNames","Log","CDP","Object","defineProperty","exports","value","Message","ErrorResponseClass","constructor","error","message","stacktrace","this","toErrorResponse","commandId","id","UnknownException","super","UnknownCommandException","InvalidArgumentException","NoSuchNodeException","NoSuchFrameException","AllEvents","util","getParsedType","ZodParsedType","assertNever","_x","Error","arrayToEnum","items","obj","item","getValidEnumValues","validKeys","objectKeys","filter","k","filtered","objectValues","map","e","keys","object","key","prototype","hasOwnProperty","call","push","find","arr","checker","isInteger","Number","val","isFinite","Math","floor","joinValues","array","separator","join","data","undefined","string","isNaN","nan","number","boolean","function","bigint","Array","isArray","null","then","catch","promise","Map","Set","set","Date","date","unknown","setErrorMap","defaultErrorMap","ZodError","ZodIssueCode","util_1","require$$0","quotelessJson","JSON","stringify","replace","issues","addIssue","sub","addIssues","subs","actualProto","setPrototypeOf","__proto__","name","errors","format","_mapper","mapper","issue","fieldErrors","_errors","processError","code","unionErrors","returnTypeError","argumentsError","path","length","curr","i","el","toString","isEmpty","flatten","formErrors","create","_ctx","invalid_type","received","expected","invalid_literal","unrecognized_keys","invalid_union","invalid_union_discriminator","options","invalid_enum_value","invalid_arguments","invalid_return_type","invalid_date","invalid_string","validation","too_small","type","inclusive","minimum","too_big","maximum","custom","invalid_intersection_types","not_multiple_of","multipleOf","defaultError","overrideErrorMap","isAsync","isValid","isDirty","isAborted","OK","DIRTY","INVALID","ParseStatus","addIssueToContext","EMPTY_PATH","makeIssue","ZodError_1","params","errorMaps","issueData","fullPath","fullIssue","errorMessage","maps","m","slice","reverse","ctx","common","contextualErrorMap","schemaErrorMap","x","dirty","abort","static","status","results","arrayValue","s","pairs","syncPairs","pair","mergeObjectSync","finalObject","alwaysSet","freeze","Promise","typeAliases","errorUtil","errToObj","intersection","instanceof","enum","effect","any","ZodFirstPartyTypeKind","ZodSchema","Schema","ZodNaN","ZodDefault","ZodNullable","ZodTransformer","ZodEffects","ZodPromise","ZodNativeEnum","ZodEnum","ZodLiteral","ZodFunction","ZodSet","ZodMap","ZodRecord","ZodTuple","ZodIntersection","ZodUnion","ZodObject","objectUtil","ZodArray","ZodVoid","ZodNever","ZodAny","ZodNull","ZodUndefined","ZodDate","ZodBoolean","ZodBigInt","ZodString","ZodType","void","union","tuple","transformer","strictObject","record","preprocess","ostring","optional","onumber","oboolean","nullable","never","nativeEnum","literal","lazy","errorUtil_1","parseUtil_1","require$$1","require$$2","require$$3","ParseInputLazyPath","parent","_path","_key","concat","handleResult","result","success","processCreateParams","errorMap","invalid_type_error","required_error","description","iss","def","spa","safeParseAsync","superRefine","_refinement","_def","parse","bind","safeParse","parseAsync","refine","refinement","nullish","or","and","transform","default","describe","isNullable","isOptional","_getType","input","_getOrReturnCtx","parsedType","_processInputParams","_parseSync","_parse","_parseAsync","resolve","_a","async","maybeAsyncResult","check","getIssueProperties","setError","refinementData","schema","typeName","ZodOptional","option","incoming","innerType","defaultValue","This","cuidRegex","uuidRegex","emailRegex","arguments","_regex","regex","test","nonempty","min","trim","checks","kind","URL","lastIndex","_addCheck","email","url","uuid","cuid","minLength","max","maxLength","len","isEmail","ch","isURL","isUUID","isCUID","Infinity","floatSafeRemainder","step","valDecCount","split","stepDecCount","decCount","parseInt","toFixed","pow","ZodNumber","gte","lte","setLimit","gt","lt","int","positive","negative","nonpositive","nonnegative","minValue","maxValue","isInt","getTime","_any","ZodUnknown","_unknown","all","mergeArray","element","mergeShapes","first","second","AugmentFactory","augmentation","shape","deepPartialify","newShape","fieldSchema","unwrap","_cached","nonstrict","passthrough","augment","extend","_getCached","shapeKeys","extraKeys","includes","keyValidator","catchall","unknownKeys","strict","_b","_c","_d","strip","setKey","merge","merging","index","pick","mask","omit","indexOf","deepPartial","partial","required","newField","strictCreate","lazycreate","childCtx","types","ZodDiscriminatedUnion","discriminator","discriminatorValue","get","validDiscriminatorValues","from","forEach","size","mergeValues","a","b","aType","bType","valid","bKeys","sharedKeys","newObj","sharedValue","newArray","handleParsed","parsedLeft","parsedRight","merged","left","right","rest","itemIndex","schemas","keySchema","keyType","valueSchema","valueType","mergeObjectAsync","third","entries","finalMap","minSize","maxSize","finalizeSet","elements","parsedSet","add","values","validate","implement","makeArgsIssue","args","makeReturnsIssue","returns","fn","parsedArgs","parsedReturns","parameters","returnType","func","strictImplement","ZodLazy","getter","expectedValues","enumValues","Values","Enum","nativeEnumValues","promisified","processed","checkCtx","arg","fatal","executeRefinement","acc","inner","base","createWithPreprocess","removeDefault","p","p2","late","cls","stringType","numberType","nanType","bigIntType","booleanType","dateType","undefinedType","nullType","anyType","unknownType","neverType","voidType","arrayType","objectType","strictObjectType","unionType","discriminatedUnionType","discriminatedUnion","intersectionType","tupleType","recordType","mapType","setType","functionType","lazyType","literalType","enumType","nativeEnumType","promiseType","effectsType","optionalType","nullableType","preprocessType","__createBinding","o","k2","enumerable","__exportStar","require$$4","__setModuleDefault","v","__importStar","mod","__esModule","z","Session","Script","parseObject","protocol_js_1","zod_1","parseResult","CommonDataTypes","SharedReferenceSchema","sharedId","RemoteReferenceSchema","handle","UndefinedValueSchema","NullValueSchema","StringValueSchema","SpecialNumberSchema","NumberValueSchema","BooleanValueSchema","BigIntValueSchema","PrimitiveProtocolValueSchema","LocalValueSchema","ArrayLocalValueSchema","DateLocalValueSchema","MapLocalValueSchema","ObjectLocalValueSchema","RegExpLocalValueSchema","SetLocalValueSchema","LocalOrRemoteValueSchema","ListLocalValueSchema","MappingLocalValueSchema","pattern","flags","BrowsingContextSchema","RealmTypeSchema","GetRealmsParametersSchema","context","parseGetRealmsParams","ContextTargetSchema","sandbox","RealmTargetSchema","realm","TargetSchema","OwnershipModelSchema","EvaluateParametersSchema","expression","awaitPromise","target","resultOwnership","parseEvaluateParams","DisownParametersSchema","handles","parseDisownParams","ArgumentValueSchema","ScriptCallFunctionParametersSchema","functionDeclaration","parseCallFunctionParams","GetTreeParametersSchema","maxDepth","root","parseGetTreeParams","ReadinessStateSchema","NavigateParametersSchema","wait","parseNavigateParams","CreateParametersSchema","referenceContext","parseCreateParams","CloseParametersSchema","parseCloseParams","SendCommandParamsSchema","cdpMethod","cdpParams","cdpSession","parseSendCommandParams","GetSessionParamsSchema","parseGetSessionParams","SubscribeParametersEventSchema","ContextCreatedEvent","ContextDestroyedEvent","DomContentLoadedEvent","LoadEvent","LogEntryAddedEvent","EventReceivedEvent","SubscribeParametersSchema","events","contexts","parseSubscribeParams","LogType","mapperTabPage","log","generatePage","log_js_1","findOrCreateTypeLogContainer","logType","containerId","existingContainer","document","getElementById","debugElement","divider","createElement","className","appendChild","htmlItem","innerHTML","globalThis","documentElement","window","system","bidi","browsingContexts","cdp","messages","typeLogContainer","lineElement","textContent","deferred","Deferred","reject","isFinished","onFulfilled","onRejected","reason","finally","onFinally","Symbol","toStringTag","logHelper","getRemoteValuesText","logMessageFormatter","specifiers","isFormmatSpecifier","str","some","spec","output","argFormat","argValues","tokens","RegExp","token","shift","stringFromArg","parseFloat","toJson","hasOwn","String","formatText","logManager","LogManager","logHelper_js_1","getBidiStackTrace","cdpStackTrace","stackFrames","callFrames","callFrame","columnNumber","functionName","lineNumber","cdpClient","cdpSessionId","eventManager","realmStorage","initialize","initializeLogEntryAddedEventListener","on","findRealm","executionContextId","argsPromise","serializeCdpObject","registerPromiseEvent","method","level","consoleApiType","source","realmId","browsingContextId","text","timestamp","round","stackTrace","exceptionDetails","textPromise","exception","stringifyObject","ScriptEvaluator","SHARED_ID_DIVIDER","deserializeToCdpArg","argumentValue","navigableId","rawBackendNodeId","backendNodeId","objectId","sendCommand","unserializableValue","Boolean","keyValueArray","flattenKeyValuePairs","returnByValue","flattenValueList","keyArg","valueArg","list","cdpObject","cdpRemoteObject","cdpRemoteObjectToCallArgument","cdpWebDriverValue","generateWebDriverValue","cdpToBidiValue","_this","_arguments","callFunctionAndSerializeScript","thisAndArgumentsList","cdpCallFunctionResult","serializeCdpExceptionDetails","cdpExceptionDetails","lineOffset","frame","cdpEvaluateResult","contextId","Realm","scriptEvaluator_js_1","scriptEvaluator","browsingContextStorage","origin","realmMap","knownHandlesToRealm","delete","cdpValue","webDriverValue","bidiValue","webDriverValueToBiDi","children","toBiDi","findContext","getKnownContext","awaitUnblocked","callFunction","scriptEvaluate","browsingContextImpl","BrowsingContextImpl","deferred_js_1","logManager_js_1","realm_js_1","targetDefers","documentInitialized","targetUnblocked","Page","navigatedWithinDocument","lifecycleEvent","DOMContentLoaded","load","parentId","cdpBrowserContextId","loaderId","maybeDefaultRealm","logger","defaultRealm","initListeners","addContext","registerEvent","serializeToBidiValue","unblockAttachedTarget","convertFrameToTargetContext","updateConnection","removeChildContexts","deleteRealms","removeContext","child","enabled","autoAttach","waitForDebuggerOnStart","addChild","addParentFiled","c","targetInfo","targetId","urlFragment","frameId","documentChanged","navigation","auxData","uniqueId","getOrigin","isDefault","cdpNavigateResult","errorText","maybeSandboxes","findRealms","worldName","browsingContextProcessor","BrowsingContextProcessor","browsingContextImpl_js_1","cdpConnection","selfTargetId","sessions","setBrowserClientEventListeners","browserClient","setTargetEventListeners","handleAttachedToTargetEvent","handleDetachedFromTargetEvent","setSessionEventListeners","sessionId","has","sessionCdpClient","getCdpClient","createFrameContext","parentFrameId","parentSessionCdpClient","targetSessionCdpClient","isValidTarget","hasKnownContext","createTargetContext","browserContextId","getTopLevelContexts","MAX_VALUE","browserCdpClient","newWindow","awaitLoaded","navigate","getRealm","getOrCreateSandbox","process_script_getRealms","realms","h","disown","commandParams","detachedFromTargetPromise","onContextDestroyed","eventParams","off","client","__importDefault","EventEmitter_1","EventEmitter","mitt_1","n","t","splice","emit","EventEmitter$1","emitter","handler","once","event","onceHandler","eventData","OutgoingBidiMessage_1","OutgoingBidiMessage","channel","messagePromise","OutgoingBidiMessage$1","CommandProcessor_1","CommandProcessor","browsingContextProcessor_js_1","EventEmitter_js_1","OutgoingBidiMessage_js_1","BidiNoOpParser","contextProcessor","parser","ready","subscribe","unsubscribe","commandData","process_session_status","process_session_subscribe","process_session_unsubscribe","process_browsingContext_create","process_browsingContext_close","process_browsingContext_getTree","process_browsingContext_navigate","process_script_callFunction","process_script_evaluate","process_script_disown","process_cdp_sendCommand","process_cdp_getSession","processCommand","command","response","createResolved","errorResponse","console","CommandProcessor$1","BrowsingContextStorage","buffer","Buffer","capacity","onItemRemoved","idWrapper","IdWrapper","counter","SubscriptionManager_1","SubscriptionManager","SubscriptionManager$1","subscriptionPriority","channelToContextToEventMap","getChannelsSubscribedToEvent","eventMethod","priority","getEventSubscriptionPriorityForChannel","sort","contextToEventMap","maybeTopLevelContextId","findTopLevelContextId","priorities","specificEvent","eventMap","EventManager_1","EventManager","buffer_js_1","idWrapper_js_1","SubscriptionManager_js_1","EventWrapper","eventBufferLength","EventManager$1","eventToContextsMap","eventBuffers","lastMessageSent","subscriptionManager","bidiServer","getBrowsingContextStorage","getMapKey","eventName","browsingContext","eventWrapper","sortedChannels","bufferEvent","emitOutgoingMessage","createFromPromise","markEventSent","eventNames","contextIds","getBufferedEvents","bufferMapKey","lastSentMapKey","lastSentMessageId","wrapper","_contextId","e1","e2","processingQueue","ProcessingQueue","processor","queue","isProcessing","_catch","entry","processIfNeeded","entryPromise","RealmStorage","maybeRealms","maybeRealm","r","BidiServer_1","BidiServer","CommandProcessor_js_1","browsingContextStorage_js_1","EventManager_js_1","processingQueue_js_1","realmStorage_js_1","require$$5","messageQueue","transport","commandProcessor","bidiTransport","processOutgoingMessage","setOnMessage","handleIncomingMessage","server","discover","topLevelContextsLoaded","messageEntry","sendMessage","close","BidiServer$1","createClient","CdpClient","param","CdpConnection","cdpClient_js_1","sessionCdpClients","commandCallbacks","nextId","onMessage","clear","messageObj","messageStr","messagePretty","parsed","callbacks","websocketTransport","WebSocketTransport","ws","send","cdpConnection_js_1","websocketTransport_js_1","desc","getOwnPropertyDescriptor","writable","configurable","bidiTab","Parser","mapperTabPage_js_1","BidiServer_js_1","index_js_1","waitSelfTargetIdPromise","setSelfTargetId","waitSelfTargetId","WindowBidiTransport","onBidiMessage","parseBidiMessage","respondWithError","sendBidiResponse","plainCommandData","errorCode","getErrorResponse","messageId","getJsonType","idType","methodType","paramsType","channelType","createAndStart","WindowCdpTransport","onmessage","createCdpConnection","BidiParserImpl","createBidiServer","launched"],"mappings":"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"}