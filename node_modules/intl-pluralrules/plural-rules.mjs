function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

import * as P from 'make-plural/plurals.js';
import * as C from 'make-plural/pluralCategories.js';
import getPluralRules from './factory';
import PseudoNumberFormat from './pseudo-number-format'; // In a .mjs context, CommonJS imports only expose the default endpoint. We're
// using them here because with this many small functions, Webpack produces less
// cruft than for ES module exports.

var Plurals = P.default || P;
var Categories = C.default || C;
/* istanbul ignore next */

var NumberFormat = (typeof Intl === "undefined" ? "undefined" : _typeof(Intl)) === 'object' && Intl.NumberFormat || PseudoNumberFormat; // make-plural exports are cast with safe-identifier to be valid JS identifiers

var id = function id(lc) {
  return lc === 'in' ? '_in' : lc === 'pt-PT' ? 'pt_PT' : lc;
};

var getSelector = function getSelector(lc) {
  return Plurals[id(lc)];
};

var getCategories = function getCategories(lc, ord) {
  return Categories[id(lc)][ord ? 'ordinal' : 'cardinal'];
};

var PluralRules = getPluralRules(NumberFormat, getSelector, getCategories);
export default PluralRules;