{"version":3,"file":"LegacyTracingModel.js","sourceRoot":"","sources":["../../../../../../front_end/models/trace/LegacyTracingModel.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2014 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n//\n// This is what was SDK.TracingModel moved into models/trace to avoid circular\n// dependency issues. Our ultimate goal is to remove this model entirely once\n// the migration to the new model is done\n\nimport * as Helpers from './helpers/helpers.js';\nimport {type EventPayload} from './TracingManager.js';\nimport * as Types from './types/types.js';\n\ntype IgnoreListArgs = {\n  [key: string]: string|number|ObjectSnapshot,\n};\n\nexport class TracingModel {\n  readonly #title: string|undefined;\n  readonly #processById: Map<string|number, Process>;\n  readonly #processByName: Map<string, Process>;\n  #minimumRecordTimeInternal: number;\n  #maximumRecordTimeInternal: number;\n  readonly #devToolsMetadataEventsInternal: Event[];\n  #asyncEvents: AsyncEvent[];\n  readonly #openAsyncEvents: Map<string, AsyncEvent>;\n  readonly #openNestableAsyncEvents: Map<string, AsyncEvent[]>;\n  readonly #profileGroups: Map<string, ProfileEventsGroup>;\n  readonly #parsedCategories: Map<string, Set<string>>;\n  readonly #allEventsPayload: EventPayload[] = [];\n\n  constructor(title?: string) {\n    this.#title = title;\n    this.#processById = new Map();\n    this.#processByName = new Map();\n    this.#minimumRecordTimeInternal = Number(Infinity);\n    this.#maximumRecordTimeInternal = Number(-Infinity);\n    this.#devToolsMetadataEventsInternal = [];\n    this.#asyncEvents = [];\n    this.#openAsyncEvents = new Map();\n    this.#openNestableAsyncEvents = new Map();\n    this.#profileGroups = new Map();\n    this.#parsedCategories = new Map();\n  }\n\n  static isTopLevelEvent(event: CompatibleTraceEvent): boolean {\n    return eventHasCategory(event, DevToolsTimelineEventCategory) && event.name === 'RunTask' ||\n        eventHasCategory(event, LegacyTopLevelEventCategory) ||\n        eventHasCategory(event, DevToolsMetadataEventCategory) &&\n        event.name === 'Program';  // Older timelines may have this instead of toplevel.\n  }\n\n  static extractId(payload: EventPayload): string|undefined {\n    const scope = payload.scope || '';\n    if (typeof payload.id2 === 'undefined') {\n      return scope && payload.id ? `${scope}@${payload.id}` : payload.id;\n    }\n    const id2 = payload.id2;\n    if (typeof id2 === 'object' && ('global' in id2) !== ('local' in id2)) {\n      return typeof id2['global'] !== 'undefined' ? `:${scope}:${id2['global']}` :\n                                                    `:${scope}:${payload.pid}:${id2['local']}`;\n    }\n    console.error(\n        `Unexpected id2 field at ${payload.ts / 1000}, one and only one of 'local' and 'global' should be present.`);\n    return undefined;\n  }\n\n  static browserMainThread(tracingModel: TracingModel): Thread|null {\n    const processes = tracingModel.sortedProcesses();\n    // Avoid warning for an empty #model.\n    if (!processes.length) {\n      return null;\n    }\n    const browserMainThreadName = 'CrBrowserMain';\n    const browserProcesses = [];\n    const browserMainThreads = [];\n    for (const process of processes) {\n      if (process.name().toLowerCase().endsWith('browser')) {\n        browserProcesses.push(process);\n      }\n      browserMainThreads.push(...process.sortedThreads().filter(t => t.name() === browserMainThreadName));\n    }\n    if (browserMainThreads.length === 1) {\n      return browserMainThreads[0];\n    }\n    if (browserProcesses.length === 1) {\n      return browserProcesses[0].threadByName(browserMainThreadName);\n    }\n    const tracingStartedInBrowser =\n        tracingModel.devToolsMetadataEvents().filter(e => e.name === 'TracingStartedInBrowser');\n    if (tracingStartedInBrowser.length === 1) {\n      return tracingStartedInBrowser[0].thread;\n    }\n    console.error(\n        'Failed to find browser main thread in trace, some timeline features may be unavailable');\n    return null;\n  }\n\n  allRawEvents(): readonly EventPayload[] {\n    return this.#allEventsPayload;\n  }\n\n  devToolsMetadataEvents(): Event[] {\n    return this.#devToolsMetadataEventsInternal;\n  }\n\n  addEvents(events: readonly EventPayload[]): void {\n    for (let i = 0; i < events.length; ++i) {\n      this.addEvent(events[i]);\n    }\n  }\n\n  tracingComplete(): void {\n    this.processPendingAsyncEvents();\n    for (const process of this.#processById.values()) {\n      for (const thread of process.threads.values()) {\n        thread.tracingComplete();\n      }\n    }\n  }\n\n  private addEvent(payload: EventPayload): void {\n    this.#allEventsPayload.push(payload);\n    let process = this.#processById.get(payload.pid);\n    if (!process) {\n      process = new Process(this, payload.pid);\n      this.#processById.set(payload.pid, process);\n    }\n\n    const timestamp = payload.ts / 1000;\n    // We do allow records for unrelated threads to arrive out-of-order,\n    // so there's a chance we're getting records from the past.\n    if (timestamp && timestamp < this.#minimumRecordTimeInternal &&\n        eventPhasesOfInterestForTraceBounds.has(payload.ph as Types.TraceEvents.Phase) &&\n        // UMA related events are ignored when calculating the minimumRecordTime because they might\n        // be related to previous navigations that happened before the current trace started and\n        // will currently not be displayed anyways.\n        // See crbug.com/1201198\n        (!payload.name.endsWith('::UMA'))) {\n      this.#minimumRecordTimeInternal = timestamp;\n    }\n\n    if (payload.name === 'TracingStartedInBrowser') {\n      // If we received a timestamp for tracing start, use that for minimumRecordTime.\n      this.#minimumRecordTimeInternal = timestamp;\n    }\n\n    if (eventPhasesOfInterestForTraceBounds.has(payload.ph as Types.TraceEvents.Phase)) {\n      const endTimeStamp = (payload.ts + (payload.dur || 0)) / 1000;\n      this.#maximumRecordTimeInternal = Math.max(this.#maximumRecordTimeInternal, endTimeStamp);\n    }\n    const event = process.addEvent(payload);\n    if (!event) {\n      return;\n    }\n    if (payload.ph === Types.TraceEvents.Phase.SAMPLE) {\n      this.addSampleEvent(event);\n      return;\n    }\n    // Build async event when we've got events from all threads & processes, so we can sort them and process in the\n    // chronological order. However, also add individual async events to the thread flow (above), so we can easily\n    // display them on the same chart as other events, should we choose so.\n    if (Types.TraceEvents.isAsyncPhase(payload.ph)) {\n      this.#asyncEvents.push((event as AsyncEvent));\n    }\n    if (event.hasCategory(DevToolsMetadataEventCategory)) {\n      this.#devToolsMetadataEventsInternal.push(event);\n    }\n\n    if (payload.ph !== Types.TraceEvents.Phase.METADATA) {\n      return;\n    }\n\n    switch (payload.name) {\n      case MetadataEvent.ProcessSortIndex: {\n        process.setSortIndex(payload.args['sort_index']);\n        break;\n      }\n      case MetadataEvent.ProcessName: {\n        const processName = payload.args['name'];\n        process.setName(processName);\n        this.#processByName.set(processName, process);\n        break;\n      }\n      case MetadataEvent.ThreadSortIndex: {\n        process.threadById(payload.tid).setSortIndex(payload.args['sort_index']);\n        break;\n      }\n      case MetadataEvent.ThreadName: {\n        process.threadById(payload.tid).setName(payload.args['name']);\n        break;\n      }\n    }\n  }\n\n  private addSampleEvent(event: Event): void {\n    const id = `${event.thread.process().id()}:${event.id}`;\n    const group = this.#profileGroups.get(id);\n    if (group) {\n      group.addChild(event);\n    } else {\n      this.#profileGroups.set(id, new ProfileEventsGroup(event));\n    }\n  }\n\n  profileGroup(event: Event): ProfileEventsGroup|null {\n    return this.#profileGroups.get(`${event.thread.process().id()}:${event.id}`) || null;\n  }\n\n  minimumRecordTime(): number {\n    return this.#minimumRecordTimeInternal;\n  }\n\n  maximumRecordTime(): number {\n    return this.#maximumRecordTimeInternal;\n  }\n\n  sortedProcesses(): Process[] {\n    return NamedObject.sort([...this.#processById.values()]);\n  }\n\n  getProcessByName(name: string): Process|null {\n    return this.#processByName.get(name) ?? null;\n  }\n\n  getProcessById(pid: number): Process|null {\n    return this.#processById.get(pid) || null;\n  }\n\n  getThreadByName(processName: string, threadName: string): Thread|null {\n    const process = this.getProcessByName(processName);\n    return process && process.threadByName(threadName);\n  }\n\n  private processPendingAsyncEvents(): void {\n    this.#asyncEvents.sort(Event.compareStartTime);\n    for (let i = 0; i < this.#asyncEvents.length; ++i) {\n      const event = this.#asyncEvents[i];\n      if (Types.TraceEvents.isNestableAsyncPhase(event.phase)) {\n        this.addNestableAsyncEvent(event);\n      } else {\n        this.addAsyncEvent(event);\n      }\n    }\n    this.#asyncEvents = [];\n    this.closeOpenAsyncEvents();\n  }\n\n  private closeOpenAsyncEvents(): void {\n    for (const event of this.#openAsyncEvents.values()) {\n      event.setEndTime(this.#maximumRecordTimeInternal);\n      // FIXME: remove this once we figure a better way to convert async console\n      // events to sync [waterfall] timeline records.\n      event.steps[0].setEndTime(this.#maximumRecordTimeInternal);\n    }\n    this.#openAsyncEvents.clear();\n\n    for (const eventStack of this.#openNestableAsyncEvents.values()) {\n      while (eventStack.length) {\n        const event = eventStack.pop();\n        if (!event) {\n          continue;\n        }\n        event.setEndTime(this.#maximumRecordTimeInternal);\n      }\n    }\n    this.#openNestableAsyncEvents.clear();\n  }\n\n  private addNestableAsyncEvent(event: Event): void {\n    const key = event.categoriesString + '.' + event.id;\n    let openEventsStack = this.#openNestableAsyncEvents.get(key);\n\n    switch (event.phase) {\n      case Types.TraceEvents.Phase.ASYNC_NESTABLE_START: {\n        if (!openEventsStack) {\n          openEventsStack = [];\n          this.#openNestableAsyncEvents.set(key, openEventsStack);\n        }\n        const asyncEvent = new AsyncEvent(event);\n        openEventsStack.push(asyncEvent);\n        event.thread.addAsyncEvent(asyncEvent);\n        break;\n      }\n\n      case Types.TraceEvents.Phase.ASYNC_NESTABLE_INSTANT: {\n        if (openEventsStack && openEventsStack.length) {\n          const event = openEventsStack[openEventsStack.length - 1];\n          if (event) {\n            event.addStep(event);\n          }\n        }\n        break;\n      }\n\n      case Types.TraceEvents.Phase.ASYNC_NESTABLE_END: {\n        if (!openEventsStack || !openEventsStack.length) {\n          break;\n        }\n        const top = openEventsStack.pop();\n        if (!top) {\n          break;\n        }\n        if (top.name !== event.name) {\n          console.error(\n              `Begin/end event mismatch for nestable async event, ${top.name} vs. ${event.name}, key: ${key}`);\n          break;\n        }\n        top.addStep(event);\n      }\n    }\n  }\n\n  private addAsyncEvent(event: Event): void {\n    const key = event.categoriesString + '.' + event.name + '.' + event.id;\n    let asyncEvent = this.#openAsyncEvents.get(key);\n\n    if (event.phase === Types.TraceEvents.Phase.ASYNC_BEGIN) {\n      if (asyncEvent) {\n        console.error(`Event ${event.name} has already been started`);\n        return;\n      }\n      asyncEvent = new AsyncEvent(event);\n      this.#openAsyncEvents.set(key, asyncEvent);\n      event.thread.addAsyncEvent(asyncEvent);\n      return;\n    }\n    if (!asyncEvent) {\n      // Quietly ignore stray async events, we're probably too late for the start.\n      return;\n    }\n    if (event.phase === Types.TraceEvents.Phase.ASYNC_END) {\n      asyncEvent.addStep(event);\n      this.#openAsyncEvents.delete(key);\n      return;\n    }\n    if (event.phase === Types.TraceEvents.Phase.ASYNC_STEP_INTO ||\n        event.phase === Types.TraceEvents.Phase.ASYNC_STEP_PAST) {\n      const lastStep = asyncEvent.steps[asyncEvent.steps.length - 1];\n      if (lastStep && lastStep.phase !== Types.TraceEvents.Phase.ASYNC_BEGIN && lastStep.phase !== event.phase) {\n        console.assert(\n            false,\n            'Async event step phase mismatch: ' + lastStep.phase + ' at ' + lastStep.startTime + ' vs. ' + event.phase +\n                ' at ' + event.startTime);\n        return;\n      }\n      asyncEvent.addStep(event);\n      return;\n    }\n    console.assert(false, 'Invalid async event phase');\n  }\n\n  title(): string|undefined {\n    return this.#title;\n  }\n\n  parsedCategoriesForString(str: string): Set<string> {\n    let parsedCategories = this.#parsedCategories.get(str);\n    if (!parsedCategories) {\n      parsedCategories = new Set(str ? str.split(',') : []);\n      this.#parsedCategories.set(str, parsedCategories);\n    }\n    return parsedCategories;\n  }\n}\n\nexport const eventPhasesOfInterestForTraceBounds: Set<Types.TraceEvents.Phase> = new Set([\n  Types.TraceEvents.Phase.BEGIN,\n  Types.TraceEvents.Phase.END,\n  Types.TraceEvents.Phase.COMPLETE,\n  Types.TraceEvents.Phase.INSTANT,\n]);\n\nexport const MetadataEvent = {\n  ProcessSortIndex: 'process_sort_index',\n  ProcessName: 'process_name',\n  ThreadSortIndex: 'thread_sort_index',\n  ThreadName: 'thread_name',\n};\n\n// TODO(alph): LegacyTopLevelEventCategory is not recorded since M74 and used for loading\n// legacy profiles. Drop at some point.\nexport const LegacyTopLevelEventCategory = 'toplevel';\n\nexport const DevToolsMetadataEventCategory = 'disabled-by-default-devtools.timeline';\nexport const DevToolsTimelineEventCategory = 'disabled-by-default-devtools.timeline';\n\nexport function eventHasPayload(event: Event): event is PayloadEvent {\n  return 'rawPayload' in event;\n}\n\nexport class Event {\n  categoriesString: string;\n  readonly #parsedCategories: Set<string>;\n  name: string;\n  phase: Types.TraceEvents.Phase;\n  startTime: number;\n  thread: Thread;\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  args: any;\n  id!: string|null;\n  ordinal: number;\n  selfTime: number;\n  endTime?: number;\n  duration?: number;\n\n  // The constructor is protected so that we ensure that only classes or\n  // subclasses can directly instantiate events. All other callers should\n  // either create ConstructedEvent instances, which have a public constructor,\n  // or use the static fromPayload method which can create an event instance\n  // from the trace payload.\n  protected constructor(\n      categories: string|undefined, name: string, phase: Types.TraceEvents.Phase, startTime: number, thread: Thread) {\n    this.categoriesString = categories || '';\n    this.#parsedCategories = thread.getModel().parsedCategoriesForString(this.categoriesString);\n    this.name = name;\n    this.phase = phase;\n    this.startTime = startTime;\n    this.thread = thread;\n    this.args = {};\n    this.ordinal = 0;\n\n    this.selfTime = 0;\n  }\n\n  static compareStartTime(a: Event|null, b: Event|null): number {\n    if (!a || !b) {\n      return 0;\n    }\n\n    return a.startTime - b.startTime;\n  }\n\n  static orderedCompareStartTime(a: Event, b: Event): number {\n    // Array.mergeOrdered coalesces objects if comparator returns 0.\n    // To change this behavior this comparator return -1 in the case events\n    // startTime's are equal, so both events got placed into the result array.\n    return a.startTime - b.startTime || a.ordinal - b.ordinal || -1;\n  }\n\n  hasCategory(categoryName: string): boolean {\n    return this.#parsedCategories.has(categoryName);\n  }\n\n  setEndTime(endTime: number): void {\n    if (endTime < this.startTime) {\n      console.assert(false, 'Event out of order: ' + this.name);\n      return;\n    }\n    this.endTime = endTime;\n    this.duration = endTime - this.startTime;\n  }\n\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  addArgs(args: any): void {\n    // Shallow copy args to avoid modifying original #payload which may be saved to file.\n    for (const name in args) {\n      if (name in this.args) {\n        console.error('Same argument name (' + name + ') is used for begin and end phases of ' + this.name);\n      }\n\n      (this.args as IgnoreListArgs)[name] = (args as IgnoreListArgs)[name];\n    }\n  }\n\n  complete(endEvent: Event): void {\n    if (endEvent.args) {\n      this.addArgs(endEvent.args);\n    } else {\n      console.error('Missing mandatory event argument \\'args\\' at ' + endEvent.startTime);\n    }\n    this.setEndTime(endEvent.startTime);\n  }\n}\n\n/**\n * Represents a tracing event that is not directly linked to an individual\n * object in the trace. We construct these events at times, particularly when\n * building up the CPU profile data for JS Profiling.\n **/\nexport class ConstructedEvent extends Event {\n  // Because the constructor of Event is marked as protected, but we want\n  // people to be able to create constructed events, we override the\n  // constructor here, even though we are only calling super, in order to mark\n  // it as public.\n  constructor(\n      categories: string|undefined, name: string, phase: Types.TraceEvents.Phase, startTime: number, thread: Thread) {\n    super(categories, name, phase, startTime, thread);\n  }\n}\n\n/**\n * Represents a tracing event that has been created directly from an object in\n * the trace file and therefore is guaranteed to have a payload associated with\n * it. The only way to create these events is to use the static fromPayload\n * method, which you must call with a payload.\n **/\nexport class PayloadEvent extends Event {\n  #rawPayload: EventPayload;\n\n  /**\n   * Returns the raw payload that was used to create this event instance.\n   **/\n  rawLegacyPayload(): EventPayload {\n    return this.#rawPayload;\n  }\n\n  /**\n   * Returns the raw payload that was used to create this event instance, but\n   * returns it typed as the new engine's TraceEventArgs option.\n   **/\n  rawPayload(): Types.TraceEvents.TraceEventData {\n    return this.#rawPayload as unknown as Types.TraceEvents.TraceEventData;\n  }\n\n  protected constructor(\n      categories: string|undefined, name: string, phase: Types.TraceEvents.Phase, startTime: number, thread: Thread,\n      rawPayload: EventPayload) {\n    super(categories, name, phase, startTime, thread);\n    this.#rawPayload = rawPayload;\n  }\n\n  static fromPayload(payload: EventPayload, thread: Thread): PayloadEvent {\n    const event = new PayloadEvent(payload.cat, payload.name, payload.ph, payload.ts / 1000, thread, payload);\n    event.#rawPayload = payload;\n    if (payload.args) {\n      event.addArgs(payload.args);\n    }\n    if (typeof payload.dur === 'number') {\n      event.setEndTime((payload.ts + payload.dur) / 1000);\n    }\n    const id = TracingModel.extractId(payload);\n    if (typeof id !== 'undefined') {\n      event.id = id;\n    }\n\n    return event;\n  }\n}\n\nexport class ObjectSnapshot extends PayloadEvent {\n  private constructor(\n      category: string|undefined, name: string, startTime: number, thread: Thread, rawPayload: EventPayload) {\n    super(category, name, Types.TraceEvents.Phase.OBJECT_SNAPSHOT, startTime, thread, rawPayload);\n  }\n\n  static override fromPayload(payload: EventPayload, thread: Thread): ObjectSnapshot {\n    const snapshot = new ObjectSnapshot(payload.cat, payload.name, payload.ts / 1000, thread, payload);\n    const id = TracingModel.extractId(payload);\n    if (typeof id !== 'undefined') {\n      snapshot.id = id;\n    }\n    if (!payload.args || !payload.args['snapshot']) {\n      console.error('Missing mandatory \\'snapshot\\' argument at ' + payload.ts / 1000);\n      return snapshot;\n    }\n    if (payload.args) {\n      snapshot.addArgs(payload.args);\n    }\n    return snapshot;\n  }\n\n  getSnapshot(): ObjectSnapshot {\n    const snapshot = this.args['snapshot'];\n    if (!snapshot) {\n      throw new Error('ObjectSnapshot has no snapshot argument.');\n    }\n    return snapshot;\n  }\n}\n\nexport class AsyncEvent extends ConstructedEvent {\n  steps: Event[];\n  causedFrame: boolean;\n\n  constructor(startEvent: Event) {\n    super(startEvent.categoriesString, startEvent.name, startEvent.phase, startEvent.startTime, startEvent.thread);\n    this.addArgs(startEvent.args);\n    this.steps = [startEvent];\n    this.causedFrame = false;\n  }\n\n  addStep(event: Event): void {\n    this.steps.push(event);\n    if (event.phase === Types.TraceEvents.Phase.ASYNC_END ||\n        event.phase === Types.TraceEvents.Phase.ASYNC_NESTABLE_END) {\n      this.setEndTime(event.startTime);\n      // FIXME: ideally, we shouldn't do this, but this makes the logic of converting\n      // async console events to sync ones much simpler.\n      this.steps[0].setEndTime(event.startTime);\n    }\n  }\n}\n\nclass ProfileEventsGroup {\n  children: Event[];\n  constructor(event: Event) {\n    this.children = [event];\n  }\n\n  addChild(event: Event): void {\n    this.children.push(event);\n  }\n}\n\nclass NamedObject {\n  model: TracingModel;\n  readonly idInternal: number;\n  #nameInternal: string;\n  #sortIndex: number;\n  constructor(model: TracingModel, id: number) {\n    this.model = model;\n    this.idInternal = id;\n    this.#nameInternal = '';\n    this.#sortIndex = 0;\n  }\n\n  static sort<Item extends NamedObject>(array: Item[]): Item[] {\n    return array.sort((a, b) => {\n      return a.#sortIndex !== b.#sortIndex ? a.#sortIndex - b.#sortIndex : a.name().localeCompare(b.name());\n    });\n  }\n\n  setName(name: string): void {\n    this.#nameInternal = name;\n  }\n\n  name(): string {\n    return this.#nameInternal;\n  }\n\n  id(): number {\n    return this.idInternal;\n  }\n\n  setSortIndex(sortIndex: number): void {\n    this.#sortIndex = sortIndex;\n  }\n\n  getModel(): TracingModel {\n    return this.model;\n  }\n}\n\nexport class Process extends NamedObject {\n  readonly threads: Map<number, Thread>;\n  readonly #threadByNameInternal: Map<string, Thread|null>;\n  constructor(model: TracingModel, id: number) {\n    super(model, id);\n    this.threads = new Map();\n    this.#threadByNameInternal = new Map();\n  }\n\n  threadById(id: number): Thread {\n    let thread = this.threads.get(id);\n    if (!thread) {\n      thread = new Thread(this, id);\n      this.threads.set(id, thread);\n    }\n    return thread;\n  }\n\n  threadByName(name: string): Thread|null {\n    return this.#threadByNameInternal.get(name) || null;\n  }\n\n  setThreadByName(name: string, thread: Thread): void {\n    this.#threadByNameInternal.set(name, thread);\n  }\n\n  addEvent(payload: EventPayload): Event|null {\n    return this.threadById(payload.tid).addEvent(payload);\n  }\n\n  sortedThreads(): Thread[] {\n    return NamedObject.sort([...this.threads.values()]);\n  }\n}\n\nexport class Thread extends NamedObject {\n  readonly #processInternal: Process;\n  #eventsInternal: Event[];\n  readonly #asyncEventsInternal: AsyncEvent[];\n  #lastTopLevelEvent: Event|null;\n  constructor(process: Process, id: number) {\n    super(process.getModel(), id);\n    this.#processInternal = process;\n\n    this.#eventsInternal = [];\n    this.#asyncEventsInternal = [];\n    this.#lastTopLevelEvent = null;\n  }\n\n  /**\n   * Whilst we are in the middle of migrating to the new Phase enum, we need to\n   * be able to compare events with the legacy phase to the new enum. This method\n   * does this by casting the event phase to a string, ensuring we can compare it\n   * against either enum. Once the migration is complete (crbug.com/1417587), we\n   * will be able to use === to compare with no TS errors and this method can be\n   * removed.\n   */\n  #eventMatchesPhase(event: Event, phase: Types.TraceEvents.Phase): boolean {\n    return (event.phase as string) === phase;\n  }\n\n  tracingComplete(): void {\n    this.#asyncEventsInternal.sort(Event.compareStartTime);\n    this.#eventsInternal.sort(Event.compareStartTime);\n    const stack: Event[] = [];\n    const toDelete = new Set<number>();\n    for (let i = 0; i < this.#eventsInternal.length; ++i) {\n      const e = this.#eventsInternal[i];\n      e.ordinal = i;\n      if (this.#eventMatchesPhase(e, Types.TraceEvents.Phase.END)) {\n        toDelete.add(i);  // Mark for removal.\n        // Quietly ignore unbalanced close events, they're legit (we could have missed start one).\n        if (!stack.length) {\n          continue;\n        }\n        const top = stack.pop();\n        if (!top) {\n          continue;\n        }\n        if (top.name !== e.name || top.categoriesString !== e.categoriesString) {\n          console.error(\n              'B/E events mismatch at ' + top.startTime + ' (' + top.name + ') vs. ' + e.startTime + ' (' + e.name +\n              ')');\n        } else {\n          top.complete(e);\n        }\n      } else if (this.#eventMatchesPhase(e, Types.TraceEvents.Phase.BEGIN)) {\n        stack.push(e);\n      }\n    }\n\n    // Handle Begin events with no matching End.\n    // This commonly happens due to a bug in the trace machinery. See crbug.com/982252\n    while (stack.length) {\n      const event = stack.pop();\n      if (event) {\n        // Masquerade the event as Instant, so it's rendered to the user.\n        // The ideal fix is resolving crbug.com/1021571, but handling that without a perfetto migration appears prohibitive\n        event.phase = Types.TraceEvents.Phase.INSTANT;\n      }\n    }\n    this.#eventsInternal = this.#eventsInternal.filter((_, idx) => !toDelete.has(idx));\n  }\n\n  addEvent(payload: EventPayload): Event|null {\n    const event = payload.ph === Types.TraceEvents.Phase.OBJECT_SNAPSHOT ? ObjectSnapshot.fromPayload(payload, this) :\n                                                                           PayloadEvent.fromPayload(payload, this);\n    if (TracingModel.isTopLevelEvent(event)) {\n      // Discard nested \"top-level\" events.\n      const lastTopLevelEvent = this.#lastTopLevelEvent;\n      if (lastTopLevelEvent && (lastTopLevelEvent.endTime || 0) > event.startTime) {\n        return null;\n      }\n      this.#lastTopLevelEvent = event;\n    }\n    this.#eventsInternal.push(event);\n    return event;\n  }\n\n  addAsyncEvent(asyncEvent: AsyncEvent): void {\n    this.#asyncEventsInternal.push(asyncEvent);\n  }\n\n  override setName(name: string): void {\n    super.setName(name);\n    this.#processInternal.setThreadByName(name, this);\n  }\n\n  process(): Process {\n    return this.#processInternal;\n  }\n\n  events(): Event[] {\n    return this.#eventsInternal;\n  }\n\n  asyncEvents(): AsyncEvent[] {\n    return this.#asyncEventsInternal;\n  }\n\n  removeEventsByName(name: string): Event[] {\n    const extracted: Event[] = [];\n    this.#eventsInternal = this.#eventsInternal.filter(e => {\n      if (!e) {\n        return false;\n      }\n\n      if (e.name !== name) {\n        return true;\n      }\n\n      extracted.push(e);\n      return false;\n    });\n\n    return extracted;\n  }\n}\n\nexport interface TimesForEventMs {\n  startTime: Types.Timing.MilliSeconds;\n  endTime?: Types.Timing.MilliSeconds;\n  selfTime: Types.Timing.MilliSeconds;\n  duration: Types.Timing.MilliSeconds;\n}\n\nexport function timesForEventInMilliseconds(event: Event|Types.TraceEvents.TraceEventData): TimesForEventMs {\n  if (event instanceof Event) {\n    return {\n      startTime: Types.Timing.MilliSeconds(event.startTime),\n      endTime: event.endTime ? Types.Timing.MilliSeconds(event.endTime) : undefined,\n      duration: Types.Timing.MilliSeconds(event.duration || 0),\n      selfTime: Types.Timing.MilliSeconds(event.selfTime),\n    };\n  }\n  return Helpers.Timing.eventTimingsMilliSeconds(event);\n}\n// Parsed categories are cached to prevent calling cat.split() multiple\n// times on the same categories string.\nconst parsedCategories = new Map<string, Set<string>>();\nexport function eventHasCategory(event: CompatibleTraceEvent, category: string): boolean {\n  if (event instanceof Event) {\n    return event.hasCategory(category);\n  }\n  let parsedCategoriesForEvent = parsedCategories.get(event.cat);\n  if (!parsedCategoriesForEvent) {\n    parsedCategoriesForEvent = new Set(event.cat.split(',') || []);\n  }\n  return parsedCategoriesForEvent.has(category);\n}\n\nexport function phaseForEvent(event: Event|Types.TraceEvents.TraceEventData): Types.TraceEvents.Phase {\n  if (event instanceof Event) {\n    return event.phase;\n  }\n  return event.ph;\n}\n\nexport function threadIDForEvent(event: Event|Types.TraceEvents.TraceEventData): Types.TraceEvents.ThreadID {\n  if (event instanceof Event) {\n    return event.thread.idInternal as Types.TraceEvents.ThreadID;\n  }\n  return event.tid;\n}\n\nexport function eventIsFromNewEngine(event: CompatibleTraceEvent|null): event is Types.TraceEvents.TraceEventData {\n  return event !== null && !(event instanceof Event);\n}\n\nexport type CompatibleTraceEvent = Event|Types.TraceEvents.TraceEventData;\n"]}