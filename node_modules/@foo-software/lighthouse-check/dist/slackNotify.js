"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _webhook = require("@slack/webhook");

var _getLighthouseScoreColor = _interopRequireDefault(require("./helpers/getLighthouseScoreColor"));

var _lighthouseAuditTitles = _interopRequireDefault(require("./lighthouseAuditTitles"));

var _constants = require("./constants");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = async ({
  author,
  branch,
  pr: prParam,
  results,
  sha,
  slackWebhookUrl,
  verbose
}) => {
  try {
    const webhook = new _webhook.IncomingWebhook(slackWebhookUrl); // sometimes we get weird input

    const pr = typeof prParam !== 'string' || prParam === 'true' ? undefined : prParam;

    for (const result of results) {
      // link the report if we have it
      let text = !result.report ? 'Lighthouse audit' : `<${result.report}|Lighthouse audit>`; // if we have a branch

      if (branch) {
        const branchText = !pr ? branch : `<${pr}|${branch}>`;
        text = `${text} change made in \`${branchText}\`.`;
      }

      let footer;

      if (author) {
        footer = `by ${author}`;

        if (sha) {
          footer = `${footer} in ${sha.slice(0, 10)}`;
        }
      }

      await webhook.send({
        text: result.url,
        attachments: [{
          color: '#2091fa',
          text,
          thumb_url: 'https://s3.amazonaws.com/foo.software/images/logos/lighthouse.png',
          ...(!footer ? {} : {
            footer
          })
        }, ...Object.keys(result.scores).map(current => ({
          color: (0, _getLighthouseScoreColor.default)({
            isHex: true,
            score: result.scores[current]
          }),
          text: `*${_lighthouseAuditTitles.default[current]}*: ${result.scores[current]}`,
          short: true
        }))]
      });
    }
  } catch (error) {
    if (verbose) {
      console.log(`${_constants.NAME}:`, error);
    } // we still need to kill the process


    throw error;
  }
};

exports.default = _default;