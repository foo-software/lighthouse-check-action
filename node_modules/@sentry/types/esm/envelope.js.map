{"version":3,"file":"envelope.js","sourceRoot":"","sources":["../src/envelope.ts"],"names":[],"mappings":"","sourcesContent":["import { Event } from './event';\nimport { SentryRequestType } from './request';\nimport { SdkInfo } from './sdkinfo';\nimport { Session, SessionAggregates } from './session';\nimport { Outcome } from './transport';\nimport { User } from './user';\n\n// Based on: https://develop.sentry.dev/sdk/envelopes/\n\ntype CommonEnvelopeHeaders = {\n  dsn?: string;\n  sdk?: SdkInfo;\n};\n\ntype CommonEnvelopeItemHeaders = {\n  length?: number;\n};\n\n/**\n * 1st Item: Item headers\n * 2nd Item: Item payload\n */\ntype BaseEnvelopeItem<ItemHeader extends { type: string }, Payload = unknown> = [\n  CommonEnvelopeItemHeaders & ItemHeader,\n  Payload,\n];\n\ntype UnknownEnvelopeItem = BaseEnvelopeItem<{ type: '__unknown__' }>;\n\ntype BaseEnvelope<\n  EnvelopeHeaders extends Record<string, unknown>,\n  EnvelopeItem extends BaseEnvelopeItem<{ type: string }>,\n> = {\n  headers: CommonEnvelopeHeaders & EnvelopeHeaders;\n  items: Array<EnvelopeItem | UnknownEnvelopeItem>;\n};\n\nexport type EventEnvelopeItem = BaseEnvelopeItem<{ type: 'event' | 'transaction' }, Event>;\n\ntype AttachmentEnvelopeItem = BaseEnvelopeItem<{ type: 'attachment'; filename: 'string' }>;\n\ntype UserFeedbackEnvelopeItem = BaseEnvelopeItem<\n  { type: 'user_report' },\n  {\n    event_id: string;\n    email: User['email'];\n    name: string;\n    comments: string;\n  }\n>;\n\nexport type EventEnvelope = BaseEnvelope<\n  { event_id: string; sent_at: string },\n  EventEnvelopeItem | AttachmentEnvelopeItem | UserFeedbackEnvelopeItem\n>;\n\nexport type SessionEnvelopeItem =\n  | BaseEnvelopeItem<{ type: 'session' }, Session>\n  | BaseEnvelopeItem<{ type: 'sessions' }, SessionAggregates>;\n\nexport type SessionEnvelope = BaseEnvelope<{ sent_at: string }, SessionEnvelopeItem>;\n\nexport type ClientReportEnvelopeItem = BaseEnvelopeItem<\n  { type: 'client_report' },\n  { timestamp: number; discarded_events: { reason: Outcome; category: SentryRequestType; quantity: number } }\n>;\n\nexport type ClientReportEnvelope = BaseEnvelope<Record<string, unknown>, ClientReportEnvelopeItem>;\n\nexport type Envelope = EventEnvelope | SessionEnvelope | ClientReportEnvelope;\n"]}