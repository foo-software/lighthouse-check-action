export type Node = import('./base-node.js').Node;
export type URLArtifact = Omit<LH.Artifacts['URL'], 'finalDisplayedUrl'>;
export type NetworkNodeOutput = {
    nodes: Array<NetworkNode>;
    idToNodeMap: Map<string, NetworkNode>;
    urlToNodeMap: Map<string, Array<NetworkNode>>;
    frameIdToNodeMap: Map<string, NetworkNode | null>;
};
export class PageDependencyGraph {
    /**
     * @param {Lantern.NetworkRequest} record
     * @return {Array<string>}
     */
    static getNetworkInitiators(record: Lantern.NetworkRequest): Array<string>;
    /**
     * @param {Array<Lantern.NetworkRequest>} networkRecords
     * @return {NetworkNodeOutput}
     */
    static getNetworkNodeOutput(networkRecords: Array<Lantern.NetworkRequest>): NetworkNodeOutput;
    /**
     * @param {LH.TraceEvent[]} mainThreadEvents
     * @return {Array<CPUNode>}
     */
    static getCPUNodes(mainThreadEvents: LH.TraceEvent[]): Array<CPUNode>;
    /**
     * @param {NetworkNode} rootNode
     * @param {NetworkNodeOutput} networkNodeOutput
     */
    static linkNetworkNodes(rootNode: NetworkNode, networkNodeOutput: NetworkNodeOutput): void;
    /**
     * @param {Node} rootNode
     * @param {NetworkNodeOutput} networkNodeOutput
     * @param {Array<CPUNode>} cpuNodes
     */
    static linkCPUNodes(rootNode: Node, networkNodeOutput: NetworkNodeOutput, cpuNodes: Array<CPUNode>): void;
    /**
     * Removes the given node from the graph, but retains all paths between its dependencies and
     * dependents.
     * @param {Node} node
     */
    static _pruneNode(node: Node): void;
    /**
     * @param {LH.TraceEvent[]} mainThreadEvents
     * @param {Array<Lantern.NetworkRequest>} networkRecords
     * @param {URLArtifact} URL
     * @return {Node}
     */
    static createGraph(mainThreadEvents: LH.TraceEvent[], networkRecords: Array<Lantern.NetworkRequest>, URL: URLArtifact): Node;
    /**
     *
     * @param {Node} rootNode
     */
    static printGraph(rootNode: Node, widthInCharacters?: number): void;
}
import { NetworkNode } from './network-node.js';
import * as Lantern from './types/lantern.js';
import { CPUNode } from './cpu-node.js';
//# sourceMappingURL=page-dependency-graph.d.ts.map