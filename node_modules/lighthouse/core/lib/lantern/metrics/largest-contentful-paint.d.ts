export type Node = import('../base-node.js').Node;
/** @typedef {import('../base-node.js').Node} Node */
export class LargestContentfulPaint extends Metric {
    /**
     * Low priority image nodes are usually offscreen and very unlikely to be the
     * resource that is required for LCP. Our LCP graphs include everything except for these images.
     *
     * @param {Node} node
     * @return {boolean}
     */
    static isNotLowPriorityImageNode(node: Node): boolean;
    /**
     * @param {LH.Gatherer.Simulation.Result} simulationResult
     * @return {LH.Gatherer.Simulation.Result}
     */
    static getEstimateFromSimulation(simulationResult: LH.Gatherer.Simulation.Result): LH.Gatherer.Simulation.Result;
}
import { Metric } from '../metric.js';
//# sourceMappingURL=largest-contentful-paint.d.ts.map